// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "BoxOffice.pb.h"

@implementation BoxOffice
static FileDescriptor* descriptor = nil;
static ProtocolBufferDescriptor* internal_static_ShowtimeProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_ShowtimeProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_ShowtimeProto_descriptor {
    return internal_static_ShowtimeProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_ShowtimeProto_fieldAccessorTable {
    return internal_static_ShowtimeProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_AllShowtimesProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_AllShowtimesProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_AllShowtimesProto_descriptor {
    return internal_static_AllShowtimesProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_AllShowtimesProto_fieldAccessorTable {
    return internal_static_AllShowtimesProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_MovieProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_MovieProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_MovieProto_descriptor {
    return internal_static_MovieProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_MovieProto_fieldAccessorTable {
    return internal_static_MovieProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_TheaterProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_TheaterProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_TheaterProto_descriptor {
    return internal_static_TheaterProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_TheaterProto_fieldAccessorTable {
    return internal_static_TheaterProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_TheaterListingsProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_TheaterListingsProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_TheaterListingsProto_descriptor {
    return internal_static_TheaterListingsProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_TheaterListingsProto_fieldAccessorTable {
    return internal_static_TheaterListingsProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor {
    return internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable {
    return internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor {
    return internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable {
    return internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_ReviewProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_ReviewProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_ReviewProto_descriptor {
    return internal_static_ReviewProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_ReviewProto_fieldAccessorTable {
    return internal_static_ReviewProto_fieldAccessorTable;
}
static ProtocolBufferDescriptor* internal_static_ReviewsListProto_descriptor = nil;
static GeneratedMessage_FieldAccessorTable* internal_static_ReviewsListProto_fieldAccessorTable = nil;
+ (ProtocolBufferDescriptor*) internal_static_ReviewsListProto_descriptor {
    return internal_static_ReviewsListProto_descriptor;
}
+ (GeneratedMessage_FieldAccessorTable*) internal_static_ReviewsListProto_fieldAccessorTable {
    return internal_static_ReviewsListProto_fieldAccessorTable;
}
+ (void) initialize {
    if (self == [BoxOffice class]) {
        descriptor = [[BoxOffice buildDescriptor] retain];
        internal_static_ShowtimeProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:0] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Time",
                                   @"Url",
                                   @"Dubbed",
                                   @"Subtitled",
                                   nil];
            internal_static_ShowtimeProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_ShowtimeProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[ShowtimeProto class]
                                                         builderClass:[ShowtimeProto_Builder class]] retain];
        }
        internal_static_AllShowtimesProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:1] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Showtimes",
                                   @"Vendor",
                                   @"Captioning",
                                   nil];
            internal_static_AllShowtimesProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_AllShowtimesProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[AllShowtimesProto class]
                                                         builderClass:[AllShowtimesProto_Builder class]] retain];
        }
        internal_static_MovieProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:2] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Identifier",
                                   @"Title",
                                   @"Length",
                                   @"Language",
                                   @"Genre",
                                   @"Description",
                                   @"RawRating",
                                   @"Score",
                                   @"IMDbUrl",
                                   @"Director",
                                   @"Cast",
                                   @"Dubbed",
                                   @"Subtitled",
                                   @"ReleaseDate",
                                   nil];
            internal_static_MovieProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_MovieProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[MovieProto class]
                                                         builderClass:[MovieProto_Builder class]] retain];
        }
        internal_static_TheaterProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:3] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Identifier",
                                   @"Name",
                                   @"StreetAddress",
                                   @"City",
                                   @"State",
                                   @"PostalCode",
                                   @"Country",
                                   @"Phone",
                                   @"Latitude",
                                   @"Longitude",
                                   nil];
            internal_static_TheaterProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_TheaterProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[TheaterProto class]
                                                         builderClass:[TheaterProto_Builder class]] retain];
        }
        internal_static_TheaterListingsProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:4] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Movies",
                                   @"TheaterAndMovieShowtimes",
                                   nil];
            internal_static_TheaterListingsProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_TheaterListingsProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[TheaterListingsProto class]
                                                         builderClass:[TheaterListingsProto_Builder class]] retain];
        }
        internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor = [[[internal_static_TheaterListingsProto_descriptor getNestedTypes] objectAtIndex:0] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Theater",
                                   @"MovieAndShowtimes",
                                   nil];
            internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[TheaterAndMovieShowtimesProto class]
                                                         builderClass:[TheaterAndMovieShowtimesProto_Builder class]] retain];
        }
        internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor = [[[internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor getNestedTypes] objectAtIndex:0] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"MovieIdentifier",
                                   @"Showtimes",
                                   nil];
            internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[MovieAndShowtimesProto class]
                                                         builderClass:[MovieAndShowtimesProto_Builder class]] retain];
        }
        internal_static_ReviewProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:5] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Title",
                                   @"Url",
                                   @"Rating",
                                   @"Snippet",
                                   @"Content",
                                   @"Publisher",
                                   @"Author",
                                   @"Date",
                                   nil];
            internal_static_ReviewProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_ReviewProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[ReviewProto class]
                                                         builderClass:[ReviewProto_Builder class]] retain];
        }
        internal_static_ReviewsListProto_descriptor = [[[self getDescriptor].getMessageTypes objectAtIndex:6] retain];
        {
            NSArray* fieldNames = [NSArray arrayWithObjects:
                                   @"Reviews",
                                   nil];
            internal_static_ReviewsListProto_fieldAccessorTable =
            [[GeneratedMessage_FieldAccessorTable tableWithDescriptor:internal_static_ReviewsListProto_descriptor
                                                           fieldNames:fieldNames
                                                         messageClass:[ReviewsListProto class]
                                                         builderClass:[ReviewsListProto_Builder class]] retain];
        }
    }
}
+ (FileDescriptor*) getDescriptor {
    return descriptor;
}
+ (FileDescriptor*) buildDescriptor {
    NSString* descriptorData = [NSString stringWithCString:
                                "\n\017BoxOffice.proto\"M\n\rShowtimeProto\022\014\n\004Ti"
                                "me\030\001 \002(\t\022\013\n\003Url\030\002 \001(\t\022\016\n\006Dubbed\030\003 \003(\t\022\021\n"
                                "\tSubtitled\030\004 \003(\t\"Z\n\021AllShowtimesProto\022!\n"
                                "\tShowtimes\030\001 \003(\0132\016.ShowtimeProto\022\016\n\006Vend"
                                "or\030\002 \001(\t\022\022\n\nCaptioning\030\003 \001(\t\"\200\002\n\nMoviePr"
                                "oto\022\022\n\nIdentifier\030\001 \001(\t\022\r\n\005Title\030\002 \001(\t\022\016"
                                "\n\006Length\030\003 \001(\005\022\020\n\010Language\030\004 \001(\t\022\r\n\005Genr"
                                "e\030\005 \001(\t\022\023\n\013Description\030\006 \001(\t\022\021\n\tRawRatin"
                                "g\030\010 \001(\t\022\r\n\005Score\030\t \001(\005\022\017\n\007IMDbUrl\030\n \001(\t\022"
                                "\020\n\010Director\030\013 \003(\t\022\014\n\004Cast\030\014 \003(\t\022\016\n\006Dubbe"
                                "d\030\r \003(\t\022\021\n\tSubtitled\030\016 \003(\t\022\023\n\013ReleaseDat"
                                "e\030\017 \001(\t\"\275\001\n\014TheaterProto\022\022\n\nIdentifier\030\001"
                                " \001(\t\022\014\n\004Name\030\002 \001(\t\022\025\n\rStreetAddress\030\003 \001("
                                "\t\022\014\n\004City\030\004 \001(\t\022\r\n\005State\030\005 \001(\t\022\022\n\nPostal"
                                "Code\030\006 \001(\t\022\017\n\007Country\030\007 \001(\t\022\r\n\005Phone\030\010 \001"
                                "(\t\022\020\n\010Latitude\030\t \001(\001\022\021\n\tLongitude\030\n \001(\001\""
                                "\215\003\n\024TheaterListingsProto\022\033\n\006Movies\030\005 \003(\013"
                                "2\013.MovieProto\022U\n\030TheaterAndMovieShowtime"
                                "s\030\006 \003(\01323.TheaterListingsProto.TheaterAn"
                                "dMovieShowtimesProto\032\200\002\n\035TheaterAndMovie"
                                "ShowtimesProto\022\036\n\007Theater\030\003 \002(\0132\r.Theate"
                                "rProto\022e\n\021MovieAndShowtimes\030\004 \003(\0132J.Thea"
                                "terListingsProto.TheaterAndMovieShowtime"
                                "sProto.MovieAndShowtimesProto\032X\n\026MovieAn"
                                "dShowtimesProto\022\027\n\017MovieIdentifier\030\001 \002(\t"
                                "\022%\n\tShowtimes\030\002 \002(\0132\022.AllShowtimesProto\""
                                "\214\001\n\013ReviewProto\022\r\n\005Title\030\001 \001(\t\022\013\n\003Url\030\002 "
                                "\001(\t\022\016\n\006Rating\030\003 \001(\002\022\017\n\007Snippet\030\004 \001(\t\022\017\n\007"
                                "Content\030\005 \001(\t\022\021\n\tPublisher\030\006 \001(\t\022\016\n\006Auth"
                                "or\030\007 \001(\t\022\014\n\004Date\030\010 \001(\t\"1\n\020ReviewsListPro"
                                "to\022\035\n\007reviews\030\001 \003(\0132\014.ReviewProto"
                                ];
    NSArray* dependencies = [NSArray arrayWithObjects:
                             nil];
    return [FileDescriptor internalBuildGeneratedFileFrom:descriptorData dependencies:dependencies];
}
@end

@implementation ShowtimeProto

@synthesize hasTime;
@synthesize time_;
@synthesize hasUrl;
@synthesize url_;
@synthesize dubbed_;
@synthesize subtitled_;
- (void) dealloc {
    self.hasTime = NO;
    self.time_ = nil;
    self.hasUrl = NO;
    self.url_ = nil;
    self.dubbed_ = nil;
    self.subtitled_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
        self.time_ = @"";
        self.url_ = @"";
    }
    return self;
}
static ShowtimeProto* defaultShowtimeProtoInstance = nil;
+ (void) initialize {
    if (self == [ShowtimeProto class]) {
        defaultShowtimeProtoInstance = [[ShowtimeProto alloc] init];
    }
}

+ (ShowtimeProto*) getDefaultInstance {
    return defaultShowtimeProtoInstance;
}

- (ShowtimeProto*) getDefaultInstanceForType {
    return defaultShowtimeProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_ShowtimeProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_ShowtimeProto_fieldAccessorTable];
}

- (BOOL) hasTime { return hasTime; }
- (NSString*) getTime { return time_; }

- (BOOL) hasUrl { return hasUrl; }
- (NSString*) getUrl { return url_; }

- (NSArray*) getDubbedList {
    return dubbed_;
}
- (int32_t) getDubbedCount { return dubbed_.count; }
- (NSString*) getDubbed:(int32_t) index {
    return [dubbed_ objectAtIndex:index];
}

- (NSArray*) getSubtitledList {
    return subtitled_;
}
- (int32_t) getSubtitledCount { return subtitled_.count; }
- (NSString*) getSubtitled:(int32_t) index {
    return [subtitled_ objectAtIndex:index];
}

- (BOOL) isInitialized {
    if (!self.hasTime) return false;
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    if (hasTime) {
        [output writeString:1 value:self.getTime];
    }
    if (hasUrl) {
        [output writeString:2 value:self.getUrl];
    }
    for (NSString* element in self.getDubbedList) {
        [output writeString:3 value:element];
    }
    for (NSString* element in self.getSubtitledList) {
        [output writeString:4 value:element];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hasTime) {
        size += computeStringSize(1, self.getTime);
    }
    if (hasUrl) {
        size += computeStringSize(2, self.getUrl);
    }
    for (NSString* element in self.getDubbedList) {
        size += computeStringSize(3, element);
    }
    for (NSString* element in self.getSubtitledList) {
        size += computeStringSize(4, element);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (ShowtimeProto*) parseFromData:(NSData*) data {
    return (ShowtimeProto*)[[[ShowtimeProto newBuilder] mergeFromData:data] buildParsed];
}
+ (ShowtimeProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ShowtimeProto*)[[[ShowtimeProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (ShowtimeProto*) parseFromInputStream:(NSInputStream*) input {
    return (ShowtimeProto*)[[[ShowtimeProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (ShowtimeProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ShowtimeProto*)[[[ShowtimeProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (ShowtimeProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (ShowtimeProto*)[[[ShowtimeProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (ShowtimeProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ShowtimeProto*)[[[ShowtimeProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (ShowtimeProto_Builder*) newBuilder { return [[[ShowtimeProto_Builder alloc] init] autorelease]; }
- (ShowtimeProto_Builder*) newBuilderForType { return [ShowtimeProto newBuilder]; }
+ (ShowtimeProto_Builder*) newBuilderWithShowtimeProto:(ShowtimeProto*) prototype {
    return [[ShowtimeProto newBuilder] mergeFromShowtimeProto:prototype];
}

@end

@implementation ShowtimeProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[ShowtimeProto alloc] init] autorelease];
    }
    return self;
}
- (ShowtimeProto*) internalGetResult {
    return result;
}

- (ShowtimeProto_Builder*) clear {
    self.result = [[[ShowtimeProto alloc] init] autorelease];
    return self;
}

- (ShowtimeProto_Builder*) clone {
    return (ShowtimeProto_Builder*)[[[[ShowtimeProto_Builder alloc] init] autorelease] mergeFromShowtimeProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [ShowtimeProto getDescriptor];
}

- (ShowtimeProto*) getDefaultInstanceForType {
    return [ShowtimeProto getDefaultInstance];
}

- (ShowtimeProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (ShowtimeProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (ShowtimeProto*) buildPartial {
    ShowtimeProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (ShowtimeProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[ShowtimeProto class]]) {
        return [self mergeFromShowtimeProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (ShowtimeProto_Builder*) mergeFromShowtimeProto:(ShowtimeProto*) other {
    if (other == [ShowtimeProto getDefaultInstance]) return self;
    if (other.hasTime) {
        [self setTime:other.getTime];
    }
    if (other.hasUrl) {
        [self setUrl:other.getUrl];
    }
    if (other.dubbed_.count > 0) {
        if (result.dubbed_ == nil) {
            result.dubbed_ = [NSMutableArray array];
        }
        [result.dubbed_ addObjectsFromArray:other.dubbed_];
    }
    if (other.subtitled_.count > 0) {
        if (result.subtitled_ == nil) {
            result.subtitled_ = [NSMutableArray array];
        }
        [result.subtitled_ addObjectsFromArray:other.subtitled_];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (ShowtimeProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (ShowtimeProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                [self setTime:[input readString]];
                break;
            }
            case 18: {
                [self setUrl:[input readString]];
                break;
            }
            case 26: {
                [self addDubbed:[input readString]];
                break;
            }
            case 34: {
                [self addSubtitled:[input readString]];
                break;
            }
        }
    }
}


- (BOOL) hasTime {
    return result.hasTime;
}
- (NSString*) getTime {
    return result.getTime;
}
- (ShowtimeProto_Builder*) setTime:(NSString*) value {
    result.hasTime = YES;
    result.time_ = value;
    return self;
}
- (ShowtimeProto_Builder*) clearTime {
    result.hasTime = NO;
    result.time_ = @"";
    return self;
}

- (BOOL) hasUrl {
    return result.hasUrl;
}
- (NSString*) getUrl {
    return result.getUrl;
}
- (ShowtimeProto_Builder*) setUrl:(NSString*) value {
    result.hasUrl = YES;
    result.url_ = value;
    return self;
}
- (ShowtimeProto_Builder*) clearUrl {
    result.hasUrl = NO;
    result.url_ = @"";
    return self;
}

- (NSArray*) getDubbedList {
    if (result.dubbed_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithArray:result.dubbed_];
}
- (int32_t) getDubbedCount {
    return result.getDubbedCount;
}
- (NSString*) getDubbed:(int32_t) index {
    return [result getDubbed:index];
}
- (ShowtimeProto_Builder*) setDubbed:(int32_t) index value:(NSString*) value {
    [result.dubbed_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (ShowtimeProto_Builder*) addDubbed:(NSString*) value {
    if (result.dubbed_ == nil) {
        result.dubbed_ = [NSMutableArray array];
    }
    [result.dubbed_ addObject:value];
    return self;
}
- (ShowtimeProto_Builder*) addAllDubbed:(NSArray*) values {
    if (result.dubbed_ == nil) {
        result.dubbed_ = [NSMutableArray array];
    }
    [result.dubbed_ addObjectsFromArray:values];
    return self;
}
- (ShowtimeProto_Builder*) clearDubbed {
    result.dubbed_ = nil;
    return self;
}

- (NSArray*) getSubtitledList {
    if (result.subtitled_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithArray:result.subtitled_];
}
- (int32_t) getSubtitledCount {
    return result.getSubtitledCount;
}
- (NSString*) getSubtitled:(int32_t) index {
    return [result getSubtitled:index];
}
- (ShowtimeProto_Builder*) setSubtitled:(int32_t) index value:(NSString*) value {
    [result.subtitled_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (ShowtimeProto_Builder*) addSubtitled:(NSString*) value {
    if (result.subtitled_ == nil) {
        result.subtitled_ = [NSMutableArray array];
    }
    [result.subtitled_ addObject:value];
    return self;
}
- (ShowtimeProto_Builder*) addAllSubtitled:(NSArray*) values {
    if (result.subtitled_ == nil) {
        result.subtitled_ = [NSMutableArray array];
    }
    [result.subtitled_ addObjectsFromArray:values];
    return self;
}
- (ShowtimeProto_Builder*) clearSubtitled {
    result.subtitled_ = nil;
    return self;
}
@end

@implementation AllShowtimesProto

@synthesize showtimes_;
@synthesize hasVendor;
@synthesize vendor_;
@synthesize hasCaptioning;
@synthesize captioning_;
- (void) dealloc {
    self.showtimes_ = nil;
    self.hasVendor = NO;
    self.vendor_ = nil;
    self.hasCaptioning = NO;
    self.captioning_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
        self.vendor_ = @"";
        self.captioning_ = @"";
    }
    return self;
}
static AllShowtimesProto* defaultAllShowtimesProtoInstance = nil;
+ (void) initialize {
    if (self == [AllShowtimesProto class]) {
        defaultAllShowtimesProtoInstance = [[AllShowtimesProto alloc] init];
    }
}

+ (AllShowtimesProto*) getDefaultInstance {
    return defaultAllShowtimesProtoInstance;
}

- (AllShowtimesProto*) getDefaultInstanceForType {
    return defaultAllShowtimesProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_AllShowtimesProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_AllShowtimesProto_fieldAccessorTable];
}

- (NSArray*) getShowtimesList {
    return showtimes_;
}
- (int32_t) getShowtimesCount { return showtimes_.count; }
- (ShowtimeProto*) getShowtimes:(int32_t) index {
    return [showtimes_ objectAtIndex:index];
}

- (BOOL) hasVendor { return hasVendor; }
- (NSString*) getVendor { return vendor_; }

- (BOOL) hasCaptioning { return hasCaptioning; }
- (NSString*) getCaptioning { return captioning_; }

- (BOOL) isInitialized {
    for (ShowtimeProto* element in self.getShowtimesList) {
        if (!element.isInitialized) return false;
    }
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    for (ShowtimeProto* element in self.getShowtimesList) {
        [output writeMessage:1 value:element];
    }
    if (hasVendor) {
        [output writeString:2 value:self.getVendor];
    }
    if (hasCaptioning) {
        [output writeString:3 value:self.getCaptioning];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (ShowtimeProto* element in self.getShowtimesList) {
        size += computeMessageSize(1, element);
    }
    if (hasVendor) {
        size += computeStringSize(2, self.getVendor);
    }
    if (hasCaptioning) {
        size += computeStringSize(3, self.getCaptioning);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (AllShowtimesProto*) parseFromData:(NSData*) data {
    return (AllShowtimesProto*)[[[AllShowtimesProto newBuilder] mergeFromData:data] buildParsed];
}
+ (AllShowtimesProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (AllShowtimesProto*)[[[AllShowtimesProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (AllShowtimesProto*) parseFromInputStream:(NSInputStream*) input {
    return (AllShowtimesProto*)[[[AllShowtimesProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (AllShowtimesProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (AllShowtimesProto*)[[[AllShowtimesProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (AllShowtimesProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (AllShowtimesProto*)[[[AllShowtimesProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (AllShowtimesProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (AllShowtimesProto*)[[[AllShowtimesProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (AllShowtimesProto_Builder*) newBuilder { return [[[AllShowtimesProto_Builder alloc] init] autorelease]; }
- (AllShowtimesProto_Builder*) newBuilderForType { return [AllShowtimesProto newBuilder]; }
+ (AllShowtimesProto_Builder*) newBuilderWithAllShowtimesProto:(AllShowtimesProto*) prototype {
    return [[AllShowtimesProto newBuilder] mergeFromAllShowtimesProto:prototype];
}

@end

@implementation AllShowtimesProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[AllShowtimesProto alloc] init] autorelease];
    }
    return self;
}
- (AllShowtimesProto*) internalGetResult {
    return result;
}

- (AllShowtimesProto_Builder*) clear {
    self.result = [[[AllShowtimesProto alloc] init] autorelease];
    return self;
}

- (AllShowtimesProto_Builder*) clone {
    return (AllShowtimesProto_Builder*)[[[[AllShowtimesProto_Builder alloc] init] autorelease] mergeFromAllShowtimesProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [AllShowtimesProto getDescriptor];
}

- (AllShowtimesProto*) getDefaultInstanceForType {
    return [AllShowtimesProto getDefaultInstance];
}

- (AllShowtimesProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (AllShowtimesProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (AllShowtimesProto*) buildPartial {
    AllShowtimesProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (AllShowtimesProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[AllShowtimesProto class]]) {
        return [self mergeFromAllShowtimesProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (AllShowtimesProto_Builder*) mergeFromAllShowtimesProto:(AllShowtimesProto*) other {
    if (other == [AllShowtimesProto getDefaultInstance]) return self;
    if (other.showtimes_.count > 0) {
        if (result.showtimes_ == nil) {
            result.showtimes_ = [NSMutableArray array];
        }
        [result.showtimes_ addObjectsFromArray:other.showtimes_];
    }
    if (other.hasVendor) {
        [self setVendor:other.getVendor];
    }
    if (other.hasCaptioning) {
        [self setCaptioning:other.getCaptioning];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (AllShowtimesProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (AllShowtimesProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                ShowtimeProto_Builder* subBuilder = [ShowtimeProto newBuilder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addShowtimes:[subBuilder buildPartial]];
                break;
            }
            case 18: {
                [self setVendor:[input readString]];
                break;
            }
            case 26: {
                [self setCaptioning:[input readString]];
                break;
            }
        }
    }
}


- (NSArray*) getShowtimesList {
    if (result.showtimes_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithObjects:result.showtimes_];
}
- (int32_t) getShowtimesCount {
    return result.getShowtimesCount;
}
- (ShowtimeProto*) getShowtimes:(int32_t) index {
    return [result getShowtimes:index];
}
- (AllShowtimesProto_Builder*) setShowtimes:(int32_t) index value:(ShowtimeProto*) value {
    [result.showtimes_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (AllShowtimesProto_Builder*) setShowtimes:(int32_t) index builderForValue:(ShowtimeProto_Builder*) builderForValue {
    [result.showtimes_ replaceObjectAtIndex:index withObject:[builderForValue build]];
    return self;
}
- (AllShowtimesProto_Builder*) addShowtimesBuilder:(ShowtimeProto_Builder*) builderForValue {
    if (result.showtimes_ == nil) {
        result.showtimes_ = [NSMutableArray array];
    }
    [result.showtimes_ addObject:[builderForValue build]];
    return self;
}
- (AllShowtimesProto_Builder*) addAllShowtimes:(NSArray*) values {
    if (result.showtimes_ == nil) {
        result.showtimes_ = [NSMutableArray array];
    }
    [result.showtimes_ addObjectsFromArray:values];
    return self;
}
- (AllShowtimesProto_Builder*) clearShowtimes {
    result.showtimes_ = nil;
    return self;
}
- (AllShowtimesProto_Builder*) addShowtimes:(ShowtimeProto*) value {
    if (result.showtimes_ == nil) {
        result.showtimes_ = [NSMutableArray array];
    }
    [result.showtimes_ addObject:value];
    return self;
}

- (BOOL) hasVendor {
    return result.hasVendor;
}
- (NSString*) getVendor {
    return result.getVendor;
}
- (AllShowtimesProto_Builder*) setVendor:(NSString*) value {
    result.hasVendor = YES;
    result.vendor_ = value;
    return self;
}
- (AllShowtimesProto_Builder*) clearVendor {
    result.hasVendor = NO;
    result.vendor_ = @"";
    return self;
}

- (BOOL) hasCaptioning {
    return result.hasCaptioning;
}
- (NSString*) getCaptioning {
    return result.getCaptioning;
}
- (AllShowtimesProto_Builder*) setCaptioning:(NSString*) value {
    result.hasCaptioning = YES;
    result.captioning_ = value;
    return self;
}
- (AllShowtimesProto_Builder*) clearCaptioning {
    result.hasCaptioning = NO;
    result.captioning_ = @"";
    return self;
}
@end

@implementation MovieProto

@synthesize hasIdentifier;
@synthesize identifier_;
@synthesize hasTitle;
@synthesize title_;
@synthesize hasLength;
@synthesize length_;
@synthesize hasLanguage;
@synthesize language_;
@synthesize hasGenre;
@synthesize genre_;
@synthesize hasDescription;
@synthesize description_;
@synthesize hasRawRating;
@synthesize rawRating_;
@synthesize hasScore;
@synthesize score_;
@synthesize hasIMDbUrl;
@synthesize iMDbUrl_;
@synthesize director_;
@synthesize cast_;
@synthesize dubbed_;
@synthesize subtitled_;
@synthesize hasReleaseDate;
@synthesize releaseDate_;
- (void) dealloc {
    self.hasIdentifier = NO;
    self.identifier_ = nil;
    self.hasTitle = NO;
    self.title_ = nil;
    self.hasLength = NO;
    self.length_ = 0;
    self.hasLanguage = NO;
    self.language_ = nil;
    self.hasGenre = NO;
    self.genre_ = nil;
    self.hasDescription = NO;
    self.description_ = nil;
    self.hasRawRating = NO;
    self.rawRating_ = nil;
    self.hasScore = NO;
    self.score_ = 0;
    self.hasIMDbUrl = NO;
    self.iMDbUrl_ = nil;
    self.director_ = nil;
    self.cast_ = nil;
    self.dubbed_ = nil;
    self.subtitled_ = nil;
    self.hasReleaseDate = NO;
    self.releaseDate_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
        self.identifier_ = @"";
        self.title_ = @"";
        self.length_ = 0;
        self.language_ = @"";
        self.genre_ = @"";
        self.description_ = @"";
        self.rawRating_ = @"";
        self.score_ = 0;
        self.iMDbUrl_ = @"";
        self.releaseDate_ = @"";
    }
    return self;
}
static MovieProto* defaultMovieProtoInstance = nil;
+ (void) initialize {
    if (self == [MovieProto class]) {
        defaultMovieProtoInstance = [[MovieProto alloc] init];
    }
}

+ (MovieProto*) getDefaultInstance {
    return defaultMovieProtoInstance;
}

- (MovieProto*) getDefaultInstanceForType {
    return defaultMovieProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_MovieProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_MovieProto_fieldAccessorTable];
}

- (BOOL) hasIdentifier { return hasIdentifier; }
- (NSString*) getIdentifier { return identifier_; }

- (BOOL) hasTitle { return hasTitle; }
- (NSString*) getTitle { return title_; }

- (BOOL) hasLength { return hasLength; }
- (int32_t) getLength { return length_; }

- (BOOL) hasLanguage { return hasLanguage; }
- (NSString*) getLanguage { return language_; }

- (BOOL) hasGenre { return hasGenre; }
- (NSString*) getGenre { return genre_; }

- (BOOL) hasDescription { return hasDescription; }
- (NSString*) getDescription { return description_; }

- (BOOL) hasRawRating { return hasRawRating; }
- (NSString*) getRawRating { return rawRating_; }

- (BOOL) hasScore { return hasScore; }
- (int32_t) getScore { return score_; }

- (BOOL) hasIMDbUrl { return hasIMDbUrl; }
- (NSString*) getIMDbUrl { return iMDbUrl_; }

- (NSArray*) getDirectorList {
    return director_;
}
- (int32_t) getDirectorCount { return director_.count; }
- (NSString*) getDirector:(int32_t) index {
    return [director_ objectAtIndex:index];
}

- (NSArray*) getCastList {
    return cast_;
}
- (int32_t) getCastCount { return cast_.count; }
- (NSString*) getCast:(int32_t) index {
    return [cast_ objectAtIndex:index];
}

- (NSArray*) getDubbedList {
    return dubbed_;
}
- (int32_t) getDubbedCount { return dubbed_.count; }
- (NSString*) getDubbed:(int32_t) index {
    return [dubbed_ objectAtIndex:index];
}

- (NSArray*) getSubtitledList {
    return subtitled_;
}
- (int32_t) getSubtitledCount { return subtitled_.count; }
- (NSString*) getSubtitled:(int32_t) index {
    return [subtitled_ objectAtIndex:index];
}

- (BOOL) hasReleaseDate { return hasReleaseDate; }
- (NSString*) getReleaseDate { return releaseDate_; }

- (BOOL) isInitialized {
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    if (hasIdentifier) {
        [output writeString:1 value:self.getIdentifier];
    }
    if (hasTitle) {
        [output writeString:2 value:self.getTitle];
    }
    if (hasLength) {
        [output writeInt32:3 value:self.getLength];
    }
    if (hasLanguage) {
        [output writeString:4 value:self.getLanguage];
    }
    if (hasGenre) {
        [output writeString:5 value:self.getGenre];
    }
    if (hasDescription) {
        [output writeString:6 value:self.getDescription];
    }
    if (hasRawRating) {
        [output writeString:8 value:self.getRawRating];
    }
    if (hasScore) {
        [output writeInt32:9 value:self.getScore];
    }
    if (hasIMDbUrl) {
        [output writeString:10 value:self.getIMDbUrl];
    }
    for (NSString* element in self.getDirectorList) {
        [output writeString:11 value:element];
    }
    for (NSString* element in self.getCastList) {
        [output writeString:12 value:element];
    }
    for (NSString* element in self.getDubbedList) {
        [output writeString:13 value:element];
    }
    for (NSString* element in self.getSubtitledList) {
        [output writeString:14 value:element];
    }
    if (hasReleaseDate) {
        [output writeString:15 value:self.getReleaseDate];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hasIdentifier) {
        size += computeStringSize(1, self.getIdentifier);
    }
    if (hasTitle) {
        size += computeStringSize(2, self.getTitle);
    }
    if (hasLength) {
        size += computeInt32Size(3, self.getLength);
    }
    if (hasLanguage) {
        size += computeStringSize(4, self.getLanguage);
    }
    if (hasGenre) {
        size += computeStringSize(5, self.getGenre);
    }
    if (hasDescription) {
        size += computeStringSize(6, self.getDescription);
    }
    if (hasRawRating) {
        size += computeStringSize(8, self.getRawRating);
    }
    if (hasScore) {
        size += computeInt32Size(9, self.getScore);
    }
    if (hasIMDbUrl) {
        size += computeStringSize(10, self.getIMDbUrl);
    }
    for (NSString* element in self.getDirectorList) {
        size += computeStringSize(11, element);
    }
    for (NSString* element in self.getCastList) {
        size += computeStringSize(12, element);
    }
    for (NSString* element in self.getDubbedList) {
        size += computeStringSize(13, element);
    }
    for (NSString* element in self.getSubtitledList) {
        size += computeStringSize(14, element);
    }
    if (hasReleaseDate) {
        size += computeStringSize(15, self.getReleaseDate);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (MovieProto*) parseFromData:(NSData*) data {
    return (MovieProto*)[[[MovieProto newBuilder] mergeFromData:data] buildParsed];
}
+ (MovieProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (MovieProto*)[[[MovieProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (MovieProto*) parseFromInputStream:(NSInputStream*) input {
    return (MovieProto*)[[[MovieProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (MovieProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (MovieProto*)[[[MovieProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (MovieProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (MovieProto*)[[[MovieProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (MovieProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (MovieProto*)[[[MovieProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (MovieProto_Builder*) newBuilder { return [[[MovieProto_Builder alloc] init] autorelease]; }
- (MovieProto_Builder*) newBuilderForType { return [MovieProto newBuilder]; }
+ (MovieProto_Builder*) newBuilderWithMovieProto:(MovieProto*) prototype {
    return [[MovieProto newBuilder] mergeFromMovieProto:prototype];
}

@end

@implementation MovieProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[MovieProto alloc] init] autorelease];
    }
    return self;
}
- (MovieProto*) internalGetResult {
    return result;
}

- (MovieProto_Builder*) clear {
    self.result = [[[MovieProto alloc] init] autorelease];
    return self;
}

- (MovieProto_Builder*) clone {
    return (MovieProto_Builder*)[[[[MovieProto_Builder alloc] init] autorelease] mergeFromMovieProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [MovieProto getDescriptor];
}

- (MovieProto*) getDefaultInstanceForType {
    return [MovieProto getDefaultInstance];
}

- (MovieProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (MovieProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (MovieProto*) buildPartial {
    MovieProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (MovieProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[MovieProto class]]) {
        return [self mergeFromMovieProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (MovieProto_Builder*) mergeFromMovieProto:(MovieProto*) other {
    if (other == [MovieProto getDefaultInstance]) return self;
    if (other.hasIdentifier) {
        [self setIdentifier:other.getIdentifier];
    }
    if (other.hasTitle) {
        [self setTitle:other.getTitle];
    }
    if (other.hasLength) {
        [self setLength:other.getLength];
    }
    if (other.hasLanguage) {
        [self setLanguage:other.getLanguage];
    }
    if (other.hasGenre) {
        [self setGenre:other.getGenre];
    }
    if (other.hasDescription) {
        [self setDescription:other.getDescription];
    }
    if (other.hasRawRating) {
        [self setRawRating:other.getRawRating];
    }
    if (other.hasScore) {
        [self setScore:other.getScore];
    }
    if (other.hasIMDbUrl) {
        [self setIMDbUrl:other.getIMDbUrl];
    }
    if (other.director_.count > 0) {
        if (result.director_ == nil) {
            result.director_ = [NSMutableArray array];
        }
        [result.director_ addObjectsFromArray:other.director_];
    }
    if (other.cast_.count > 0) {
        if (result.cast_ == nil) {
            result.cast_ = [NSMutableArray array];
        }
        [result.cast_ addObjectsFromArray:other.cast_];
    }
    if (other.dubbed_.count > 0) {
        if (result.dubbed_ == nil) {
            result.dubbed_ = [NSMutableArray array];
        }
        [result.dubbed_ addObjectsFromArray:other.dubbed_];
    }
    if (other.subtitled_.count > 0) {
        if (result.subtitled_ == nil) {
            result.subtitled_ = [NSMutableArray array];
        }
        [result.subtitled_ addObjectsFromArray:other.subtitled_];
    }
    if (other.hasReleaseDate) {
        [self setReleaseDate:other.getReleaseDate];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (MovieProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (MovieProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                [self setIdentifier:[input readString]];
                break;
            }
            case 18: {
                [self setTitle:[input readString]];
                break;
            }
            case 24: {
                [self setLength:[input readInt32]];
                break;
            }
            case 34: {
                [self setLanguage:[input readString]];
                break;
            }
            case 42: {
                [self setGenre:[input readString]];
                break;
            }
            case 50: {
                [self setDescription:[input readString]];
                break;
            }
            case 66: {
                [self setRawRating:[input readString]];
                break;
            }
            case 72: {
                [self setScore:[input readInt32]];
                break;
            }
            case 82: {
                [self setIMDbUrl:[input readString]];
                break;
            }
            case 90: {
                [self addDirector:[input readString]];
                break;
            }
            case 98: {
                [self addCast:[input readString]];
                break;
            }
            case 106: {
                [self addDubbed:[input readString]];
                break;
            }
            case 114: {
                [self addSubtitled:[input readString]];
                break;
            }
            case 122: {
                [self setReleaseDate:[input readString]];
                break;
            }
        }
    }
}


- (BOOL) hasIdentifier {
    return result.hasIdentifier;
}
- (NSString*) getIdentifier {
    return result.getIdentifier;
}
- (MovieProto_Builder*) setIdentifier:(NSString*) value {
    result.hasIdentifier = YES;
    result.identifier_ = value;
    return self;
}
- (MovieProto_Builder*) clearIdentifier {
    result.hasIdentifier = NO;
    result.identifier_ = @"";
    return self;
}

- (BOOL) hasTitle {
    return result.hasTitle;
}
- (NSString*) getTitle {
    return result.getTitle;
}
- (MovieProto_Builder*) setTitle:(NSString*) value {
    result.hasTitle = YES;
    result.title_ = value;
    return self;
}
- (MovieProto_Builder*) clearTitle {
    result.hasTitle = NO;
    result.title_ = @"";
    return self;
}

- (BOOL) hasLength {
    return result.hasLength;
}
- (int32_t) getLength {
    return result.getLength;
}
- (MovieProto_Builder*) setLength:(int32_t) value {
    result.hasLength = YES;
    result.length_ = value;
    return self;
}
- (MovieProto_Builder*) clearLength {
    result.hasLength = NO;
    result.length_ = 0;
    return self;
}

- (BOOL) hasLanguage {
    return result.hasLanguage;
}
- (NSString*) getLanguage {
    return result.getLanguage;
}
- (MovieProto_Builder*) setLanguage:(NSString*) value {
    result.hasLanguage = YES;
    result.language_ = value;
    return self;
}
- (MovieProto_Builder*) clearLanguage {
    result.hasLanguage = NO;
    result.language_ = @"";
    return self;
}

- (BOOL) hasGenre {
    return result.hasGenre;
}
- (NSString*) getGenre {
    return result.getGenre;
}
- (MovieProto_Builder*) setGenre:(NSString*) value {
    result.hasGenre = YES;
    result.genre_ = value;
    return self;
}
- (MovieProto_Builder*) clearGenre {
    result.hasGenre = NO;
    result.genre_ = @"";
    return self;
}

- (BOOL) hasDescription {
    return result.hasDescription;
}
- (NSString*) getDescription {
    return result.getDescription;
}
- (MovieProto_Builder*) setDescription:(NSString*) value {
    result.hasDescription = YES;
    result.description_ = value;
    return self;
}
- (MovieProto_Builder*) clearDescription {
    result.hasDescription = NO;
    result.description_ = @"";
    return self;
}

- (BOOL) hasRawRating {
    return result.hasRawRating;
}
- (NSString*) getRawRating {
    return result.getRawRating;
}
- (MovieProto_Builder*) setRawRating:(NSString*) value {
    result.hasRawRating = YES;
    result.rawRating_ = value;
    return self;
}
- (MovieProto_Builder*) clearRawRating {
    result.hasRawRating = NO;
    result.rawRating_ = @"";
    return self;
}

- (BOOL) hasScore {
    return result.hasScore;
}
- (int32_t) getScore {
    return result.getScore;
}
- (MovieProto_Builder*) setScore:(int32_t) value {
    result.hasScore = YES;
    result.score_ = value;
    return self;
}
- (MovieProto_Builder*) clearScore {
    result.hasScore = NO;
    result.score_ = 0;
    return self;
}

- (BOOL) hasIMDbUrl {
    return result.hasIMDbUrl;
}
- (NSString*) getIMDbUrl {
    return result.getIMDbUrl;
}
- (MovieProto_Builder*) setIMDbUrl:(NSString*) value {
    result.hasIMDbUrl = YES;
    result.iMDbUrl_ = value;
    return self;
}
- (MovieProto_Builder*) clearIMDbUrl {
    result.hasIMDbUrl = NO;
    result.iMDbUrl_ = @"";
    return self;
}

- (NSArray*) getDirectorList {
    if (result.director_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithArray:result.director_];
}
- (int32_t) getDirectorCount {
    return result.getDirectorCount;
}
- (NSString*) getDirector:(int32_t) index {
    return [result getDirector:index];
}
- (MovieProto_Builder*) setDirector:(int32_t) index value:(NSString*) value {
    [result.director_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (MovieProto_Builder*) addDirector:(NSString*) value {
    if (result.director_ == nil) {
        result.director_ = [NSMutableArray array];
    }
    [result.director_ addObject:value];
    return self;
}
- (MovieProto_Builder*) addAllDirector:(NSArray*) values {
    if (result.director_ == nil) {
        result.director_ = [NSMutableArray array];
    }
    [result.director_ addObjectsFromArray:values];
    return self;
}
- (MovieProto_Builder*) clearDirector {
    result.director_ = nil;
    return self;
}

- (NSArray*) getCastList {
    if (result.cast_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithArray:result.cast_];
}
- (int32_t) getCastCount {
    return result.getCastCount;
}
- (NSString*) getCast:(int32_t) index {
    return [result getCast:index];
}
- (MovieProto_Builder*) setCast:(int32_t) index value:(NSString*) value {
    [result.cast_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (MovieProto_Builder*) addCast:(NSString*) value {
    if (result.cast_ == nil) {
        result.cast_ = [NSMutableArray array];
    }
    [result.cast_ addObject:value];
    return self;
}
- (MovieProto_Builder*) addAllCast:(NSArray*) values {
    if (result.cast_ == nil) {
        result.cast_ = [NSMutableArray array];
    }
    [result.cast_ addObjectsFromArray:values];
    return self;
}
- (MovieProto_Builder*) clearCast {
    result.cast_ = nil;
    return self;
}

- (NSArray*) getDubbedList {
    if (result.dubbed_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithArray:result.dubbed_];
}
- (int32_t) getDubbedCount {
    return result.getDubbedCount;
}
- (NSString*) getDubbed:(int32_t) index {
    return [result getDubbed:index];
}
- (MovieProto_Builder*) setDubbed:(int32_t) index value:(NSString*) value {
    [result.dubbed_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (MovieProto_Builder*) addDubbed:(NSString*) value {
    if (result.dubbed_ == nil) {
        result.dubbed_ = [NSMutableArray array];
    }
    [result.dubbed_ addObject:value];
    return self;
}
- (MovieProto_Builder*) addAllDubbed:(NSArray*) values {
    if (result.dubbed_ == nil) {
        result.dubbed_ = [NSMutableArray array];
    }
    [result.dubbed_ addObjectsFromArray:values];
    return self;
}
- (MovieProto_Builder*) clearDubbed {
    result.dubbed_ = nil;
    return self;
}

- (NSArray*) getSubtitledList {
    if (result.subtitled_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithArray:result.subtitled_];
}
- (int32_t) getSubtitledCount {
    return result.getSubtitledCount;
}
- (NSString*) getSubtitled:(int32_t) index {
    return [result getSubtitled:index];
}
- (MovieProto_Builder*) setSubtitled:(int32_t) index value:(NSString*) value {
    [result.subtitled_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (MovieProto_Builder*) addSubtitled:(NSString*) value {
    if (result.subtitled_ == nil) {
        result.subtitled_ = [NSMutableArray array];
    }
    [result.subtitled_ addObject:value];
    return self;
}
- (MovieProto_Builder*) addAllSubtitled:(NSArray*) values {
    if (result.subtitled_ == nil) {
        result.subtitled_ = [NSMutableArray array];
    }
    [result.subtitled_ addObjectsFromArray:values];
    return self;
}
- (MovieProto_Builder*) clearSubtitled {
    result.subtitled_ = nil;
    return self;
}

- (BOOL) hasReleaseDate {
    return result.hasReleaseDate;
}
- (NSString*) getReleaseDate {
    return result.getReleaseDate;
}
- (MovieProto_Builder*) setReleaseDate:(NSString*) value {
    result.hasReleaseDate = YES;
    result.releaseDate_ = value;
    return self;
}
- (MovieProto_Builder*) clearReleaseDate {
    result.hasReleaseDate = NO;
    result.releaseDate_ = @"";
    return self;
}
@end

@implementation TheaterProto

@synthesize hasIdentifier;
@synthesize identifier_;
@synthesize hasName;
@synthesize name_;
@synthesize hasStreetAddress;
@synthesize streetAddress_;
@synthesize hasCity;
@synthesize city_;
@synthesize hasState;
@synthesize state_;
@synthesize hasPostalCode;
@synthesize postalCode_;
@synthesize hasCountry;
@synthesize country_;
@synthesize hasPhone;
@synthesize phone_;
@synthesize hasLatitude;
@synthesize latitude_;
@synthesize hasLongitude;
@synthesize longitude_;
- (void) dealloc {
    self.hasIdentifier = NO;
    self.identifier_ = nil;
    self.hasName = NO;
    self.name_ = nil;
    self.hasStreetAddress = NO;
    self.streetAddress_ = nil;
    self.hasCity = NO;
    self.city_ = nil;
    self.hasState = NO;
    self.state_ = nil;
    self.hasPostalCode = NO;
    self.postalCode_ = nil;
    self.hasCountry = NO;
    self.country_ = nil;
    self.hasPhone = NO;
    self.phone_ = nil;
    self.hasLatitude = NO;
    self.latitude_ = 0;
    self.hasLongitude = NO;
    self.longitude_ = 0;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
        self.identifier_ = @"";
        self.name_ = @"";
        self.streetAddress_ = @"";
        self.city_ = @"";
        self.state_ = @"";
        self.postalCode_ = @"";
        self.country_ = @"";
        self.phone_ = @"";
        self.latitude_ = 0;
        self.longitude_ = 0;
    }
    return self;
}
static TheaterProto* defaultTheaterProtoInstance = nil;
+ (void) initialize {
    if (self == [TheaterProto class]) {
        defaultTheaterProtoInstance = [[TheaterProto alloc] init];
    }
}

+ (TheaterProto*) getDefaultInstance {
    return defaultTheaterProtoInstance;
}

- (TheaterProto*) getDefaultInstanceForType {
    return defaultTheaterProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_TheaterProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_TheaterProto_fieldAccessorTable];
}

- (BOOL) hasIdentifier { return hasIdentifier; }
- (NSString*) getIdentifier { return identifier_; }

- (BOOL) hasName { return hasName; }
- (NSString*) getName { return name_; }

- (BOOL) hasStreetAddress { return hasStreetAddress; }
- (NSString*) getStreetAddress { return streetAddress_; }

- (BOOL) hasCity { return hasCity; }
- (NSString*) getCity { return city_; }

- (BOOL) hasState { return hasState; }
- (NSString*) getState { return state_; }

- (BOOL) hasPostalCode { return hasPostalCode; }
- (NSString*) getPostalCode { return postalCode_; }

- (BOOL) hasCountry { return hasCountry; }
- (NSString*) getCountry { return country_; }

- (BOOL) hasPhone { return hasPhone; }
- (NSString*) getPhone { return phone_; }

- (BOOL) hasLatitude { return hasLatitude; }
- (Float64) getLatitude { return latitude_; }

- (BOOL) hasLongitude { return hasLongitude; }
- (Float64) getLongitude { return longitude_; }

- (BOOL) isInitialized {
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    if (hasIdentifier) {
        [output writeString:1 value:self.getIdentifier];
    }
    if (hasName) {
        [output writeString:2 value:self.getName];
    }
    if (hasStreetAddress) {
        [output writeString:3 value:self.getStreetAddress];
    }
    if (hasCity) {
        [output writeString:4 value:self.getCity];
    }
    if (hasState) {
        [output writeString:5 value:self.getState];
    }
    if (hasPostalCode) {
        [output writeString:6 value:self.getPostalCode];
    }
    if (hasCountry) {
        [output writeString:7 value:self.getCountry];
    }
    if (hasPhone) {
        [output writeString:8 value:self.getPhone];
    }
    if (hasLatitude) {
        [output writeDouble:9 value:self.getLatitude];
    }
    if (hasLongitude) {
        [output writeDouble:10 value:self.getLongitude];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hasIdentifier) {
        size += computeStringSize(1, self.getIdentifier);
    }
    if (hasName) {
        size += computeStringSize(2, self.getName);
    }
    if (hasStreetAddress) {
        size += computeStringSize(3, self.getStreetAddress);
    }
    if (hasCity) {
        size += computeStringSize(4, self.getCity);
    }
    if (hasState) {
        size += computeStringSize(5, self.getState);
    }
    if (hasPostalCode) {
        size += computeStringSize(6, self.getPostalCode);
    }
    if (hasCountry) {
        size += computeStringSize(7, self.getCountry);
    }
    if (hasPhone) {
        size += computeStringSize(8, self.getPhone);
    }
    if (hasLatitude) {
        size += computeDoubleSize(9, self.getLatitude);
    }
    if (hasLongitude) {
        size += computeDoubleSize(10, self.getLongitude);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (TheaterProto*) parseFromData:(NSData*) data {
    return (TheaterProto*)[[[TheaterProto newBuilder] mergeFromData:data] buildParsed];
}
+ (TheaterProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterProto*)[[[TheaterProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TheaterProto*) parseFromInputStream:(NSInputStream*) input {
    return (TheaterProto*)[[[TheaterProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TheaterProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterProto*)[[[TheaterProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TheaterProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (TheaterProto*)[[[TheaterProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TheaterProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterProto*)[[[TheaterProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TheaterProto_Builder*) newBuilder { return [[[TheaterProto_Builder alloc] init] autorelease]; }
- (TheaterProto_Builder*) newBuilderForType { return [TheaterProto newBuilder]; }
+ (TheaterProto_Builder*) newBuilderWithTheaterProto:(TheaterProto*) prototype {
    return [[TheaterProto newBuilder] mergeFromTheaterProto:prototype];
}

@end

@implementation TheaterProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[TheaterProto alloc] init] autorelease];
    }
    return self;
}
- (TheaterProto*) internalGetResult {
    return result;
}

- (TheaterProto_Builder*) clear {
    self.result = [[[TheaterProto alloc] init] autorelease];
    return self;
}

- (TheaterProto_Builder*) clone {
    return (TheaterProto_Builder*)[[[[TheaterProto_Builder alloc] init] autorelease] mergeFromTheaterProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [TheaterProto getDescriptor];
}

- (TheaterProto*) getDefaultInstanceForType {
    return [TheaterProto getDefaultInstance];
}

- (TheaterProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (TheaterProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (TheaterProto*) buildPartial {
    TheaterProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (TheaterProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[TheaterProto class]]) {
        return [self mergeFromTheaterProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (TheaterProto_Builder*) mergeFromTheaterProto:(TheaterProto*) other {
    if (other == [TheaterProto getDefaultInstance]) return self;
    if (other.hasIdentifier) {
        [self setIdentifier:other.getIdentifier];
    }
    if (other.hasName) {
        [self setName:other.getName];
    }
    if (other.hasStreetAddress) {
        [self setStreetAddress:other.getStreetAddress];
    }
    if (other.hasCity) {
        [self setCity:other.getCity];
    }
    if (other.hasState) {
        [self setState:other.getState];
    }
    if (other.hasPostalCode) {
        [self setPostalCode:other.getPostalCode];
    }
    if (other.hasCountry) {
        [self setCountry:other.getCountry];
    }
    if (other.hasPhone) {
        [self setPhone:other.getPhone];
    }
    if (other.hasLatitude) {
        [self setLatitude:other.getLatitude];
    }
    if (other.hasLongitude) {
        [self setLongitude:other.getLongitude];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (TheaterProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (TheaterProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                [self setIdentifier:[input readString]];
                break;
            }
            case 18: {
                [self setName:[input readString]];
                break;
            }
            case 26: {
                [self setStreetAddress:[input readString]];
                break;
            }
            case 34: {
                [self setCity:[input readString]];
                break;
            }
            case 42: {
                [self setState:[input readString]];
                break;
            }
            case 50: {
                [self setPostalCode:[input readString]];
                break;
            }
            case 58: {
                [self setCountry:[input readString]];
                break;
            }
            case 66: {
                [self setPhone:[input readString]];
                break;
            }
            case 73: {
                [self setLatitude:[input readDouble]];
                break;
            }
            case 81: {
                [self setLongitude:[input readDouble]];
                break;
            }
        }
    }
}


- (BOOL) hasIdentifier {
    return result.hasIdentifier;
}
- (NSString*) getIdentifier {
    return result.getIdentifier;
}
- (TheaterProto_Builder*) setIdentifier:(NSString*) value {
    result.hasIdentifier = YES;
    result.identifier_ = value;
    return self;
}
- (TheaterProto_Builder*) clearIdentifier {
    result.hasIdentifier = NO;
    result.identifier_ = @"";
    return self;
}

- (BOOL) hasName {
    return result.hasName;
}
- (NSString*) getName {
    return result.getName;
}
- (TheaterProto_Builder*) setName:(NSString*) value {
    result.hasName = YES;
    result.name_ = value;
    return self;
}
- (TheaterProto_Builder*) clearName {
    result.hasName = NO;
    result.name_ = @"";
    return self;
}

- (BOOL) hasStreetAddress {
    return result.hasStreetAddress;
}
- (NSString*) getStreetAddress {
    return result.getStreetAddress;
}
- (TheaterProto_Builder*) setStreetAddress:(NSString*) value {
    result.hasStreetAddress = YES;
    result.streetAddress_ = value;
    return self;
}
- (TheaterProto_Builder*) clearStreetAddress {
    result.hasStreetAddress = NO;
    result.streetAddress_ = @"";
    return self;
}

- (BOOL) hasCity {
    return result.hasCity;
}
- (NSString*) getCity {
    return result.getCity;
}
- (TheaterProto_Builder*) setCity:(NSString*) value {
    result.hasCity = YES;
    result.city_ = value;
    return self;
}
- (TheaterProto_Builder*) clearCity {
    result.hasCity = NO;
    result.city_ = @"";
    return self;
}

- (BOOL) hasState {
    return result.hasState;
}
- (NSString*) getState {
    return result.getState;
}
- (TheaterProto_Builder*) setState:(NSString*) value {
    result.hasState = YES;
    result.state_ = value;
    return self;
}
- (TheaterProto_Builder*) clearState {
    result.hasState = NO;
    result.state_ = @"";
    return self;
}

- (BOOL) hasPostalCode {
    return result.hasPostalCode;
}
- (NSString*) getPostalCode {
    return result.getPostalCode;
}
- (TheaterProto_Builder*) setPostalCode:(NSString*) value {
    result.hasPostalCode = YES;
    result.postalCode_ = value;
    return self;
}
- (TheaterProto_Builder*) clearPostalCode {
    result.hasPostalCode = NO;
    result.postalCode_ = @"";
    return self;
}

- (BOOL) hasCountry {
    return result.hasCountry;
}
- (NSString*) getCountry {
    return result.getCountry;
}
- (TheaterProto_Builder*) setCountry:(NSString*) value {
    result.hasCountry = YES;
    result.country_ = value;
    return self;
}
- (TheaterProto_Builder*) clearCountry {
    result.hasCountry = NO;
    result.country_ = @"";
    return self;
}

- (BOOL) hasPhone {
    return result.hasPhone;
}
- (NSString*) getPhone {
    return result.getPhone;
}
- (TheaterProto_Builder*) setPhone:(NSString*) value {
    result.hasPhone = YES;
    result.phone_ = value;
    return self;
}
- (TheaterProto_Builder*) clearPhone {
    result.hasPhone = NO;
    result.phone_ = @"";
    return self;
}

- (BOOL) hasLatitude {
    return result.hasLatitude;
}
- (Float64) getLatitude {
    return result.getLatitude;
}
- (TheaterProto_Builder*) setLatitude:(Float64) value {
    result.hasLatitude = YES;
    result.latitude_ = value;
    return self;
}
- (TheaterProto_Builder*) clearLatitude {
    result.hasLatitude = NO;
    result.latitude_ = 0;
    return self;
}

- (BOOL) hasLongitude {
    return result.hasLongitude;
}
- (Float64) getLongitude {
    return result.getLongitude;
}
- (TheaterProto_Builder*) setLongitude:(Float64) value {
    result.hasLongitude = YES;
    result.longitude_ = value;
    return self;
}
- (TheaterProto_Builder*) clearLongitude {
    result.hasLongitude = NO;
    result.longitude_ = 0;
    return self;
}
@end

@implementation TheaterListingsProto

@synthesize movies_;
@synthesize theaterAndMovieShowtimes_;
- (void) dealloc {
    self.movies_ = nil;
    self.theaterAndMovieShowtimes_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
    }
    return self;
}
static TheaterListingsProto* defaultTheaterListingsProtoInstance = nil;
+ (void) initialize {
    if (self == [TheaterListingsProto class]) {
        defaultTheaterListingsProtoInstance = [[TheaterListingsProto alloc] init];
    }
}

+ (TheaterListingsProto*) getDefaultInstance {
    return defaultTheaterListingsProtoInstance;
}

- (TheaterListingsProto*) getDefaultInstanceForType {
    return defaultTheaterListingsProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_TheaterListingsProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_TheaterListingsProto_fieldAccessorTable];
}

- (NSArray*) getMoviesList {
    return movies_;
}
- (int32_t) getMoviesCount { return movies_.count; }
- (MovieProto*) getMovies:(int32_t) index {
    return [movies_ objectAtIndex:index];
}

- (NSArray*) getTheaterAndMovieShowtimesList {
    return theaterAndMovieShowtimes_;
}
- (int32_t) getTheaterAndMovieShowtimesCount { return theaterAndMovieShowtimes_.count; }
- (TheaterAndMovieShowtimesProto*) getTheaterAndMovieShowtimes:(int32_t) index {
    return [theaterAndMovieShowtimes_ objectAtIndex:index];
}

- (BOOL) isInitialized {
    for (TheaterAndMovieShowtimesProto* element in self.getTheaterAndMovieShowtimesList) {
        if (!element.isInitialized) return false;
    }
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    for (MovieProto* element in self.getMoviesList) {
        [output writeMessage:5 value:element];
    }
    for (TheaterAndMovieShowtimesProto* element in self.getTheaterAndMovieShowtimesList) {
        [output writeMessage:6 value:element];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (MovieProto* element in self.getMoviesList) {
        size += computeMessageSize(5, element);
    }
    for (TheaterAndMovieShowtimesProto* element in self.getTheaterAndMovieShowtimesList) {
        size += computeMessageSize(6, element);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (TheaterListingsProto*) parseFromData:(NSData*) data {
    return (TheaterListingsProto*)[[[TheaterListingsProto newBuilder] mergeFromData:data] buildParsed];
}
+ (TheaterListingsProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterListingsProto*)[[[TheaterListingsProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TheaterListingsProto*) parseFromInputStream:(NSInputStream*) input {
    return (TheaterListingsProto*)[[[TheaterListingsProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TheaterListingsProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterListingsProto*)[[[TheaterListingsProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TheaterListingsProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (TheaterListingsProto*)[[[TheaterListingsProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TheaterListingsProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterListingsProto*)[[[TheaterListingsProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TheaterListingsProto_Builder*) newBuilder { return [[[TheaterListingsProto_Builder alloc] init] autorelease]; }
- (TheaterListingsProto_Builder*) newBuilderForType { return [TheaterListingsProto newBuilder]; }
+ (TheaterListingsProto_Builder*) newBuilderWithTheaterListingsProto:(TheaterListingsProto*) prototype {
    return [[TheaterListingsProto newBuilder] mergeFromTheaterListingsProto:prototype];
}

@end

@implementation TheaterAndMovieShowtimesProto

@synthesize hasTheater;
@synthesize theater_;
@synthesize movieAndShowtimes_;
- (void) dealloc {
    self.hasTheater = NO;
    self.theater_ = nil;
    self.movieAndShowtimes_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
    }
    return self;
}
static TheaterAndMovieShowtimesProto* defaultTheaterAndMovieShowtimesProtoInstance = nil;
+ (void) initialize {
    if (self == [TheaterAndMovieShowtimesProto class]) {
        defaultTheaterAndMovieShowtimesProtoInstance = [[TheaterAndMovieShowtimesProto alloc] init];
    }
}

+ (TheaterAndMovieShowtimesProto*) getDefaultInstance {
    return defaultTheaterAndMovieShowtimesProtoInstance;
}

- (TheaterAndMovieShowtimesProto*) getDefaultInstanceForType {
    return defaultTheaterAndMovieShowtimesProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_fieldAccessorTable];
}

- (BOOL) hasTheater { return hasTheater; }
- (TheaterProto*) getTheater { return theater_; }

- (NSArray*) getMovieAndShowtimesList {
    return movieAndShowtimes_;
}
- (int32_t) getMovieAndShowtimesCount { return movieAndShowtimes_.count; }
- (MovieAndShowtimesProto*) getMovieAndShowtimes:(int32_t) index {
    return [movieAndShowtimes_ objectAtIndex:index];
}

- (BOOL) isInitialized {
    if (!self.hasTheater) return false;
    for (MovieAndShowtimesProto* element in self.getMovieAndShowtimesList) {
        if (!element.isInitialized) return false;
    }
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    if (self.hasTheater) {
        [output writeMessage:3 value:self.getTheater];
    }
    for (MovieAndShowtimesProto* element in self.getMovieAndShowtimesList) {
        [output writeMessage:4 value:element];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (self.hasTheater) {
        size += computeMessageSize(3, self.getTheater);
    }
    for (MovieAndShowtimesProto* element in self.getMovieAndShowtimesList) {
        size += computeMessageSize(4, element);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (TheaterAndMovieShowtimesProto*) parseFromData:(NSData*) data {
    return (TheaterAndMovieShowtimesProto*)[[[TheaterAndMovieShowtimesProto newBuilder] mergeFromData:data] buildParsed];
}
+ (TheaterAndMovieShowtimesProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterAndMovieShowtimesProto*)[[[TheaterAndMovieShowtimesProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TheaterAndMovieShowtimesProto*) parseFromInputStream:(NSInputStream*) input {
    return (TheaterAndMovieShowtimesProto*)[[[TheaterAndMovieShowtimesProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TheaterAndMovieShowtimesProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterAndMovieShowtimesProto*)[[[TheaterAndMovieShowtimesProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TheaterAndMovieShowtimesProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (TheaterAndMovieShowtimesProto*)[[[TheaterAndMovieShowtimesProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TheaterAndMovieShowtimesProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (TheaterAndMovieShowtimesProto*)[[[TheaterAndMovieShowtimesProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TheaterAndMovieShowtimesProto_Builder*) newBuilder { return [[[TheaterAndMovieShowtimesProto_Builder alloc] init] autorelease]; }
- (TheaterAndMovieShowtimesProto_Builder*) newBuilderForType { return [TheaterAndMovieShowtimesProto newBuilder]; }
+ (TheaterAndMovieShowtimesProto_Builder*) newBuilderWithTheaterAndMovieShowtimesProto:(TheaterAndMovieShowtimesProto*) prototype {
    return [[TheaterAndMovieShowtimesProto newBuilder] mergeFromTheaterAndMovieShowtimesProto:prototype];
}

@end

@implementation MovieAndShowtimesProto

@synthesize hasMovieIdentifier;
@synthesize movieIdentifier_;
@synthesize hasShowtimes;
@synthesize showtimes_;
- (void) dealloc {
    self.hasMovieIdentifier = NO;
    self.movieIdentifier_ = nil;
    self.hasShowtimes = NO;
    self.showtimes_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
        self.movieIdentifier_ = @"";
    }
    return self;
}
static MovieAndShowtimesProto* defaultMovieAndShowtimesProtoInstance = nil;
+ (void) initialize {
    if (self == [MovieAndShowtimesProto class]) {
        defaultMovieAndShowtimesProtoInstance = [[MovieAndShowtimesProto alloc] init];
    }
}

+ (MovieAndShowtimesProto*) getDefaultInstance {
    return defaultMovieAndShowtimesProtoInstance;
}

- (MovieAndShowtimesProto*) getDefaultInstanceForType {
    return defaultMovieAndShowtimesProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_TheaterListingsProto_TheaterAndMovieShowtimesProto_MovieAndShowtimesProto_fieldAccessorTable];
}

- (BOOL) hasMovieIdentifier { return hasMovieIdentifier; }
- (NSString*) getMovieIdentifier { return movieIdentifier_; }

- (BOOL) hasShowtimes { return hasShowtimes; }
- (AllShowtimesProto*) getShowtimes { return showtimes_; }

- (BOOL) isInitialized {
    if (!self.hasMovieIdentifier) return false;
    if (!self.hasShowtimes) return false;
    if (!self.getShowtimes.isInitialized) return false;
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    if (hasMovieIdentifier) {
        [output writeString:1 value:self.getMovieIdentifier];
    }
    if (self.hasShowtimes) {
        [output writeMessage:2 value:self.getShowtimes];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hasMovieIdentifier) {
        size += computeStringSize(1, self.getMovieIdentifier);
    }
    if (self.hasShowtimes) {
        size += computeMessageSize(2, self.getShowtimes);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (MovieAndShowtimesProto*) parseFromData:(NSData*) data {
    return (MovieAndShowtimesProto*)[[[MovieAndShowtimesProto newBuilder] mergeFromData:data] buildParsed];
}
+ (MovieAndShowtimesProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (MovieAndShowtimesProto*)[[[MovieAndShowtimesProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (MovieAndShowtimesProto*) parseFromInputStream:(NSInputStream*) input {
    return (MovieAndShowtimesProto*)[[[MovieAndShowtimesProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (MovieAndShowtimesProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (MovieAndShowtimesProto*)[[[MovieAndShowtimesProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (MovieAndShowtimesProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (MovieAndShowtimesProto*)[[[MovieAndShowtimesProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (MovieAndShowtimesProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (MovieAndShowtimesProto*)[[[MovieAndShowtimesProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (MovieAndShowtimesProto_Builder*) newBuilder { return [[[MovieAndShowtimesProto_Builder alloc] init] autorelease]; }
- (MovieAndShowtimesProto_Builder*) newBuilderForType { return [MovieAndShowtimesProto newBuilder]; }
+ (MovieAndShowtimesProto_Builder*) newBuilderWithMovieAndShowtimesProto:(MovieAndShowtimesProto*) prototype {
    return [[MovieAndShowtimesProto newBuilder] mergeFromMovieAndShowtimesProto:prototype];
}

@end

@implementation MovieAndShowtimesProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[MovieAndShowtimesProto alloc] init] autorelease];
    }
    return self;
}
- (MovieAndShowtimesProto*) internalGetResult {
    return result;
}

- (MovieAndShowtimesProto_Builder*) clear {
    self.result = [[[MovieAndShowtimesProto alloc] init] autorelease];
    return self;
}

- (MovieAndShowtimesProto_Builder*) clone {
    return (MovieAndShowtimesProto_Builder*)[[[[MovieAndShowtimesProto_Builder alloc] init] autorelease] mergeFromMovieAndShowtimesProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [MovieAndShowtimesProto getDescriptor];
}

- (MovieAndShowtimesProto*) getDefaultInstanceForType {
    return [MovieAndShowtimesProto getDefaultInstance];
}

- (MovieAndShowtimesProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (MovieAndShowtimesProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (MovieAndShowtimesProto*) buildPartial {
    MovieAndShowtimesProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (MovieAndShowtimesProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[MovieAndShowtimesProto class]]) {
        return [self mergeFromMovieAndShowtimesProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (MovieAndShowtimesProto_Builder*) mergeFromMovieAndShowtimesProto:(MovieAndShowtimesProto*) other {
    if (other == [MovieAndShowtimesProto getDefaultInstance]) return self;
    if (other.hasMovieIdentifier) {
        [self setMovieIdentifier:other.getMovieIdentifier];
    }
    if (other.hasShowtimes) {
        [self mergeShowtimes:other.getShowtimes];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (MovieAndShowtimesProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (MovieAndShowtimesProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                [self setMovieIdentifier:[input readString]];
                break;
            }
            case 18: {
                AllShowtimesProto_Builder* subBuilder = [AllShowtimesProto newBuilder];
                if (self.hasShowtimes) {
                    [subBuilder mergeFromAllShowtimesProto:self.getShowtimes];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setShowtimes:[subBuilder buildPartial]];
                break;
            }
        }
    }
}


- (BOOL) hasMovieIdentifier {
    return result.hasMovieIdentifier;
}
- (NSString*) getMovieIdentifier {
    return result.getMovieIdentifier;
}
- (MovieAndShowtimesProto_Builder*) setMovieIdentifier:(NSString*) value {
    result.hasMovieIdentifier = YES;
    result.movieIdentifier_ = value;
    return self;
}
- (MovieAndShowtimesProto_Builder*) clearMovieIdentifier {
    result.hasMovieIdentifier = NO;
    result.movieIdentifier_ = @"";
    return self;
}

- (BOOL) hasShowtimes {
    return result.hasShowtimes;
}
- (AllShowtimesProto*) getShowtimes {
    return result.getShowtimes;
}
- (id<Message_Builder>) setShowtimes:(AllShowtimesProto*) value {
    result.hasShowtimes = YES;
    result.showtimes_ = value;
    return self;
}
- (id<Message_Builder>) setShowtimesBuilder:(AllShowtimesProto_Builder*) builderForValue {
    result.hasShowtimes = YES;
    result.showtimes_ = [builderForValue build];
    return self;
}
- (id<Message_Builder>) mergeShowtimes:(AllShowtimesProto*) value {
    if (result.hasShowtimes &&
        result.showtimes_ != [AllShowtimesProto getDefaultInstance]) {
        result.showtimes_ =
        [[[AllShowtimesProto newBuilderWithAllShowtimesProto:result.showtimes_] mergeFromAllShowtimesProto:value] buildPartial];
    } else {
        result.showtimes_ = value;
    }
    result.hasShowtimes = YES;
    return self;
}
- (id<Message_Builder>) clearShowtimes {
    result.hasShowtimes = NO;
    result.showtimes_ = [AllShowtimesProto getDefaultInstance];
    return self;
}
@end

@implementation TheaterAndMovieShowtimesProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[TheaterAndMovieShowtimesProto alloc] init] autorelease];
    }
    return self;
}
- (TheaterAndMovieShowtimesProto*) internalGetResult {
    return result;
}

- (TheaterAndMovieShowtimesProto_Builder*) clear {
    self.result = [[[TheaterAndMovieShowtimesProto alloc] init] autorelease];
    return self;
}

- (TheaterAndMovieShowtimesProto_Builder*) clone {
    return (TheaterAndMovieShowtimesProto_Builder*)[[[[TheaterAndMovieShowtimesProto_Builder alloc] init] autorelease] mergeFromTheaterAndMovieShowtimesProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [TheaterAndMovieShowtimesProto getDescriptor];
}

- (TheaterAndMovieShowtimesProto*) getDefaultInstanceForType {
    return [TheaterAndMovieShowtimesProto getDefaultInstance];
}

- (TheaterAndMovieShowtimesProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (TheaterAndMovieShowtimesProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (TheaterAndMovieShowtimesProto*) buildPartial {
    TheaterAndMovieShowtimesProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (TheaterAndMovieShowtimesProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[TheaterAndMovieShowtimesProto class]]) {
        return [self mergeFromTheaterAndMovieShowtimesProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (TheaterAndMovieShowtimesProto_Builder*) mergeFromTheaterAndMovieShowtimesProto:(TheaterAndMovieShowtimesProto*) other {
    if (other == [TheaterAndMovieShowtimesProto getDefaultInstance]) return self;
    if (other.hasTheater) {
        [self mergeTheater:other.getTheater];
    }
    if (other.movieAndShowtimes_.count > 0) {
        if (result.movieAndShowtimes_ == nil) {
            result.movieAndShowtimes_ = [NSMutableArray array];
        }
        [result.movieAndShowtimes_ addObjectsFromArray:other.movieAndShowtimes_];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (TheaterAndMovieShowtimesProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (TheaterAndMovieShowtimesProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 26: {
                TheaterProto_Builder* subBuilder = [TheaterProto newBuilder];
                if (self.hasTheater) {
                    [subBuilder mergeFromTheaterProto:self.getTheater];
                }
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self setTheater:[subBuilder buildPartial]];
                break;
            }
            case 34: {
                MovieAndShowtimesProto_Builder* subBuilder = [MovieAndShowtimesProto newBuilder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addMovieAndShowtimes:[subBuilder buildPartial]];
                break;
            }
        }
    }
}


- (BOOL) hasTheater {
    return result.hasTheater;
}
- (TheaterProto*) getTheater {
    return result.getTheater;
}
- (id<Message_Builder>) setTheater:(TheaterProto*) value {
    result.hasTheater = YES;
    result.theater_ = value;
    return self;
}
- (id<Message_Builder>) setTheaterBuilder:(TheaterProto_Builder*) builderForValue {
    result.hasTheater = YES;
    result.theater_ = [builderForValue build];
    return self;
}
- (id<Message_Builder>) mergeTheater:(TheaterProto*) value {
    if (result.hasTheater &&
        result.theater_ != [TheaterProto getDefaultInstance]) {
        result.theater_ =
        [[[TheaterProto newBuilderWithTheaterProto:result.theater_] mergeFromTheaterProto:value] buildPartial];
    } else {
        result.theater_ = value;
    }
    result.hasTheater = YES;
    return self;
}
- (id<Message_Builder>) clearTheater {
    result.hasTheater = NO;
    result.theater_ = [TheaterProto getDefaultInstance];
    return self;
}

- (NSArray*) getMovieAndShowtimesList {
    if (result.movieAndShowtimes_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithObjects:result.movieAndShowtimes_];
}
- (int32_t) getMovieAndShowtimesCount {
    return result.getMovieAndShowtimesCount;
}
- (MovieAndShowtimesProto*) getMovieAndShowtimes:(int32_t) index {
    return [result getMovieAndShowtimes:index];
}
- (TheaterAndMovieShowtimesProto_Builder*) setMovieAndShowtimes:(int32_t) index value:(MovieAndShowtimesProto*) value {
    [result.movieAndShowtimes_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (TheaterAndMovieShowtimesProto_Builder*) setMovieAndShowtimes:(int32_t) index builderForValue:(MovieAndShowtimesProto_Builder*) builderForValue {
    [result.movieAndShowtimes_ replaceObjectAtIndex:index withObject:[builderForValue build]];
    return self;
}
- (TheaterAndMovieShowtimesProto_Builder*) addMovieAndShowtimesBuilder:(MovieAndShowtimesProto_Builder*) builderForValue {
    if (result.movieAndShowtimes_ == nil) {
        result.movieAndShowtimes_ = [NSMutableArray array];
    }
    [result.movieAndShowtimes_ addObject:[builderForValue build]];
    return self;
}
- (TheaterAndMovieShowtimesProto_Builder*) addAllMovieAndShowtimes:(NSArray*) values {
    if (result.movieAndShowtimes_ == nil) {
        result.movieAndShowtimes_ = [NSMutableArray array];
    }
    [result.movieAndShowtimes_ addObjectsFromArray:values];
    return self;
}
- (TheaterAndMovieShowtimesProto_Builder*) clearMovieAndShowtimes {
    result.movieAndShowtimes_ = nil;
    return self;
}
- (TheaterAndMovieShowtimesProto_Builder*) addMovieAndShowtimes:(MovieAndShowtimesProto*) value {
    if (result.movieAndShowtimes_ == nil) {
        result.movieAndShowtimes_ = [NSMutableArray array];
    }
    [result.movieAndShowtimes_ addObject:value];
    return self;
}
@end

@implementation TheaterListingsProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[TheaterListingsProto alloc] init] autorelease];
    }
    return self;
}
- (TheaterListingsProto*) internalGetResult {
    return result;
}

- (TheaterListingsProto_Builder*) clear {
    self.result = [[[TheaterListingsProto alloc] init] autorelease];
    return self;
}

- (TheaterListingsProto_Builder*) clone {
    return (TheaterListingsProto_Builder*)[[[[TheaterListingsProto_Builder alloc] init] autorelease] mergeFromTheaterListingsProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [TheaterListingsProto getDescriptor];
}

- (TheaterListingsProto*) getDefaultInstanceForType {
    return [TheaterListingsProto getDefaultInstance];
}

- (TheaterListingsProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (TheaterListingsProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (TheaterListingsProto*) buildPartial {
    TheaterListingsProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (TheaterListingsProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[TheaterListingsProto class]]) {
        return [self mergeFromTheaterListingsProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (TheaterListingsProto_Builder*) mergeFromTheaterListingsProto:(TheaterListingsProto*) other {
    if (other == [TheaterListingsProto getDefaultInstance]) return self;
    if (other.movies_.count > 0) {
        if (result.movies_ == nil) {
            result.movies_ = [NSMutableArray array];
        }
        [result.movies_ addObjectsFromArray:other.movies_];
    }
    if (other.theaterAndMovieShowtimes_.count > 0) {
        if (result.theaterAndMovieShowtimes_ == nil) {
            result.theaterAndMovieShowtimes_ = [NSMutableArray array];
        }
        [result.theaterAndMovieShowtimes_ addObjectsFromArray:other.theaterAndMovieShowtimes_];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (TheaterListingsProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (TheaterListingsProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 42: {
                MovieProto_Builder* subBuilder = [MovieProto newBuilder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addMovies:[subBuilder buildPartial]];
                break;
            }
            case 50: {
                TheaterAndMovieShowtimesProto_Builder* subBuilder = [TheaterAndMovieShowtimesProto newBuilder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addTheaterAndMovieShowtimes:[subBuilder buildPartial]];
                break;
            }
        }
    }
}


- (NSArray*) getMoviesList {
    if (result.movies_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithObjects:result.movies_];
}
- (int32_t) getMoviesCount {
    return result.getMoviesCount;
}
- (MovieProto*) getMovies:(int32_t) index {
    return [result getMovies:index];
}
- (TheaterListingsProto_Builder*) setMovies:(int32_t) index value:(MovieProto*) value {
    [result.movies_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (TheaterListingsProto_Builder*) setMovies:(int32_t) index builderForValue:(MovieProto_Builder*) builderForValue {
    [result.movies_ replaceObjectAtIndex:index withObject:[builderForValue build]];
    return self;
}
- (TheaterListingsProto_Builder*) addMoviesBuilder:(MovieProto_Builder*) builderForValue {
    if (result.movies_ == nil) {
        result.movies_ = [NSMutableArray array];
    }
    [result.movies_ addObject:[builderForValue build]];
    return self;
}
- (TheaterListingsProto_Builder*) addAllMovies:(NSArray*) values {
    if (result.movies_ == nil) {
        result.movies_ = [NSMutableArray array];
    }
    [result.movies_ addObjectsFromArray:values];
    return self;
}
- (TheaterListingsProto_Builder*) clearMovies {
    result.movies_ = nil;
    return self;
}
- (TheaterListingsProto_Builder*) addMovies:(MovieProto*) value {
    if (result.movies_ == nil) {
        result.movies_ = [NSMutableArray array];
    }
    [result.movies_ addObject:value];
    return self;
}

- (NSArray*) getTheaterAndMovieShowtimesList {
    if (result.theaterAndMovieShowtimes_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithObjects:result.theaterAndMovieShowtimes_];
}
- (int32_t) getTheaterAndMovieShowtimesCount {
    return result.getTheaterAndMovieShowtimesCount;
}
- (TheaterAndMovieShowtimesProto*) getTheaterAndMovieShowtimes:(int32_t) index {
    return [result getTheaterAndMovieShowtimes:index];
}
- (TheaterListingsProto_Builder*) setTheaterAndMovieShowtimes:(int32_t) index value:(TheaterAndMovieShowtimesProto*) value {
    [result.theaterAndMovieShowtimes_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (TheaterListingsProto_Builder*) setTheaterAndMovieShowtimes:(int32_t) index builderForValue:(TheaterAndMovieShowtimesProto_Builder*) builderForValue {
    [result.theaterAndMovieShowtimes_ replaceObjectAtIndex:index withObject:[builderForValue build]];
    return self;
}
- (TheaterListingsProto_Builder*) addTheaterAndMovieShowtimesBuilder:(TheaterAndMovieShowtimesProto_Builder*) builderForValue {
    if (result.theaterAndMovieShowtimes_ == nil) {
        result.theaterAndMovieShowtimes_ = [NSMutableArray array];
    }
    [result.theaterAndMovieShowtimes_ addObject:[builderForValue build]];
    return self;
}
- (TheaterListingsProto_Builder*) addAllTheaterAndMovieShowtimes:(NSArray*) values {
    if (result.theaterAndMovieShowtimes_ == nil) {
        result.theaterAndMovieShowtimes_ = [NSMutableArray array];
    }
    [result.theaterAndMovieShowtimes_ addObjectsFromArray:values];
    return self;
}
- (TheaterListingsProto_Builder*) clearTheaterAndMovieShowtimes {
    result.theaterAndMovieShowtimes_ = nil;
    return self;
}
- (TheaterListingsProto_Builder*) addTheaterAndMovieShowtimes:(TheaterAndMovieShowtimesProto*) value {
    if (result.theaterAndMovieShowtimes_ == nil) {
        result.theaterAndMovieShowtimes_ = [NSMutableArray array];
    }
    [result.theaterAndMovieShowtimes_ addObject:value];
    return self;
}
@end

@implementation ReviewProto

@synthesize hasTitle;
@synthesize title_;
@synthesize hasUrl;
@synthesize url_;
@synthesize hasRating;
@synthesize rating_;
@synthesize hasSnippet;
@synthesize snippet_;
@synthesize hasContent;
@synthesize content_;
@synthesize hasPublisher;
@synthesize publisher_;
@synthesize hasAuthor;
@synthesize author_;
@synthesize hasDate;
@synthesize date_;
- (void) dealloc {
    self.hasTitle = NO;
    self.title_ = nil;
    self.hasUrl = NO;
    self.url_ = nil;
    self.hasRating = NO;
    self.rating_ = 0;
    self.hasSnippet = NO;
    self.snippet_ = nil;
    self.hasContent = NO;
    self.content_ = nil;
    self.hasPublisher = NO;
    self.publisher_ = nil;
    self.hasAuthor = NO;
    self.author_ = nil;
    self.hasDate = NO;
    self.date_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
        self.title_ = @"";
        self.url_ = @"";
        self.rating_ = 0;
        self.snippet_ = @"";
        self.content_ = @"";
        self.publisher_ = @"";
        self.author_ = @"";
        self.date_ = @"";
    }
    return self;
}
static ReviewProto* defaultReviewProtoInstance = nil;
+ (void) initialize {
    if (self == [ReviewProto class]) {
        defaultReviewProtoInstance = [[ReviewProto alloc] init];
    }
}

+ (ReviewProto*) getDefaultInstance {
    return defaultReviewProtoInstance;
}

- (ReviewProto*) getDefaultInstanceForType {
    return defaultReviewProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_ReviewProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_ReviewProto_fieldAccessorTable];
}

- (BOOL) hasTitle { return hasTitle; }
- (NSString*) getTitle { return title_; }

- (BOOL) hasUrl { return hasUrl; }
- (NSString*) getUrl { return url_; }

- (BOOL) hasRating { return hasRating; }
- (Float32) getRating { return rating_; }

- (BOOL) hasSnippet { return hasSnippet; }
- (NSString*) getSnippet { return snippet_; }

- (BOOL) hasContent { return hasContent; }
- (NSString*) getContent { return content_; }

- (BOOL) hasPublisher { return hasPublisher; }
- (NSString*) getPublisher { return publisher_; }

- (BOOL) hasAuthor { return hasAuthor; }
- (NSString*) getAuthor { return author_; }

- (BOOL) hasDate { return hasDate; }
- (NSString*) getDate { return date_; }

- (BOOL) isInitialized {
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    if (hasTitle) {
        [output writeString:1 value:self.getTitle];
    }
    if (hasUrl) {
        [output writeString:2 value:self.getUrl];
    }
    if (hasRating) {
        [output writeFloat:3 value:self.getRating];
    }
    if (hasSnippet) {
        [output writeString:4 value:self.getSnippet];
    }
    if (hasContent) {
        [output writeString:5 value:self.getContent];
    }
    if (hasPublisher) {
        [output writeString:6 value:self.getPublisher];
    }
    if (hasAuthor) {
        [output writeString:7 value:self.getAuthor];
    }
    if (hasDate) {
        [output writeString:8 value:self.getDate];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (hasTitle) {
        size += computeStringSize(1, self.getTitle);
    }
    if (hasUrl) {
        size += computeStringSize(2, self.getUrl);
    }
    if (hasRating) {
        size += computeFloatSize(3, self.getRating);
    }
    if (hasSnippet) {
        size += computeStringSize(4, self.getSnippet);
    }
    if (hasContent) {
        size += computeStringSize(5, self.getContent);
    }
    if (hasPublisher) {
        size += computeStringSize(6, self.getPublisher);
    }
    if (hasAuthor) {
        size += computeStringSize(7, self.getAuthor);
    }
    if (hasDate) {
        size += computeStringSize(8, self.getDate);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (ReviewProto*) parseFromData:(NSData*) data {
    return (ReviewProto*)[[[ReviewProto newBuilder] mergeFromData:data] buildParsed];
}
+ (ReviewProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ReviewProto*)[[[ReviewProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (ReviewProto*) parseFromInputStream:(NSInputStream*) input {
    return (ReviewProto*)[[[ReviewProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (ReviewProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ReviewProto*)[[[ReviewProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (ReviewProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (ReviewProto*)[[[ReviewProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (ReviewProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ReviewProto*)[[[ReviewProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (ReviewProto_Builder*) newBuilder { return [[[ReviewProto_Builder alloc] init] autorelease]; }
- (ReviewProto_Builder*) newBuilderForType { return [ReviewProto newBuilder]; }
+ (ReviewProto_Builder*) newBuilderWithReviewProto:(ReviewProto*) prototype {
    return [[ReviewProto newBuilder] mergeFromReviewProto:prototype];
}

@end

@implementation ReviewProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[ReviewProto alloc] init] autorelease];
    }
    return self;
}
- (ReviewProto*) internalGetResult {
    return result;
}

- (ReviewProto_Builder*) clear {
    self.result = [[[ReviewProto alloc] init] autorelease];
    return self;
}

- (ReviewProto_Builder*) clone {
    return (ReviewProto_Builder*)[[[[ReviewProto_Builder alloc] init] autorelease] mergeFromReviewProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [ReviewProto getDescriptor];
}

- (ReviewProto*) getDefaultInstanceForType {
    return [ReviewProto getDefaultInstance];
}

- (ReviewProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (ReviewProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (ReviewProto*) buildPartial {
    ReviewProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (ReviewProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[ReviewProto class]]) {
        return [self mergeFromReviewProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (ReviewProto_Builder*) mergeFromReviewProto:(ReviewProto*) other {
    if (other == [ReviewProto getDefaultInstance]) return self;
    if (other.hasTitle) {
        [self setTitle:other.getTitle];
    }
    if (other.hasUrl) {
        [self setUrl:other.getUrl];
    }
    if (other.hasRating) {
        [self setRating:other.getRating];
    }
    if (other.hasSnippet) {
        [self setSnippet:other.getSnippet];
    }
    if (other.hasContent) {
        [self setContent:other.getContent];
    }
    if (other.hasPublisher) {
        [self setPublisher:other.getPublisher];
    }
    if (other.hasAuthor) {
        [self setAuthor:other.getAuthor];
    }
    if (other.hasDate) {
        [self setDate:other.getDate];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (ReviewProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (ReviewProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                [self setTitle:[input readString]];
                break;
            }
            case 18: {
                [self setUrl:[input readString]];
                break;
            }
            case 29: {
                [self setRating:[input readFloat]];
                break;
            }
            case 34: {
                [self setSnippet:[input readString]];
                break;
            }
            case 42: {
                [self setContent:[input readString]];
                break;
            }
            case 50: {
                [self setPublisher:[input readString]];
                break;
            }
            case 58: {
                [self setAuthor:[input readString]];
                break;
            }
            case 66: {
                [self setDate:[input readString]];
                break;
            }
        }
    }
}


- (BOOL) hasTitle {
    return result.hasTitle;
}
- (NSString*) getTitle {
    return result.getTitle;
}
- (ReviewProto_Builder*) setTitle:(NSString*) value {
    result.hasTitle = YES;
    result.title_ = value;
    return self;
}
- (ReviewProto_Builder*) clearTitle {
    result.hasTitle = NO;
    result.title_ = @"";
    return self;
}

- (BOOL) hasUrl {
    return result.hasUrl;
}
- (NSString*) getUrl {
    return result.getUrl;
}
- (ReviewProto_Builder*) setUrl:(NSString*) value {
    result.hasUrl = YES;
    result.url_ = value;
    return self;
}
- (ReviewProto_Builder*) clearUrl {
    result.hasUrl = NO;
    result.url_ = @"";
    return self;
}

- (BOOL) hasRating {
    return result.hasRating;
}
- (Float32) getRating {
    return result.getRating;
}
- (ReviewProto_Builder*) setRating:(Float32) value {
    result.hasRating = YES;
    result.rating_ = value;
    return self;
}
- (ReviewProto_Builder*) clearRating {
    result.hasRating = NO;
    result.rating_ = 0;
    return self;
}

- (BOOL) hasSnippet {
    return result.hasSnippet;
}
- (NSString*) getSnippet {
    return result.getSnippet;
}
- (ReviewProto_Builder*) setSnippet:(NSString*) value {
    result.hasSnippet = YES;
    result.snippet_ = value;
    return self;
}
- (ReviewProto_Builder*) clearSnippet {
    result.hasSnippet = NO;
    result.snippet_ = @"";
    return self;
}

- (BOOL) hasContent {
    return result.hasContent;
}
- (NSString*) getContent {
    return result.getContent;
}
- (ReviewProto_Builder*) setContent:(NSString*) value {
    result.hasContent = YES;
    result.content_ = value;
    return self;
}
- (ReviewProto_Builder*) clearContent {
    result.hasContent = NO;
    result.content_ = @"";
    return self;
}

- (BOOL) hasPublisher {
    return result.hasPublisher;
}
- (NSString*) getPublisher {
    return result.getPublisher;
}
- (ReviewProto_Builder*) setPublisher:(NSString*) value {
    result.hasPublisher = YES;
    result.publisher_ = value;
    return self;
}
- (ReviewProto_Builder*) clearPublisher {
    result.hasPublisher = NO;
    result.publisher_ = @"";
    return self;
}

- (BOOL) hasAuthor {
    return result.hasAuthor;
}
- (NSString*) getAuthor {
    return result.getAuthor;
}
- (ReviewProto_Builder*) setAuthor:(NSString*) value {
    result.hasAuthor = YES;
    result.author_ = value;
    return self;
}
- (ReviewProto_Builder*) clearAuthor {
    result.hasAuthor = NO;
    result.author_ = @"";
    return self;
}

- (BOOL) hasDate {
    return result.hasDate;
}
- (NSString*) getDate {
    return result.getDate;
}
- (ReviewProto_Builder*) setDate:(NSString*) value {
    result.hasDate = YES;
    result.date_ = value;
    return self;
}
- (ReviewProto_Builder*) clearDate {
    result.hasDate = NO;
    result.date_ = @"";
    return self;
}
@end

@implementation ReviewsListProto

@synthesize reviews_;
- (void) dealloc {
    self.reviews_ = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        memoizedSerializedSize = -1;
    }
    return self;
}
static ReviewsListProto* defaultReviewsListProtoInstance = nil;
+ (void) initialize {
    if (self == [ReviewsListProto class]) {
        defaultReviewsListProtoInstance = [[ReviewsListProto alloc] init];
    }
}

+ (ReviewsListProto*) getDefaultInstance {
    return defaultReviewsListProtoInstance;
}

- (ReviewsListProto*) getDefaultInstanceForType {
    return defaultReviewsListProtoInstance;
}

+ (ProtocolBufferDescriptor*) getDescriptor {
    return [BoxOffice internal_static_ReviewsListProto_descriptor];
}

- (GeneratedMessage_FieldAccessorTable*) internalGetFieldAccessorTable {
    return [BoxOffice internal_static_ReviewsListProto_fieldAccessorTable];
}

- (NSArray*) getReviewsList {
    return reviews_;
}
- (int32_t) getReviewsCount { return reviews_.count; }
- (ReviewProto*) getReviews:(int32_t) index {
    return [reviews_ objectAtIndex:index];
}

- (BOOL) isInitialized {
    return true;
}

- (void) writeToCodedOutputStream:(CodedOutputStream*) output {
    for (ReviewProto* element in self.getReviewsList) {
        [output writeMessage:1 value:element];
    }
    [self.getUnknownFields writeToCodedOutputStream:output];
}

- (int32_t) getSerializedSize {
    int32_t size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (ReviewProto* element in self.getReviewsList) {
        size += computeMessageSize(1, element);
    }
    size += self.getUnknownFields.getSerializedSize;
    memoizedSerializedSize = size;
    return size;
}

+ (ReviewsListProto*) parseFromData:(NSData*) data {
    return (ReviewsListProto*)[[[ReviewsListProto newBuilder] mergeFromData:data] buildParsed];
}
+ (ReviewsListProto*) parseFromData:(NSData*) data extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ReviewsListProto*)[[[ReviewsListProto newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (ReviewsListProto*) parseFromInputStream:(NSInputStream*) input {
    return (ReviewsListProto*)[[[ReviewsListProto newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (ReviewsListProto*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ReviewsListProto*)[[[ReviewsListProto newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (ReviewsListProto*) parseFromCodedInputStream:(CodedInputStream*) input {
    return (ReviewsListProto*)[[[ReviewsListProto newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (ReviewsListProto*) parseFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    return (ReviewsListProto*)[[[ReviewsListProto newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (ReviewsListProto_Builder*) newBuilder { return [[[ReviewsListProto_Builder alloc] init] autorelease]; }
- (ReviewsListProto_Builder*) newBuilderForType { return [ReviewsListProto newBuilder]; }
+ (ReviewsListProto_Builder*) newBuilderWithReviewsListProto:(ReviewsListProto*) prototype {
    return [[ReviewsListProto newBuilder] mergeFromReviewsListProto:prototype];
}

@end

@implementation ReviewsListProto_Builder
@synthesize result;
- (void) dealloc {
    self.result = nil;
    [super dealloc];
}
- (id) init {
    if (self = [super init]) {
        self.result = [[[ReviewsListProto alloc] init] autorelease];
    }
    return self;
}
- (ReviewsListProto*) internalGetResult {
    return result;
}

- (ReviewsListProto_Builder*) clear {
    self.result = [[[ReviewsListProto alloc] init] autorelease];
    return self;
}

- (ReviewsListProto_Builder*) clone {
    return (ReviewsListProto_Builder*)[[[[ReviewsListProto_Builder alloc] init] autorelease] mergeFromReviewsListProto:result];
}

- (ProtocolBufferDescriptor*) getDescriptorForType {
    return [ReviewsListProto getDescriptor];
}

- (ReviewsListProto*) getDefaultInstanceForType {
    return [ReviewsListProto getDefaultInstance];
}

- (ReviewsListProto*) build {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (ReviewsListProto*) buildParsed {
    if (!self.isInitialized) {
        @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
    }
    return [self buildPartial];
}

- (ReviewsListProto*) buildPartial {
    ReviewsListProto* returnMe = [[result retain] autorelease];
    self.result = nil;
    return returnMe;
}

- (ReviewsListProto_Builder*) mergeFromMessage:(id<Message>) other {
    id o = other;
    if ([o isKindOfClass:[ReviewsListProto class]]) {
        return [self mergeFromReviewsListProto:o];
    } else {
        [super mergeFromMessage:other];
        return self;
    }
}

- (ReviewsListProto_Builder*) mergeFromReviewsListProto:(ReviewsListProto*) other {
    if (other == [ReviewsListProto getDefaultInstance]) return self;
    if (other.reviews_.count > 0) {
        if (result.reviews_ == nil) {
            result.reviews_ = [NSMutableArray array];
        }
        [result.reviews_ addObjectsFromArray:other.reviews_];
    }
    [self mergeUnknownFields:other.getUnknownFields];
    return self;
}

- (ReviewsListProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input {
    return [self mergeFromCodedInputStream:input extensionRegistry:[ExtensionRegistry getEmptyRegistry]];
}

- (ReviewsListProto_Builder*) mergeFromCodedInputStream:(CodedInputStream*) input extensionRegistry:(ExtensionRegistry*) extensionRegistry {
    UnknownFieldSet_Builder* unknownFields = [UnknownFieldSet newBuilder:self.getUnknownFields];
    while (true) {
        int32_t tag = [input readTag];
        switch (tag) {
            case 0:
                [self setUnknownFields:[unknownFields build]];
                return self;
            default: {
                if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
                    [self setUnknownFields:[unknownFields build]];
                    return self;
                }
                break;
            }
            case 10: {
                ReviewProto_Builder* subBuilder = [ReviewProto newBuilder];
                [input readMessage:subBuilder extensionRegistry:extensionRegistry];
                [self addReviews:[subBuilder buildPartial]];
                break;
            }
        }
    }
}


- (NSArray*) getReviewsList {
    if (result.reviews_ == nil) { return [NSArray array]; }
    return [NSArray arrayWithObjects:result.reviews_];
}
- (int32_t) getReviewsCount {
    return result.getReviewsCount;
}
- (ReviewProto*) getReviews:(int32_t) index {
    return [result getReviews:index];
}
- (ReviewsListProto_Builder*) setReviews:(int32_t) index value:(ReviewProto*) value {
    [result.reviews_ replaceObjectAtIndex:index withObject:value];
    return self;
}
- (ReviewsListProto_Builder*) setReviews:(int32_t) index builderForValue:(ReviewProto_Builder*) builderForValue {
    [result.reviews_ replaceObjectAtIndex:index withObject:[builderForValue build]];
    return self;
}
- (ReviewsListProto_Builder*) addReviewsBuilder:(ReviewProto_Builder*) builderForValue {
    if (result.reviews_ == nil) {
        result.reviews_ = [NSMutableArray array];
    }
    [result.reviews_ addObject:[builderForValue build]];
    return self;
}
- (ReviewsListProto_Builder*) addAllReviews:(NSArray*) values {
    if (result.reviews_ == nil) {
        result.reviews_ = [NSMutableArray array];
    }
    [result.reviews_ addObjectsFromArray:values];
    return self;
}
- (ReviewsListProto_Builder*) clearReviews {
    result.reviews_ = nil;
    return self;
}
- (ReviewsListProto_Builder*) addReviews:(ReviewProto*) value {
    if (result.reviews_ == nil) {
        result.reviews_ = [NSMutableArray array];
    }
    [result.reviews_ addObject:value];
    return self;
}
@end

