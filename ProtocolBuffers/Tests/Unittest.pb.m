// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Unittest.pb.h"

@implementation UnittestProtoRoot
static PBFileDescriptor* descriptor = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalInt32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalInt64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalUint32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalUint64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalSint32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalSint64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalFixed32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalFixed64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalSfixed32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalSfixed64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalFloatExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalDoubleExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalBoolExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalStringExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalBytesExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalGroupExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalNestedMessageExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalForeignMessageExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalImportMessageExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalNestedEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalForeignEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalImportEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalStringPieceExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_optionalCordExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedInt32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedInt64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedUint32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedUint64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedSint32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedSint64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedFixed32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedFixed64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedSfixed32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedSfixed64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedFloatExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedDoubleExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedBoolExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedStringExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedBytesExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedGroupExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedNestedMessageExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedForeignMessageExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedImportMessageExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedNestedEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedForeignEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedImportEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedStringPieceExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_repeatedCordExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultInt32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultInt64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultUint32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultUint64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultSint32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultSint64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultFixed32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultFixed64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultSfixed32Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultSfixed64Extension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultFloatExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultDoubleExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultBoolExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultStringExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultBytesExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultNestedEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultForeignEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultImportEnumExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultStringPieceExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_defaultCordExtension = nil;
static PBGeneratedExtension* UnittestProtoRoot_myExtensionString = nil;
static PBGeneratedExtension* UnittestProtoRoot_myExtensionInt = nil;
static PBDescriptor* internal_static_protobuf_unittest_TestAllTypes_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestAllTypes_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestAllTypes_descriptor {
  return internal_static_protobuf_unittest_TestAllTypes_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestAllTypes_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestAllTypes_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestAllTypes_NestedMessage_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestAllTypes_NestedMessage_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestAllTypes_NestedMessage_descriptor {
  return internal_static_protobuf_unittest_TestAllTypes_NestedMessage_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestAllTypes_NestedMessage_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestAllTypes_NestedMessage_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_descriptor {
  return internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_descriptor {
  return internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_ForeignMessage_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_ForeignMessage_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_ForeignMessage_descriptor {
  return internal_static_protobuf_unittest_ForeignMessage_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_ForeignMessage_fieldAccessorTable {
  return internal_static_protobuf_unittest_ForeignMessage_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestAllExtensions_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestAllExtensions_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestAllExtensions_descriptor {
  return internal_static_protobuf_unittest_TestAllExtensions_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestAllExtensions_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestAllExtensions_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_OptionalGroup_extension_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_OptionalGroup_extension_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_OptionalGroup_extension_descriptor {
  return internal_static_protobuf_unittest_OptionalGroup_extension_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_OptionalGroup_extension_fieldAccessorTable {
  return internal_static_protobuf_unittest_OptionalGroup_extension_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_RepeatedGroup_extension_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_RepeatedGroup_extension_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_RepeatedGroup_extension_descriptor {
  return internal_static_protobuf_unittest_RepeatedGroup_extension_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_RepeatedGroup_extension_fieldAccessorTable {
  return internal_static_protobuf_unittest_RepeatedGroup_extension_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestRequired_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestRequired_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestRequired_descriptor {
  return internal_static_protobuf_unittest_TestRequired_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestRequired_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestRequired_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestRequiredForeign_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestRequiredForeign_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestRequiredForeign_descriptor {
  return internal_static_protobuf_unittest_TestRequiredForeign_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestRequiredForeign_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestRequiredForeign_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestForeignNested_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestForeignNested_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestForeignNested_descriptor {
  return internal_static_protobuf_unittest_TestForeignNested_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestForeignNested_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestForeignNested_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestEmptyMessage_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestEmptyMessage_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestEmptyMessage_descriptor {
  return internal_static_protobuf_unittest_TestEmptyMessage_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestEmptyMessage_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestEmptyMessage_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_descriptor {
  return internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestReallyLargeTagNumber_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestReallyLargeTagNumber_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestReallyLargeTagNumber_descriptor {
  return internal_static_protobuf_unittest_TestReallyLargeTagNumber_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestReallyLargeTagNumber_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestReallyLargeTagNumber_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestRecursiveMessage_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestRecursiveMessage_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestRecursiveMessage_descriptor {
  return internal_static_protobuf_unittest_TestRecursiveMessage_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestRecursiveMessage_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestRecursiveMessage_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestMutualRecursionA_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestMutualRecursionA_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestMutualRecursionA_descriptor {
  return internal_static_protobuf_unittest_TestMutualRecursionA_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestMutualRecursionA_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestMutualRecursionA_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestMutualRecursionB_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestMutualRecursionB_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestMutualRecursionB_descriptor {
  return internal_static_protobuf_unittest_TestMutualRecursionB_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestMutualRecursionB_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestMutualRecursionB_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestDupFieldNumber_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestDupFieldNumber_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestDupFieldNumber_descriptor {
  return internal_static_protobuf_unittest_TestDupFieldNumber_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestDupFieldNumber_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestDupFieldNumber_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestDupFieldNumber_Foo_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestDupFieldNumber_Foo_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestDupFieldNumber_Foo_descriptor {
  return internal_static_protobuf_unittest_TestDupFieldNumber_Foo_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestDupFieldNumber_Foo_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestDupFieldNumber_Foo_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestDupFieldNumber_Bar_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestDupFieldNumber_Bar_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestDupFieldNumber_Bar_descriptor {
  return internal_static_protobuf_unittest_TestDupFieldNumber_Bar_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestDupFieldNumber_Bar_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestDupFieldNumber_Bar_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestNestedMessageHasBits_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor {
  return internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestNestedMessageHasBits_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestNestedMessageHasBits_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_descriptor {
  return internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestCamelCaseFieldNames_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestCamelCaseFieldNames_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestCamelCaseFieldNames_descriptor {
  return internal_static_protobuf_unittest_TestCamelCaseFieldNames_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestCamelCaseFieldNames_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestCamelCaseFieldNames_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestFieldOrderings_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestFieldOrderings_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestFieldOrderings_descriptor {
  return internal_static_protobuf_unittest_TestFieldOrderings_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestFieldOrderings_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestFieldOrderings_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_TestExtremeDefaultValues_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_TestExtremeDefaultValues_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_TestExtremeDefaultValues_descriptor {
  return internal_static_protobuf_unittest_TestExtremeDefaultValues_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_TestExtremeDefaultValues_fieldAccessorTable {
  return internal_static_protobuf_unittest_TestExtremeDefaultValues_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_FooRequest_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_FooRequest_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_FooRequest_descriptor {
  return internal_static_protobuf_unittest_FooRequest_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_FooRequest_fieldAccessorTable {
  return internal_static_protobuf_unittest_FooRequest_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_FooResponse_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_FooResponse_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_FooResponse_descriptor {
  return internal_static_protobuf_unittest_FooResponse_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_FooResponse_fieldAccessorTable {
  return internal_static_protobuf_unittest_FooResponse_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_BarRequest_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_BarRequest_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_BarRequest_descriptor {
  return internal_static_protobuf_unittest_BarRequest_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_BarRequest_fieldAccessorTable {
  return internal_static_protobuf_unittest_BarRequest_fieldAccessorTable;
}
static PBDescriptor* internal_static_protobuf_unittest_BarResponse_descriptor = nil;
static PBFieldAccessorTable* internal_static_protobuf_unittest_BarResponse_fieldAccessorTable = nil;
+ (PBDescriptor*) internal_static_protobuf_unittest_BarResponse_descriptor {
  return internal_static_protobuf_unittest_BarResponse_descriptor;
}
+ (PBFieldAccessorTable*) internal_static_protobuf_unittest_BarResponse_fieldAccessorTable {
  return internal_static_protobuf_unittest_BarResponse_fieldAccessorTable;
}
+ (void) initialize {
  if (self == [UnittestProtoRoot class]) {
    descriptor = [[UnittestProtoRoot buildDescriptor] retain];
         UnittestProtoRoot_optionalInt32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:0]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalInt64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:1]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalUint32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:2]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalUint64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:3]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalSint32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:4]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalSint64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:5]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalFixed32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:6]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalFixed64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:7]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalSfixed32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:8]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalSfixed64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:9]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalFloatExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:10]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalDoubleExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:11]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalBoolExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:12]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_optionalStringExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:13]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_optionalBytesExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:14]
                                                           type:[NSData class]] retain];
         UnittestProtoRoot_optionalGroupExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:15]
                                                           type:[OptionalGroup_extension class]] retain];
         UnittestProtoRoot_optionalNestedMessageExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:16]
                                                           type:[TestAllTypes_NestedMessage class]] retain];
         UnittestProtoRoot_optionalForeignMessageExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:17]
                                                           type:[ForeignMessage class]] retain];
         UnittestProtoRoot_optionalImportMessageExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:18]
                                                           type:[ImportMessage class]] retain];
         UnittestProtoRoot_optionalNestedEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:19]
                                                           type:[TestAllTypes_NestedEnum class]] retain];
         UnittestProtoRoot_optionalForeignEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:20]
                                                           type:[ForeignEnum class]] retain];
         UnittestProtoRoot_optionalImportEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:21]
                                                           type:[ImportEnum class]] retain];
         UnittestProtoRoot_optionalStringPieceExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:22]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_optionalCordExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:23]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_repeatedInt32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:24]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedInt64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:25]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedUint32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:26]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedUint64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:27]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedSint32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:28]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedSint64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:29]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedFixed32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:30]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedFixed64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:31]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedSfixed32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:32]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedSfixed64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:33]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedFloatExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:34]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedDoubleExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:35]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedBoolExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:36]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_repeatedStringExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:37]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_repeatedBytesExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:38]
                                                           type:[NSData class]] retain];
         UnittestProtoRoot_repeatedGroupExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:39]
                                                           type:[RepeatedGroup_extension class]] retain];
         UnittestProtoRoot_repeatedNestedMessageExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:40]
                                                           type:[TestAllTypes_NestedMessage class]] retain];
         UnittestProtoRoot_repeatedForeignMessageExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:41]
                                                           type:[ForeignMessage class]] retain];
         UnittestProtoRoot_repeatedImportMessageExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:42]
                                                           type:[ImportMessage class]] retain];
         UnittestProtoRoot_repeatedNestedEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:43]
                                                           type:[TestAllTypes_NestedEnum class]] retain];
         UnittestProtoRoot_repeatedForeignEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:44]
                                                           type:[ForeignEnum class]] retain];
         UnittestProtoRoot_repeatedImportEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:45]
                                                           type:[ImportEnum class]] retain];
         UnittestProtoRoot_repeatedStringPieceExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:46]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_repeatedCordExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:47]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_defaultInt32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:48]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultInt64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:49]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultUint32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:50]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultUint64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:51]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultSint32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:52]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultSint64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:53]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultFixed32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:54]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultFixed64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:55]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultSfixed32Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:56]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultSfixed64Extension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:57]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultFloatExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:58]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultDoubleExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:59]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultBoolExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:60]
                                                           type:[NSNumber class]] retain];
         UnittestProtoRoot_defaultStringExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:61]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_defaultBytesExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:62]
                                                           type:[NSData class]] retain];
         UnittestProtoRoot_defaultNestedEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:63]
                                                           type:[TestAllTypes_NestedEnum class]] retain];
         UnittestProtoRoot_defaultForeignEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:64]
                                                           type:[ForeignEnum class]] retain];
         UnittestProtoRoot_defaultImportEnumExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:65]
                                                           type:[ImportEnum class]] retain];
         UnittestProtoRoot_defaultStringPieceExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:66]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_defaultCordExtension = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:67]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_myExtensionString = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:68]
                                                           type:[NSString class]] retain];
         UnittestProtoRoot_myExtensionInt = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:69]
                                                           type:[NSNumber class]] retain];
    internal_static_protobuf_unittest_TestAllTypes_descriptor = [[[self descriptor].messageTypes objectAtIndex:0] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"OptionalInt32",
      @"OptionalInt64",
      @"OptionalUint32",
      @"OptionalUint64",
      @"OptionalSint32",
      @"OptionalSint64",
      @"OptionalFixed32",
      @"OptionalFixed64",
      @"OptionalSfixed32",
      @"OptionalSfixed64",
      @"OptionalFloat",
      @"OptionalDouble",
      @"OptionalBool",
      @"OptionalString",
      @"OptionalBytes",
      @"OptionalGroup",
      @"OptionalNestedMessage",
      @"OptionalForeignMessage",
      @"OptionalImportMessage",
      @"OptionalNestedEnum",
      @"OptionalForeignEnum",
      @"OptionalImportEnum",
      @"OptionalStringPiece",
      @"OptionalCord",
      @"RepeatedInt32",
      @"RepeatedInt64",
      @"RepeatedUint32",
      @"RepeatedUint64",
      @"RepeatedSint32",
      @"RepeatedSint64",
      @"RepeatedFixed32",
      @"RepeatedFixed64",
      @"RepeatedSfixed32",
      @"RepeatedSfixed64",
      @"RepeatedFloat",
      @"RepeatedDouble",
      @"RepeatedBool",
      @"RepeatedString",
      @"RepeatedBytes",
      @"RepeatedGroup",
      @"RepeatedNestedMessage",
      @"RepeatedForeignMessage",
      @"RepeatedImportMessage",
      @"RepeatedNestedEnum",
      @"RepeatedForeignEnum",
      @"RepeatedImportEnum",
      @"RepeatedStringPiece",
      @"RepeatedCord",
      @"DefaultInt32",
      @"DefaultInt64",
      @"DefaultUint32",
      @"DefaultUint64",
      @"DefaultSint32",
      @"DefaultSint64",
      @"DefaultFixed32",
      @"DefaultFixed64",
      @"DefaultSfixed32",
      @"DefaultSfixed64",
      @"DefaultFloat",
      @"DefaultDouble",
      @"DefaultBool",
      @"DefaultString",
      @"DefaultBytes",
      @"DefaultNestedEnum",
      @"DefaultForeignEnum",
      @"DefaultImportEnum",
      @"DefaultStringPiece",
      @"DefaultCord",
      nil];
      internal_static_protobuf_unittest_TestAllTypes_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestAllTypes_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestAllTypes class]
                                      builderClass:[TestAllTypes_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestAllTypes_NestedMessage_descriptor = [[[internal_static_protobuf_unittest_TestAllTypes_descriptor nestedTypes] objectAtIndex:0] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"Bb",
      nil];
      internal_static_protobuf_unittest_TestAllTypes_NestedMessage_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestAllTypes_NestedMessage_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestAllTypes_NestedMessage class]
                                      builderClass:[TestAllTypes_NestedMessage_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_descriptor = [[[internal_static_protobuf_unittest_TestAllTypes_descriptor nestedTypes] objectAtIndex:1] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      nil];
      internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestAllTypes_OptionalGroup class]
                                      builderClass:[TestAllTypes_OptionalGroup_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_descriptor = [[[internal_static_protobuf_unittest_TestAllTypes_descriptor nestedTypes] objectAtIndex:2] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      nil];
      internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestAllTypes_RepeatedGroup class]
                                      builderClass:[TestAllTypes_RepeatedGroup_Builder class]] retain];
    }
    internal_static_protobuf_unittest_ForeignMessage_descriptor = [[[self descriptor].messageTypes objectAtIndex:1] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"C",
      nil];
      internal_static_protobuf_unittest_ForeignMessage_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_ForeignMessage_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[ForeignMessage class]
                                      builderClass:[ForeignMessage_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestAllExtensions_descriptor = [[[self descriptor].messageTypes objectAtIndex:2] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_TestAllExtensions_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestAllExtensions_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestAllExtensions class]
                                      builderClass:[TestAllExtensions_Builder class]] retain];
    }
    internal_static_protobuf_unittest_OptionalGroup_extension_descriptor = [[[self descriptor].messageTypes objectAtIndex:3] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      nil];
      internal_static_protobuf_unittest_OptionalGroup_extension_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_OptionalGroup_extension_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[OptionalGroup_extension class]
                                      builderClass:[OptionalGroup_extension_Builder class]] retain];
    }
    internal_static_protobuf_unittest_RepeatedGroup_extension_descriptor = [[[self descriptor].messageTypes objectAtIndex:4] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      nil];
      internal_static_protobuf_unittest_RepeatedGroup_extension_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_RepeatedGroup_extension_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[RepeatedGroup_extension class]
                                      builderClass:[RepeatedGroup_extension_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestRequired_descriptor = [[[self descriptor].messageTypes objectAtIndex:5] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      @"Dummy2",
      @"B",
      @"Dummy4",
      @"Dummy5",
      @"Dummy6",
      @"Dummy7",
      @"Dummy8",
      @"Dummy9",
      @"Dummy10",
      @"Dummy11",
      @"Dummy12",
      @"Dummy13",
      @"Dummy14",
      @"Dummy15",
      @"Dummy16",
      @"Dummy17",
      @"Dummy18",
      @"Dummy19",
      @"Dummy20",
      @"Dummy21",
      @"Dummy22",
      @"Dummy23",
      @"Dummy24",
      @"Dummy25",
      @"Dummy26",
      @"Dummy27",
      @"Dummy28",
      @"Dummy29",
      @"Dummy30",
      @"Dummy31",
      @"Dummy32",
      @"C",
      nil];
      internal_static_protobuf_unittest_TestRequired_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestRequired_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestRequired class]
                                      builderClass:[TestRequired_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestRequiredForeign_descriptor = [[[self descriptor].messageTypes objectAtIndex:6] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"OptionalMessage",
      @"RepeatedMessage",
      @"Dummy",
      nil];
      internal_static_protobuf_unittest_TestRequiredForeign_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestRequiredForeign_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestRequiredForeign class]
                                      builderClass:[TestRequiredForeign_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestForeignNested_descriptor = [[[self descriptor].messageTypes objectAtIndex:7] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"ForeignNested",
      nil];
      internal_static_protobuf_unittest_TestForeignNested_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestForeignNested_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestForeignNested class]
                                      builderClass:[TestForeignNested_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestEmptyMessage_descriptor = [[[self descriptor].messageTypes objectAtIndex:8] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_TestEmptyMessage_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestEmptyMessage_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestEmptyMessage class]
                                      builderClass:[TestEmptyMessage_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_descriptor = [[[self descriptor].messageTypes objectAtIndex:9] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestEmptyMessageWithExtensions class]
                                      builderClass:[TestEmptyMessageWithExtensions_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestReallyLargeTagNumber_descriptor = [[[self descriptor].messageTypes objectAtIndex:10] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      @"Bb",
      nil];
      internal_static_protobuf_unittest_TestReallyLargeTagNumber_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestReallyLargeTagNumber_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestReallyLargeTagNumber class]
                                      builderClass:[TestReallyLargeTagNumber_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestRecursiveMessage_descriptor = [[[self descriptor].messageTypes objectAtIndex:11] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      @"I",
      nil];
      internal_static_protobuf_unittest_TestRecursiveMessage_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestRecursiveMessage_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestRecursiveMessage class]
                                      builderClass:[TestRecursiveMessage_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestMutualRecursionA_descriptor = [[[self descriptor].messageTypes objectAtIndex:12] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"Bb",
      nil];
      internal_static_protobuf_unittest_TestMutualRecursionA_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestMutualRecursionA_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestMutualRecursionA class]
                                      builderClass:[TestMutualRecursionA_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestMutualRecursionB_descriptor = [[[self descriptor].messageTypes objectAtIndex:13] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      @"OptionalInt32",
      nil];
      internal_static_protobuf_unittest_TestMutualRecursionB_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestMutualRecursionB_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestMutualRecursionB class]
                                      builderClass:[TestMutualRecursionB_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestDupFieldNumber_descriptor = [[[self descriptor].messageTypes objectAtIndex:14] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      @"Foo",
      @"Bar",
      nil];
      internal_static_protobuf_unittest_TestDupFieldNumber_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestDupFieldNumber_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestDupFieldNumber class]
                                      builderClass:[TestDupFieldNumber_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestDupFieldNumber_Foo_descriptor = [[[internal_static_protobuf_unittest_TestDupFieldNumber_descriptor nestedTypes] objectAtIndex:0] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      nil];
      internal_static_protobuf_unittest_TestDupFieldNumber_Foo_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestDupFieldNumber_Foo_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestDupFieldNumber_Foo class]
                                      builderClass:[TestDupFieldNumber_Foo_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestDupFieldNumber_Bar_descriptor = [[[internal_static_protobuf_unittest_TestDupFieldNumber_descriptor nestedTypes] objectAtIndex:1] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"A",
      nil];
      internal_static_protobuf_unittest_TestDupFieldNumber_Bar_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestDupFieldNumber_Bar_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestDupFieldNumber_Bar class]
                                      builderClass:[TestDupFieldNumber_Bar_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor = [[[self descriptor].messageTypes objectAtIndex:15] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"OptionalNestedMessage",
      nil];
      internal_static_protobuf_unittest_TestNestedMessageHasBits_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestNestedMessageHasBits class]
                                      builderClass:[TestNestedMessageHasBits_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_descriptor = [[[internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor nestedTypes] objectAtIndex:0] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"NestedmessageRepeatedInt32",
      @"NestedmessageRepeatedForeignmessage",
      nil];
      internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestNestedMessageHasBits_NestedMessage class]
                                      builderClass:[TestNestedMessageHasBits_NestedMessage_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestCamelCaseFieldNames_descriptor = [[[self descriptor].messageTypes objectAtIndex:16] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"PrimitiveField",
      @"StringField",
      @"EnumField",
      @"MessageField",
      @"StringPieceField",
      @"CordField",
      @"RepeatedPrimitiveField",
      @"RepeatedStringField",
      @"RepeatedEnumField",
      @"RepeatedMessageField",
      @"RepeatedStringPieceField",
      @"RepeatedCordField",
      nil];
      internal_static_protobuf_unittest_TestCamelCaseFieldNames_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestCamelCaseFieldNames_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestCamelCaseFieldNames class]
                                      builderClass:[TestCamelCaseFieldNames_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestFieldOrderings_descriptor = [[[self descriptor].messageTypes objectAtIndex:17] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"MyString",
      @"MyInt",
      @"MyFloat",
      nil];
      internal_static_protobuf_unittest_TestFieldOrderings_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestFieldOrderings_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestFieldOrderings class]
                                      builderClass:[TestFieldOrderings_Builder class]] retain];
    }
    internal_static_protobuf_unittest_TestExtremeDefaultValues_descriptor = [[[self descriptor].messageTypes objectAtIndex:18] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      @"EscapedBytes",
      @"LargeUint32",
      @"LargeUint64",
      @"SmallInt32",
      @"SmallInt64",
      @"Utf8String",
      nil];
      internal_static_protobuf_unittest_TestExtremeDefaultValues_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_TestExtremeDefaultValues_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[TestExtremeDefaultValues class]
                                      builderClass:[TestExtremeDefaultValues_Builder class]] retain];
    }
    internal_static_protobuf_unittest_FooRequest_descriptor = [[[self descriptor].messageTypes objectAtIndex:19] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_FooRequest_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_FooRequest_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[FooRequest class]
                                      builderClass:[FooRequest_Builder class]] retain];
    }
    internal_static_protobuf_unittest_FooResponse_descriptor = [[[self descriptor].messageTypes objectAtIndex:20] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_FooResponse_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_FooResponse_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[FooResponse class]
                                      builderClass:[FooResponse_Builder class]] retain];
    }
    internal_static_protobuf_unittest_BarRequest_descriptor = [[[self descriptor].messageTypes objectAtIndex:21] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_BarRequest_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_BarRequest_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[BarRequest class]
                                      builderClass:[BarRequest_Builder class]] retain];
    }
    internal_static_protobuf_unittest_BarResponse_descriptor = [[[self descriptor].messageTypes objectAtIndex:22] retain];
    {
      NSArray* fieldNames = [NSArray arrayWithObjects:
      nil];
      internal_static_protobuf_unittest_BarResponse_fieldAccessorTable = 
        [[PBFieldAccessorTable tableWithDescriptor:internal_static_protobuf_unittest_BarResponse_descriptor
                                        fieldNames:fieldNames
                                      messageClass:[BarResponse class]
                                      builderClass:[BarResponse_Builder class]] retain];
    }
  }
}
+ (PBFileDescriptor*) descriptor {
  return descriptor;
}
+ (PBFileDescriptor*) buildDescriptor {
  NSString* descriptorData = [NSString stringWithCString:
    "\n\036google/protobuf/unittest.proto\022\021protobuf_unittest\032%googl"
    "e/protobuf/unittest_import.proto\"\273\025\n\014TestAllTypes\022\026\n\016"
    "optional_int32\030\001 \001(\005\022\026\n\016optional_int64\030\002 \001"
    "(\003\022\027\n\017optional_uint32\030\003 \001(\r\022\027\n\017optiona"
    "l_uint64\030\004 \001(\004\022\027\n\017optional_sint32\030\005 \001(\021"
    "\022\027\n\017optional_sint64\030\006 \001(\022\022\030\n\020optional_f"
    "ixed32\030\007 \001(\007\022\030\n\020optional_fixed64\030\010 \001(\006"
    "\022\031\n\021optional_sfixed32\030\t \001(\017\022\031\n\021optional_s"
    "fixed64\030\n \001(\020\022\026\n\016optional_float\030\013 \001(\002\022"
    "\027\n\017optional_double\030\014 \001(\001\022\025\n\roptional_bool\030"
    "\r \001(\010\022\027\n\017optional_string\030\016 \001(\t\022\026\n\016"
    "optional_bytes\030\017 \001(\014\022D\n\roptionalgroup\030\020 \001(\n2"
    "-.protobuf_unittest.TestAllTypes.OptionalGroup\022N\n\027optional_neste"
    "d_message\030\022 \001(\0132-.protobuf_unittest.TestAllTypes.NestedMess"
    "age\022C\n\030optional_foreign_message\030\023 \001(\0132!.protobuf_uni"
    "ttest.ForeignMessage\022H\n\027optional_import_message\030\024 \001(\013"
    "2\'.protobuf_unittest_import.ImportMessage\022H\n\024optional_nested_en"
    "um\030\025 \001(\0162*.protobuf_unittest.TestAllTypes.NestedEnum\022=\n"
    "\025optional_foreign_enum\030\026 \001(\0162\036.protobuf_unittest.Fore"
    "ignEnum\022B\n\024optional_import_enum\030\027 \001(\0162$.protobuf_uni"
    "ttest_import.ImportEnum\022!\n\025optional_string_piece\030\030 \001(\t"
    "B\002\010\002\022\031\n\roptional_cord\030\031 \001(\tB\002\010\001\022"
    "\026\n\016repeated_int32\030\037 \003(\005\022\026\n\016repeated_int64\030"
    "  \003(\003\022\027\n\017repeated_uint32\030! \003(\r\022\027\n\017repe"
    "ated_uint64\030\" \003(\004\022\027\n\017repeated_sint32\030# \003(\021"
    "\022\027\n\017repeated_sint64\030$ \003(\022\022\030\n\020repeated_fixe"
    "d32\030% \003(\007\022\030\n\020repeated_fixed64\030& \003(\006\022\031"
    "\n\021repeated_sfixed32\030\' \003(\017\022\031\n\021repeated_sfixed64\030"
    "( \003(\020\022\026\n\016repeated_float\030) \003(\002\022\027\n\017rep"
    "eated_double\030* \003(\001\022\025\n\rrepeated_bool\030+ \003(\010\022"
    "\027\n\017repeated_string\030, \003(\t\022\026\n\016repeated_bytes\030-"
    " \003(\014\022D\n\rrepeatedgroup\030. \003(\n2-.protobuf_unittest.TestA"
    "llTypes.RepeatedGroup\022N\n\027repeated_nested_message\0300 \003(\0132"
    "-.protobuf_unittest.TestAllTypes.NestedMessage\022C\n\030repeated_forei"
    "gn_message\0301 \003(\0132!.protobuf_unittest.ForeignMessage\022H\n\027"
    "repeated_import_message\0302 \003(\0132\'.protobuf_unittest_import.Impo"
    "rtMessage\022H\n\024repeated_nested_enum\0303 \003(\0162*.protobuf_unit"
    "test.TestAllTypes.NestedEnum\022=\n\025repeated_foreign_enum\0304 \003("
    "\0162\036.protobuf_unittest.ForeignEnum\022B\n\024repeated_import_enum\030"
    "5 \003(\0162$.protobuf_unittest_import.ImportEnum\022!\n\025repeated_st"
    "ring_piece\0306 \003(\tB\002\010\002\022\031\n\rrepeated_cord\0307 \003"
    "(\tB\002\010\001\022\031\n\rdefault_int32\030= \001(\005:\00241\022\031"
    "\n\rdefault_int64\030> \001(\003:\00242\022\032\n\016default_uint32\030"
    "? \001(\r:\00243\022\032\n\016default_uint64\030@ \001(\004:\00244\022\033"
    "\n\016default_sint32\030A \001(\021:\003-45\022\032\n\016default_sint64"
    "\030B \001(\022:\00246\022\033\n\017default_fixed32\030C \001(\007:\002"
    "47\022\033\n\017default_fixed64\030D \001(\006:\00248\022\034\n\020defa"
    "ult_sfixed32\030E \001(\017:\00249\022\035\n\020default_sfixed64\030F \001"
    "(\020:\003-50\022\033\n\rdefault_float\030G \001(\002:\00451.5\022\035\n"
    "\016default_double\030H \001(\001:\00552000\022\032\n\014default_bool\030"
    "I \001(\010:\004true\022\035\n\016default_string\030J \001(\t:\005hello"
    "\022\034\n\rdefault_bytes\030K \001(\014:\005world\022L\n\023default_ne"
    "sted_enum\030Q \001(\0162*.protobuf_unittest.TestAllTypes.NestedEnum:\003"
    "BAR\022I\n\024default_foreign_enum\030R \001(\0162\036.protobuf_unittes"
    "t.ForeignEnum:\013FOREIGN_BAR\022M\n\023default_import_enum\030S \001(\016"
    "2$.protobuf_unittest_import.ImportEnum:\nIMPORT_BAR\022%\n\024default_s"
    "tring_piece\030T \001(\t:\003abcB\002\010\002\022\035\n\014default_cord"
    "\030U \001(\t:\003123B\002\010\001\032\033\n\rNestedMessage\022\n\n\002"
    "bb\030\001 \001(\005\032\032\n\rOptionalGroup\022\t\n\001a\030\021 \001"
    "(\005\032\032\n\rRepeatedGroup\022\t\n\001a\030/ \001(\005\"\'\n\nNeste"
    "dEnum\022\007\n\003FOO\020\001\022\007\n\003BAR\020\002\022\007\n\003BA"
    "Z\020\003\"\033\n\016ForeignMessage\022\t\n\001c\030\001 \001(\005\"\035"
    "\n\021TestAllExtensions*\010\010\001\020\200\200\200\200\002\"$\n\027Op"
    "tionalGroup_extension\022\t\n\001a\030\021 \001(\005\"$\n\027RepeatedGr"
    "oup_extension\022\t\n\001a\030/ \001(\005\"\325\005\n\014TestRequired\022"
    "\t\n\001a\030\001 \002(\005\022\016\n\006dummy2\030\002 \001(\005\022\t"
    "\n\001b\030\003 \002(\005\022\016\n\006dummy4\030\004 \001(\005\022\016"
    "\n\006dummy5\030\005 \001(\005\022\016\n\006dummy6\030\006 \001(\005\022"
    "\016\n\006dummy7\030\007 \001(\005\022\016\n\006dummy8\030\010 \001(\005"
    "\022\016\n\006dummy9\030\t \001(\005\022\017\n\007dummy10\030\n \001(\005"
    "\022\017\n\007dummy11\030\013 \001(\005\022\017\n\007dummy12\030\014 \001"
    "(\005\022\017\n\007dummy13\030\r \001(\005\022\017\n\007dummy14\030\016"
    " \001(\005\022\017\n\007dummy15\030\017 \001(\005\022\017\n\007dummy16\030"
    "\020 \001(\005\022\017\n\007dummy17\030\021 \001(\005\022\017\n\007dumm"
    "y18\030\022 \001(\005\022\017\n\007dummy19\030\023 \001(\005\022\017\n\007"
    "dummy20\030\024 \001(\005\022\017\n\007dummy21\030\025 \001(\005\022\017"
    "\n\007dummy22\030\026 \001(\005\022\017\n\007dummy23\030\027 \001(\005\022"
    "\017\n\007dummy24\030\030 \001(\005\022\017\n\007dummy25\030\031 \001(\005"
    "\022\017\n\007dummy26\030\032 \001(\005\022\017\n\007dummy27\030\033 \001"
    "(\005\022\017\n\007dummy28\030\034 \001(\005\022\017\n\007dummy29\030\035"
    " \001(\005\022\017\n\007dummy30\030\036 \001(\005\022\017\n\007dummy31\030"
    "\037 \001(\005\022\017\n\007dummy32\030  \001(\005\022\t\n\001c\030! \002"
    "(\0052V\n\006single\022$.protobuf_unittest.TestAllExtensions\030\350\007"
    " \001(\0132\037.protobuf_unittest.TestRequired2U\n\005multi\022$.protob"
    "uf_unittest.TestAllExtensions\030\351\007 \003(\0132\037.protobuf_unitt"
    "est.TestRequired\"\232\001\n\023TestRequiredForeign\0229\n\020optional_"
    "message\030\001 \001(\0132\037.protobuf_unittest.TestRequired\0229\n\020"
    "repeated_message\030\002 \003(\0132\037.protobuf_unittest.TestRequired\022"
    "\r\n\005dummy\030\003 \001(\005\"Z\n\021TestForeignNested\022E\n\016for"
    "eign_nested\030\001 \001(\0132-.protobuf_unittest.TestAllTypes.NestedMe"
    "ssage\"\022\n\020TestEmptyMessage\"*\n\036TestEmptyMessageWithExtension"
    "s*\010\010\001\020\200\200\200\200\002\"4\n\030TestReallyLargeTagNumber"
    "\022\t\n\001a\030\001 \001(\005\022\r\n\002bb\030\377\377\377\177 \001("
    "\005\"U\n\024TestRecursiveMessage\0222\n\001a\030\001 \001(\0132\'.prot"
    "obuf_unittest.TestRecursiveMessage\022\t\n\001i\030\002 \001(\005\"K\n\024"
    "TestMutualRecursionA\0223\n\002bb\030\001 \001(\0132\'.protobuf_unittes"
    "t.TestMutualRecursionB\"b\n\024TestMutualRecursionB\0222\n\001a\030\001"
    " \001(\0132\'.protobuf_unittest.TestMutualRecursionA\022\026\n\016optio"
    "nal_int32\030\002 \001(\005\"\263\001\n\022TestDupFieldNumber\022\t\n\001"
    "a\030\001 \001(\005\0226\n\003foo\030\002 \001(\n2).protobuf_unittest.T"
    "estDupFieldNumber.Foo\0226\n\003bar\030\003 \001(\n2).protobuf_unittest"
    ".TestDupFieldNumber.Bar\032\020\n\003Foo\022\t\n\001a\030\001 \001(\005"
    "\032\020\n\003Bar\022\t\n\001a\030\001 \001(\005\"\200\002\n\030TestNes"
    "tedMessageHasBits\022Z\n\027optional_nested_message\030\001 \001(\01329"
    ".protobuf_unittest.TestNestedMessageHasBits.NestedMessage\032\207\001\n"
    "\rNestedMessage\022$\n\034nestedmessage_repeated_int32\030\001 \003(\005"
    "\022P\n%nestedmessage_repeated_foreignmessage\030\002 \003(\0132!.proto"
    "buf_unittest.ForeignMessage\"\345\003\n\027TestCamelCaseFieldNames\022\026"
    "\n\016PrimitiveField\030\001 \001(\005\022\023\n\013StringField\030\002"
    " \001(\t\0221\n\tEnumField\030\003 \001(\0162\036.protobuf_unittest.For"
    "eignEnum\0227\n\014MessageField\030\004 \001(\0132!.protobuf_unittest.F"
    "oreignMessage\022\034\n\020StringPieceField\030\005 \001(\tB\002\010\002"
    "\022\025\n\tCordField\030\006 \001(\tB\002\010\001\022\036\n\026Repeate"
    "dPrimitiveField\030\007 \003(\005\022\033\n\023RepeatedStringField\030\010"
    " \003(\t\0229\n\021RepeatedEnumField\030\t \003(\0162\036.protobuf_unit"
    "test.ForeignEnum\022?\n\024RepeatedMessageField\030\n \003(\0132!.proto"
    "buf_unittest.ForeignMessage\022$\n\030RepeatedStringPieceField\030\013 "
    "\003(\tB\002\010\002\022\035\n\021RepeatedCordField\030\014 \003(\tB\002"
    "\010\001\"U\n\022TestFieldOrderings\022\021\n\tmy_string\030\013 \001(\t"
    "\022\016\n\006my_int\030\001 \001(\003\022\020\n\010my_float\030e \001("
    "\002*\004\010\002\020\013*\004\010\014\020e\"\220\002\n\030TestExtremeD"
    "efaultValues\022?\n\rescaped_bytes\030\001 \001(\014:(\\000\\001\\007\\"
    "010\\014\\n\\r\\t\\013\\\\\\\'\\\"\\376\022 \n\014large_uint32\030\002 "
    "\001(\r:\n4294967295\022*\n\014large_uint64\030\003 \001(\004:\02418446"
    "744073709551615\022 \n\013small_int32\030\004 \001(\005:\013-2147483647"
    "\022)\n\013small_int64\030\005 \001(\003:\024-9223372036854775807\022\030"
    "\n\013utf8_string\030\006 \001(\t:\003\341\210\264\"\014\n\nFooRequest\""
    "\r\n\013FooResponse\"\014\n\nBarRequest\"\r\n\013BarResponse*@\n\013For"
    "eignEnum\022\017\n\013FOREIGN_FOO\020\004\022\017\n\013FOREIGN_BAR\020\005"
    "\022\017\n\013FOREIGN_BAZ\020\006*G\n\024TestEnumWithDupValue\022\010\n"
    "\004FOO1\020\001\022\010\n\004BAR1\020\002\022\007\n\003BAZ\020\003\022"
    "\010\n\004FOO2\020\001\022\010\n\004BAR2\020\002*\211\001\n\016TestSpar"
    "seEnum\022\014\n\010SPARSE_A\020{\022\016\n\010SPARSE_B\020\246\347\003"
    "\022\017\n\010SPARSE_C\020\262\261\200\006\022\025\n\010SPARSE_D\020\361"
    "\377\377\377\377\377\377\377\377\001\022\025\n\010SPARSE_E\020\264\336\374"
    "\377\377\377\377\377\377\001\022\014\n\010SPARSE_F\020\000\022\014\n\010"
    "SPARSE_G\020\0022\231\001\n\013TestService\022D\n\003Foo\022\035.protob"
    "uf_unittest.FooRequest\032\036.protobuf_unittest.FooResponse\022D\n\003"
    "Bar\022\035.protobuf_unittest.BarRequest\032\036.protobuf_unittest.BarR"
    "esponse:F\n\030optional_int32_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030\001 \001(\005:F\n\030optional_int64_extension\022$.protob"
    "uf_unittest.TestAllExtensions\030\002 \001(\003:G\n\031optional_uint32_"
    "extension\022$.protobuf_unittest.TestAllExtensions\030\003 \001(\r:G\n\031"
    "optional_uint64_extension\022$.protobuf_unittest.TestAllExtensions\030\004"
    " \001(\004:G\n\031optional_sint32_extension\022$.protobuf_unittest.Test"
    "AllExtensions\030\005 \001(\021:G\n\031optional_sint64_extension\022$.p"
    "rotobuf_unittest.TestAllExtensions\030\006 \001(\022:H\n\032optional_fi"
    "xed32_extension\022$.protobuf_unittest.TestAllExtensions\030\007 \001(\007"
    ":H\n\032optional_fixed64_extension\022$.protobuf_unittest.TestAllExtens"
    "ions\030\010 \001(\006:I\n\033optional_sfixed32_extension\022$.protobuf"
    "_unittest.TestAllExtensions\030\t \001(\017:I\n\033optional_sfixed64_ex"
    "tension\022$.protobuf_unittest.TestAllExtensions\030\n \001(\020:F\n\030"
    "optional_float_extension\022$.protobuf_unittest.TestAllExtensions\030\013"
    " \001(\002:G\n\031optional_double_extension\022$.protobuf_unittest.Test"
    "AllExtensions\030\014 \001(\001:E\n\027optional_bool_extension\022$.pro"
    "tobuf_unittest.TestAllExtensions\030\r \001(\010:G\n\031optional_string"
    "_extension\022$.protobuf_unittest.TestAllExtensions\030\016 \001(\t:F\n"
    "\030optional_bytes_extension\022$.protobuf_unittest.TestAllExtensions\030"
    "\017 \001(\014:q\n\027optionalgroup_extension\022$.protobuf_unittest.Te"
    "stAllExtensions\030\020 \001(\n2*.protobuf_unittest.OptionalGroup_exten"
    "sion:~\n!optional_nested_message_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030\022 \001(\0132-.protobuf_unittest.TestAllTypes.NestedM"
    "essage:s\n\"optional_foreign_message_extension\022$.protobuf_unittest.T"
    "estAllExtensions\030\023 \001(\0132!.protobuf_unittest.ForeignMessage:x"
    "\n!optional_import_message_extension\022$.protobuf_unittest.TestAllExte"
    "nsions\030\024 \001(\0132\'.protobuf_unittest_import.ImportMessage:x\n\036"
    "optional_nested_enum_extension\022$.protobuf_unittest.TestAllExtensions"
    "\030\025 \001(\0162*.protobuf_unittest.TestAllTypes.NestedEnum:m\n\037o"
    "ptional_foreign_enum_extension\022$.protobuf_unittest.TestAllExtensions"
    "\030\026 \001(\0162\036.protobuf_unittest.ForeignEnum:r\n\036optional_i"
    "mport_enum_extension\022$.protobuf_unittest.TestAllExtensions\030\027 \001"
    "(\0162$.protobuf_unittest_import.ImportEnum:Q\n\037optional_string_piec"
    "e_extension\022$.protobuf_unittest.TestAllExtensions\030\030 \001(\tB\002"
    "\010\002:I\n\027optional_cord_extension\022$.protobuf_unittest.TestAllE"
    "xtensions\030\031 \001(\tB\002\010\001:F\n\030repeated_int32_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030\037 \003(\005:F\n\030repeated"
    "_int64_extension\022$.protobuf_unittest.TestAllExtensions\030  \003(\003"
    ":G\n\031repeated_uint32_extension\022$.protobuf_unittest.TestAllExtensi"
    "ons\030! \003(\r:G\n\031repeated_uint64_extension\022$.protobuf_unittes"
    "t.TestAllExtensions\030\" \003(\004:G\n\031repeated_sint32_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030# \003(\021:G\n\031repeated_si"
    "nt64_extension\022$.protobuf_unittest.TestAllExtensions\030$ \003(\022:"
    "H\n\032repeated_fixed32_extension\022$.protobuf_unittest.TestAllExtensi"
    "ons\030% \003(\007:H\n\032repeated_fixed64_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030& \003(\006:I\n\033repeated_sfixed32_extensio"
    "n\022$.protobuf_unittest.TestAllExtensions\030\' \003(\017:I\n\033repea"
    "ted_sfixed64_extension\022$.protobuf_unittest.TestAllExtensions\030( \003"
    "(\020:F\n\030repeated_float_extension\022$.protobuf_unittest.TestAllExt"
    "ensions\030) \003(\002:G\n\031repeated_double_extension\022$.protobuf_u"
    "nittest.TestAllExtensions\030* \003(\001:E\n\027repeated_bool_extension"
    "\022$.protobuf_unittest.TestAllExtensions\030+ \003(\010:G\n\031repeate"
    "d_string_extension\022$.protobuf_unittest.TestAllExtensions\030, \003(\t"
    ":F\n\030repeated_bytes_extension\022$.protobuf_unittest.TestAllExtensio"
    "ns\030- \003(\014:q\n\027repeatedgroup_extension\022$.protobuf_unittest"
    ".TestAllExtensions\030. \003(\n2*.protobuf_unittest.RepeatedGroup_exten"
    "sion:~\n!repeated_nested_message_extension\022$.protobuf_unittest.TestA"
    "llExtensions\0300 \003(\0132-.protobuf_unittest.TestAllTypes.NestedMess"
    "age:s\n\"repeated_foreign_message_extension\022$.protobuf_unittest.Test"
    "AllExtensions\0301 \003(\0132!.protobuf_unittest.ForeignMessage:x\n!rep"
    "eated_import_message_extension\022$.protobuf_unittest.TestAllExtensions"
    "\0302 \003(\0132\'.protobuf_unittest_import.ImportMessage:x\n\036repeat"
    "ed_nested_enum_extension\022$.protobuf_unittest.TestAllExtensions\0303 "
    "\003(\0162*.protobuf_unittest.TestAllTypes.NestedEnum:m\n\037repeated_f"
    "oreign_enum_extension\022$.protobuf_unittest.TestAllExtensions\0304 \003"
    "(\0162\036.protobuf_unittest.ForeignEnum:r\n\036repeated_import_enum_ex"
    "tension\022$.protobuf_unittest.TestAllExtensions\0305 \003(\0162$.proto"
    "buf_unittest_import.ImportEnum:Q\n\037repeated_string_piece_extension\022"
    "$.protobuf_unittest.TestAllExtensions\0306 \003(\tB\002\010\002:I\n\027"
    "repeated_cord_extension\022$.protobuf_unittest.TestAllExtensions\0307 \003"
    "(\tB\002\010\001:I\n\027default_int32_extension\022$.protobuf_unittest."
    "TestAllExtensions\030= \001(\005:\00241:I\n\027default_int64_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030> \001(\003:\00242:J\n\030defa"
    "ult_uint32_extension\022$.protobuf_unittest.TestAllExtensions\030? \001"
    "(\r:\00243:J\n\030default_uint64_extension\022$.protobuf_unittest.TestA"
    "llExtensions\030@ \001(\004:\00244:K\n\030default_sint32_extension\022$"
    ".protobuf_unittest.TestAllExtensions\030A \001(\021:\003-45:J\n\030defa"
    "ult_sint64_extension\022$.protobuf_unittest.TestAllExtensions\030B \001"
    "(\022:\00246:K\n\031default_fixed32_extension\022$.protobuf_unittest.Te"
    "stAllExtensions\030C \001(\007:\00247:K\n\031default_fixed64_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030D \001(\006:\00248:L\n\032defa"
    "ult_sfixed32_extension\022$.protobuf_unittest.TestAllExtensions\030E \001"
    "(\017:\00249:M\n\032default_sfixed64_extension\022$.protobuf_unittest.T"
    "estAllExtensions\030F \001(\020:\003-50:K\n\027default_float_extension\022"
    "$.protobuf_unittest.TestAllExtensions\030G \001(\002:\00451.5:M\n\030de"
    "fault_double_extension\022$.protobuf_unittest.TestAllExtensions\030H \001"
    "(\001:\00552000:J\n\026default_bool_extension\022$.protobuf_unittest.Te"
    "stAllExtensions\030I \001(\010:\004true:M\n\030default_string_extension"
    "\022$.protobuf_unittest.TestAllExtensions\030J \001(\t:\005hello:L\n\027"
    "default_bytes_extension\022$.protobuf_unittest.TestAllExtensions\030K \001"
    "(\014:\005world:|\n\035default_nested_enum_extension\022$.protobuf_unit"
    "test.TestAllExtensions\030Q \001(\0162*.protobuf_unittest.TestAllTypes."
    "NestedEnum:\003BAR:y\n\036default_foreign_enum_extension\022$.protobuf_"
    "unittest.TestAllExtensions\030R \001(\0162\036.protobuf_unittest.Foreig"
    "nEnum:\013FOREIGN_BAR:}\n\035default_import_enum_extension\022$.protobu"
    "f_unittest.TestAllExtensions\030S \001(\0162$.protobuf_unittest_import."
    "ImportEnum:\nIMPORT_BAR:U\n\036default_string_piece_extension\022$.prot"
    "obuf_unittest.TestAllExtensions\030T \001(\t:\003abcB\002\010\002:M\n\026"
    "default_cord_extension\022$.protobuf_unittest.TestAllExtensions\030U \001"
    "(\t:\003123B\002\010\001:B\n\023my_extension_string\022%.protobuf_unitt"
    "est.TestFieldOrderings\0302 \001(\t:?\n\020my_extension_int\022%.protob"
    "uf_unittest.TestFieldOrderings\030\005 \001(\005B\021B\rUnittestProtoH\001"
    ];
  NSArray* dependencies = [NSArray arrayWithObjects:
          [UnittestImportProtoRoot descriptor],
           nil];
  return [PBFileDescriptor internalBuildGeneratedFileFrom:descriptorData dependencies:dependencies];
}
@end

@interface ForeignEnum ()
@property int32_t index;
@property int32_t value;
@end

@implementation ForeignEnum
@synthesize index;
@synthesize value;
static ForeignEnum* ForeignEnum_FOREIGN_FOO = nil;
static ForeignEnum* ForeignEnum_FOREIGN_BAR = nil;
static ForeignEnum* ForeignEnum_FOREIGN_BAZ = nil;
- (id) initWithIndex:(int32_t) index_ value:(int32_t) value_ {
  if (self = [super init]) {
    self.index = index_;
    self.value = value_;
  }
  return self;
}
+ (ForeignEnum*) newWithIndex:(int32_t) index value:(int32_t) value {
  return [[[ForeignEnum alloc] initWithIndex:index value:value] autorelease];
}
+ (void) initialize {
  if (self == [ForeignEnum class]) {
    ForeignEnum_FOREIGN_FOO = [[ForeignEnum newWithIndex:0 value:4] retain];
    ForeignEnum_FOREIGN_BAR = [[ForeignEnum newWithIndex:1 value:5] retain];
    ForeignEnum_FOREIGN_BAZ = [[ForeignEnum newWithIndex:2 value:6] retain];
  }
}
+ (ForeignEnum*) FOREIGN_FOO { return ForeignEnum_FOREIGN_FOO; }
+ (ForeignEnum*) FOREIGN_BAR { return ForeignEnum_FOREIGN_BAR; }
+ (ForeignEnum*) FOREIGN_BAZ { return ForeignEnum_FOREIGN_BAZ; }
- (int32_t) number { return value; }
+ (ForeignEnum*) valueOf:(int32_t) value {
  switch (value) {
    case 4: return [ForeignEnum FOREIGN_FOO];
    case 5: return [ForeignEnum FOREIGN_BAR];
    case 6: return [ForeignEnum FOREIGN_BAZ];
    default: return nil;
  }
}

- (PBEnumValueDescriptor*) valueDescriptor {
  return [[ForeignEnum descriptor].values objectAtIndex:index];
}
- (PBEnumDescriptor*) descriptorForType {
  return [ForeignEnum descriptor];
}
+ (PBEnumDescriptor*) descriptor {
  return [[UnittestProtoRoot descriptor].enumTypes objectAtIndex:0];
}


+ (ForeignEnum*) valueOfDescriptor:(PBEnumValueDescriptor*) desc {
  if (desc.type != [ForeignEnum descriptor]) {
    @throw [NSException exceptionWithName:@"" reason:@"" userInfo:nil];
  }
  ForeignEnum* VALUES[] = {
    [ForeignEnum FOREIGN_FOO],
    [ForeignEnum FOREIGN_BAR],
    [ForeignEnum FOREIGN_BAZ],
  };
  return VALUES[desc.index];
}
@end

@interface TestEnumWithDupValue ()
@property int32_t index;
@property int32_t value;
@end

@implementation TestEnumWithDupValue
@synthesize index;
@synthesize value;
static TestEnumWithDupValue* TestEnumWithDupValue_FOO1 = nil;
static TestEnumWithDupValue* TestEnumWithDupValue_BAR1 = nil;
static TestEnumWithDupValue* TestEnumWithDupValue_BAZ = nil;
- (id) initWithIndex:(int32_t) index_ value:(int32_t) value_ {
  if (self = [super init]) {
    self.index = index_;
    self.value = value_;
  }
  return self;
}
+ (TestEnumWithDupValue*) newWithIndex:(int32_t) index value:(int32_t) value {
  return [[[TestEnumWithDupValue alloc] initWithIndex:index value:value] autorelease];
}
+ (void) initialize {
  if (self == [TestEnumWithDupValue class]) {
    TestEnumWithDupValue_FOO1 = [[TestEnumWithDupValue newWithIndex:0 value:1] retain];
    TestEnumWithDupValue_BAR1 = [[TestEnumWithDupValue newWithIndex:1 value:2] retain];
    TestEnumWithDupValue_BAZ = [[TestEnumWithDupValue newWithIndex:2 value:3] retain];
  }
}
+ (TestEnumWithDupValue*) FOO1 { return TestEnumWithDupValue_FOO1; }
+ (TestEnumWithDupValue*) BAR1 { return TestEnumWithDupValue_BAR1; }
+ (TestEnumWithDupValue*) BAZ { return TestEnumWithDupValue_BAZ; }
+ (TestEnumWithDupValue*) FOO2 { return [TestEnumWithDupValue FOO1]; }
+ (TestEnumWithDupValue*) BAR2 { return [TestEnumWithDupValue BAR1]; }
- (int32_t) number { return value; }
+ (TestEnumWithDupValue*) valueOf:(int32_t) value {
  switch (value) {
    case 1: return [TestEnumWithDupValue FOO1];
    case 2: return [TestEnumWithDupValue BAR1];
    case 3: return [TestEnumWithDupValue BAZ];
    default: return nil;
  }
}

- (PBEnumValueDescriptor*) valueDescriptor {
  return [[TestEnumWithDupValue descriptor].values objectAtIndex:index];
}
- (PBEnumDescriptor*) descriptorForType {
  return [TestEnumWithDupValue descriptor];
}
+ (PBEnumDescriptor*) descriptor {
  return [[UnittestProtoRoot descriptor].enumTypes objectAtIndex:1];
}


+ (TestEnumWithDupValue*) valueOfDescriptor:(PBEnumValueDescriptor*) desc {
  if (desc.type != [TestEnumWithDupValue descriptor]) {
    @throw [NSException exceptionWithName:@"" reason:@"" userInfo:nil];
  }
  TestEnumWithDupValue* VALUES[] = {
    [TestEnumWithDupValue FOO1],
    [TestEnumWithDupValue BAR1],
    [TestEnumWithDupValue BAZ],
    [TestEnumWithDupValue FOO2],
    [TestEnumWithDupValue BAR2],
  };
  return VALUES[desc.index];
}
@end

@interface TestSparseEnum ()
@property int32_t index;
@property int32_t value;
@end

@implementation TestSparseEnum
@synthesize index;
@synthesize value;
static TestSparseEnum* TestSparseEnum_SPARSE_A = nil;
static TestSparseEnum* TestSparseEnum_SPARSE_B = nil;
static TestSparseEnum* TestSparseEnum_SPARSE_C = nil;
static TestSparseEnum* TestSparseEnum_SPARSE_D = nil;
static TestSparseEnum* TestSparseEnum_SPARSE_E = nil;
static TestSparseEnum* TestSparseEnum_SPARSE_F = nil;
static TestSparseEnum* TestSparseEnum_SPARSE_G = nil;
- (id) initWithIndex:(int32_t) index_ value:(int32_t) value_ {
  if (self = [super init]) {
    self.index = index_;
    self.value = value_;
  }
  return self;
}
+ (TestSparseEnum*) newWithIndex:(int32_t) index value:(int32_t) value {
  return [[[TestSparseEnum alloc] initWithIndex:index value:value] autorelease];
}
+ (void) initialize {
  if (self == [TestSparseEnum class]) {
    TestSparseEnum_SPARSE_A = [[TestSparseEnum newWithIndex:0 value:123] retain];
    TestSparseEnum_SPARSE_B = [[TestSparseEnum newWithIndex:1 value:62374] retain];
    TestSparseEnum_SPARSE_C = [[TestSparseEnum newWithIndex:2 value:12589234] retain];
    TestSparseEnum_SPARSE_D = [[TestSparseEnum newWithIndex:3 value:-15] retain];
    TestSparseEnum_SPARSE_E = [[TestSparseEnum newWithIndex:4 value:-53452] retain];
    TestSparseEnum_SPARSE_F = [[TestSparseEnum newWithIndex:5 value:0] retain];
    TestSparseEnum_SPARSE_G = [[TestSparseEnum newWithIndex:6 value:2] retain];
  }
}
+ (TestSparseEnum*) SPARSE_A { return TestSparseEnum_SPARSE_A; }
+ (TestSparseEnum*) SPARSE_B { return TestSparseEnum_SPARSE_B; }
+ (TestSparseEnum*) SPARSE_C { return TestSparseEnum_SPARSE_C; }
+ (TestSparseEnum*) SPARSE_D { return TestSparseEnum_SPARSE_D; }
+ (TestSparseEnum*) SPARSE_E { return TestSparseEnum_SPARSE_E; }
+ (TestSparseEnum*) SPARSE_F { return TestSparseEnum_SPARSE_F; }
+ (TestSparseEnum*) SPARSE_G { return TestSparseEnum_SPARSE_G; }
- (int32_t) number { return value; }
+ (TestSparseEnum*) valueOf:(int32_t) value {
  switch (value) {
    case 123: return [TestSparseEnum SPARSE_A];
    case 62374: return [TestSparseEnum SPARSE_B];
    case 12589234: return [TestSparseEnum SPARSE_C];
    case -15: return [TestSparseEnum SPARSE_D];
    case -53452: return [TestSparseEnum SPARSE_E];
    case 0: return [TestSparseEnum SPARSE_F];
    case 2: return [TestSparseEnum SPARSE_G];
    default: return nil;
  }
}

- (PBEnumValueDescriptor*) valueDescriptor {
  return [[TestSparseEnum descriptor].values objectAtIndex:index];
}
- (PBEnumDescriptor*) descriptorForType {
  return [TestSparseEnum descriptor];
}
+ (PBEnumDescriptor*) descriptor {
  return [[UnittestProtoRoot descriptor].enumTypes objectAtIndex:2];
}


+ (TestSparseEnum*) valueOfDescriptor:(PBEnumValueDescriptor*) desc {
  if (desc.type != [TestSparseEnum descriptor]) {
    @throw [NSException exceptionWithName:@"" reason:@"" userInfo:nil];
  }
  TestSparseEnum* VALUES[] = {
    [TestSparseEnum SPARSE_A],
    [TestSparseEnum SPARSE_B],
    [TestSparseEnum SPARSE_C],
    [TestSparseEnum SPARSE_D],
    [TestSparseEnum SPARSE_E],
    [TestSparseEnum SPARSE_F],
    [TestSparseEnum SPARSE_G],
  };
  return VALUES[desc.index];
}
@end

@interface TestAllTypes ()
@property BOOL hasOptionalInt32;
@property int32_t optionalInt32;
@property BOOL hasOptionalInt64;
@property int64_t optionalInt64;
@property BOOL hasOptionalUint32;
@property int32_t optionalUint32;
@property BOOL hasOptionalUint64;
@property int64_t optionalUint64;
@property BOOL hasOptionalSint32;
@property int32_t optionalSint32;
@property BOOL hasOptionalSint64;
@property int64_t optionalSint64;
@property BOOL hasOptionalFixed32;
@property int32_t optionalFixed32;
@property BOOL hasOptionalFixed64;
@property int64_t optionalFixed64;
@property BOOL hasOptionalSfixed32;
@property int32_t optionalSfixed32;
@property BOOL hasOptionalSfixed64;
@property int64_t optionalSfixed64;
@property BOOL hasOptionalFloat;
@property Float32 optionalFloat;
@property BOOL hasOptionalDouble;
@property Float64 optionalDouble;
@property BOOL hasOptionalBool;
@property BOOL optionalBool;
@property BOOL hasOptionalString;
@property (retain) NSString* optionalString;
@property BOOL hasOptionalBytes;
@property (retain) NSData* optionalBytes;
@property BOOL hasOptionalGroup;
@property (retain) TestAllTypes_OptionalGroup* optionalGroup;
@property BOOL hasOptionalNestedMessage;
@property (retain) TestAllTypes_NestedMessage* optionalNestedMessage;
@property BOOL hasOptionalForeignMessage;
@property (retain) ForeignMessage* optionalForeignMessage;
@property BOOL hasOptionalImportMessage;
@property (retain) ImportMessage* optionalImportMessage;
@property BOOL hasOptionalNestedEnum;
@property (retain) TestAllTypes_NestedEnum* optionalNestedEnum;
@property BOOL hasOptionalForeignEnum;
@property (retain) ForeignEnum* optionalForeignEnum;
@property BOOL hasOptionalImportEnum;
@property (retain) ImportEnum* optionalImportEnum;
@property BOOL hasOptionalStringPiece;
@property (retain) NSString* optionalStringPiece;
@property BOOL hasOptionalCord;
@property (retain) NSString* optionalCord;
@property (retain) NSMutableArray* mutableRepeatedInt32List;
@property (retain) NSMutableArray* mutableRepeatedInt64List;
@property (retain) NSMutableArray* mutableRepeatedUint32List;
@property (retain) NSMutableArray* mutableRepeatedUint64List;
@property (retain) NSMutableArray* mutableRepeatedSint32List;
@property (retain) NSMutableArray* mutableRepeatedSint64List;
@property (retain) NSMutableArray* mutableRepeatedFixed32List;
@property (retain) NSMutableArray* mutableRepeatedFixed64List;
@property (retain) NSMutableArray* mutableRepeatedSfixed32List;
@property (retain) NSMutableArray* mutableRepeatedSfixed64List;
@property (retain) NSMutableArray* mutableRepeatedFloatList;
@property (retain) NSMutableArray* mutableRepeatedDoubleList;
@property (retain) NSMutableArray* mutableRepeatedBoolList;
@property (retain) NSMutableArray* mutableRepeatedStringList;
@property (retain) NSMutableArray* mutableRepeatedBytesList;
@property (retain) NSMutableArray* mutableRepeatedGroupList;
@property (retain) NSMutableArray* mutableRepeatedNestedMessageList;
@property (retain) NSMutableArray* mutableRepeatedForeignMessageList;
@property (retain) NSMutableArray* mutableRepeatedImportMessageList;
@property (retain) NSMutableArray* mutableRepeatedNestedEnumList;
@property (retain) NSMutableArray* mutableRepeatedForeignEnumList;
@property (retain) NSMutableArray* mutableRepeatedImportEnumList;
@property (retain) NSMutableArray* mutableRepeatedStringPieceList;
@property (retain) NSMutableArray* mutableRepeatedCordList;
@property BOOL hasDefaultInt32;
@property int32_t defaultInt32;
@property BOOL hasDefaultInt64;
@property int64_t defaultInt64;
@property BOOL hasDefaultUint32;
@property int32_t defaultUint32;
@property BOOL hasDefaultUint64;
@property int64_t defaultUint64;
@property BOOL hasDefaultSint32;
@property int32_t defaultSint32;
@property BOOL hasDefaultSint64;
@property int64_t defaultSint64;
@property BOOL hasDefaultFixed32;
@property int32_t defaultFixed32;
@property BOOL hasDefaultFixed64;
@property int64_t defaultFixed64;
@property BOOL hasDefaultSfixed32;
@property int32_t defaultSfixed32;
@property BOOL hasDefaultSfixed64;
@property int64_t defaultSfixed64;
@property BOOL hasDefaultFloat;
@property Float32 defaultFloat;
@property BOOL hasDefaultDouble;
@property Float64 defaultDouble;
@property BOOL hasDefaultBool;
@property BOOL defaultBool;
@property BOOL hasDefaultString;
@property (retain) NSString* defaultString;
@property BOOL hasDefaultBytes;
@property (retain) NSData* defaultBytes;
@property BOOL hasDefaultNestedEnum;
@property (retain) TestAllTypes_NestedEnum* defaultNestedEnum;
@property BOOL hasDefaultForeignEnum;
@property (retain) ForeignEnum* defaultForeignEnum;
@property BOOL hasDefaultImportEnum;
@property (retain) ImportEnum* defaultImportEnum;
@property BOOL hasDefaultStringPiece;
@property (retain) NSString* defaultStringPiece;
@property BOOL hasDefaultCord;
@property (retain) NSString* defaultCord;
@end

@implementation TestAllTypes

@synthesize hasOptionalInt32;
@synthesize optionalInt32;
@synthesize hasOptionalInt64;
@synthesize optionalInt64;
@synthesize hasOptionalUint32;
@synthesize optionalUint32;
@synthesize hasOptionalUint64;
@synthesize optionalUint64;
@synthesize hasOptionalSint32;
@synthesize optionalSint32;
@synthesize hasOptionalSint64;
@synthesize optionalSint64;
@synthesize hasOptionalFixed32;
@synthesize optionalFixed32;
@synthesize hasOptionalFixed64;
@synthesize optionalFixed64;
@synthesize hasOptionalSfixed32;
@synthesize optionalSfixed32;
@synthesize hasOptionalSfixed64;
@synthesize optionalSfixed64;
@synthesize hasOptionalFloat;
@synthesize optionalFloat;
@synthesize hasOptionalDouble;
@synthesize optionalDouble;
@synthesize hasOptionalBool;
@synthesize optionalBool;
@synthesize hasOptionalString;
@synthesize optionalString;
@synthesize hasOptionalBytes;
@synthesize optionalBytes;
@synthesize hasOptionalGroup;
@synthesize optionalGroup;
@synthesize hasOptionalNestedMessage;
@synthesize optionalNestedMessage;
@synthesize hasOptionalForeignMessage;
@synthesize optionalForeignMessage;
@synthesize hasOptionalImportMessage;
@synthesize optionalImportMessage;
@synthesize hasOptionalNestedEnum;
@synthesize optionalNestedEnum;
@synthesize hasOptionalForeignEnum;
@synthesize optionalForeignEnum;
@synthesize hasOptionalImportEnum;
@synthesize optionalImportEnum;
@synthesize hasOptionalStringPiece;
@synthesize optionalStringPiece;
@synthesize hasOptionalCord;
@synthesize optionalCord;
@synthesize mutableRepeatedInt32List;
@synthesize mutableRepeatedInt64List;
@synthesize mutableRepeatedUint32List;
@synthesize mutableRepeatedUint64List;
@synthesize mutableRepeatedSint32List;
@synthesize mutableRepeatedSint64List;
@synthesize mutableRepeatedFixed32List;
@synthesize mutableRepeatedFixed64List;
@synthesize mutableRepeatedSfixed32List;
@synthesize mutableRepeatedSfixed64List;
@synthesize mutableRepeatedFloatList;
@synthesize mutableRepeatedDoubleList;
@synthesize mutableRepeatedBoolList;
@synthesize mutableRepeatedStringList;
@synthesize mutableRepeatedBytesList;
@synthesize mutableRepeatedGroupList;
@synthesize mutableRepeatedNestedMessageList;
@synthesize mutableRepeatedForeignMessageList;
@synthesize mutableRepeatedImportMessageList;
@synthesize mutableRepeatedNestedEnumList;
@synthesize mutableRepeatedForeignEnumList;
@synthesize mutableRepeatedImportEnumList;
@synthesize mutableRepeatedStringPieceList;
@synthesize mutableRepeatedCordList;
@synthesize hasDefaultInt32;
@synthesize defaultInt32;
@synthesize hasDefaultInt64;
@synthesize defaultInt64;
@synthesize hasDefaultUint32;
@synthesize defaultUint32;
@synthesize hasDefaultUint64;
@synthesize defaultUint64;
@synthesize hasDefaultSint32;
@synthesize defaultSint32;
@synthesize hasDefaultSint64;
@synthesize defaultSint64;
@synthesize hasDefaultFixed32;
@synthesize defaultFixed32;
@synthesize hasDefaultFixed64;
@synthesize defaultFixed64;
@synthesize hasDefaultSfixed32;
@synthesize defaultSfixed32;
@synthesize hasDefaultSfixed64;
@synthesize defaultSfixed64;
@synthesize hasDefaultFloat;
@synthesize defaultFloat;
@synthesize hasDefaultDouble;
@synthesize defaultDouble;
@synthesize hasDefaultBool;
@synthesize defaultBool;
@synthesize hasDefaultString;
@synthesize defaultString;
@synthesize hasDefaultBytes;
@synthesize defaultBytes;
@synthesize hasDefaultNestedEnum;
@synthesize defaultNestedEnum;
@synthesize hasDefaultForeignEnum;
@synthesize defaultForeignEnum;
@synthesize hasDefaultImportEnum;
@synthesize defaultImportEnum;
@synthesize hasDefaultStringPiece;
@synthesize defaultStringPiece;
@synthesize hasDefaultCord;
@synthesize defaultCord;
- (void) dealloc {
  self.hasOptionalInt32 = NO;
  self.optionalInt32 = 0;
  self.hasOptionalInt64 = NO;
  self.optionalInt64 = 0;
  self.hasOptionalUint32 = NO;
  self.optionalUint32 = 0;
  self.hasOptionalUint64 = NO;
  self.optionalUint64 = 0;
  self.hasOptionalSint32 = NO;
  self.optionalSint32 = 0;
  self.hasOptionalSint64 = NO;
  self.optionalSint64 = 0;
  self.hasOptionalFixed32 = NO;
  self.optionalFixed32 = 0;
  self.hasOptionalFixed64 = NO;
  self.optionalFixed64 = 0;
  self.hasOptionalSfixed32 = NO;
  self.optionalSfixed32 = 0;
  self.hasOptionalSfixed64 = NO;
  self.optionalSfixed64 = 0;
  self.hasOptionalFloat = NO;
  self.optionalFloat = 0;
  self.hasOptionalDouble = NO;
  self.optionalDouble = 0;
  self.hasOptionalBool = NO;
  self.optionalBool = 0;
  self.hasOptionalString = NO;
  self.optionalString = nil;
  self.hasOptionalBytes = NO;
  self.optionalBytes = nil;
  self.hasOptionalGroup = NO;
  self.optionalGroup = nil;
  self.hasOptionalNestedMessage = NO;
  self.optionalNestedMessage = nil;
  self.hasOptionalForeignMessage = NO;
  self.optionalForeignMessage = nil;
  self.hasOptionalImportMessage = NO;
  self.optionalImportMessage = nil;
  self.hasOptionalNestedEnum = NO;
  self.optionalNestedEnum = nil;
  self.hasOptionalForeignEnum = NO;
  self.optionalForeignEnum = nil;
  self.hasOptionalImportEnum = NO;
  self.optionalImportEnum = nil;
  self.hasOptionalStringPiece = NO;
  self.optionalStringPiece = nil;
  self.hasOptionalCord = NO;
  self.optionalCord = nil;
  self.mutableRepeatedInt32List = nil;
  self.mutableRepeatedInt64List = nil;
  self.mutableRepeatedUint32List = nil;
  self.mutableRepeatedUint64List = nil;
  self.mutableRepeatedSint32List = nil;
  self.mutableRepeatedSint64List = nil;
  self.mutableRepeatedFixed32List = nil;
  self.mutableRepeatedFixed64List = nil;
  self.mutableRepeatedSfixed32List = nil;
  self.mutableRepeatedSfixed64List = nil;
  self.mutableRepeatedFloatList = nil;
  self.mutableRepeatedDoubleList = nil;
  self.mutableRepeatedBoolList = nil;
  self.mutableRepeatedStringList = nil;
  self.mutableRepeatedBytesList = nil;
  self.mutableRepeatedGroupList = nil;
  self.mutableRepeatedNestedMessageList = nil;
  self.mutableRepeatedForeignMessageList = nil;
  self.mutableRepeatedImportMessageList = nil;
  self.mutableRepeatedNestedEnumList = nil;
  self.mutableRepeatedForeignEnumList = nil;
  self.mutableRepeatedImportEnumList = nil;
  self.mutableRepeatedStringPieceList = nil;
  self.mutableRepeatedCordList = nil;
  self.hasDefaultInt32 = NO;
  self.defaultInt32 = 0;
  self.hasDefaultInt64 = NO;
  self.defaultInt64 = 0;
  self.hasDefaultUint32 = NO;
  self.defaultUint32 = 0;
  self.hasDefaultUint64 = NO;
  self.defaultUint64 = 0;
  self.hasDefaultSint32 = NO;
  self.defaultSint32 = 0;
  self.hasDefaultSint64 = NO;
  self.defaultSint64 = 0;
  self.hasDefaultFixed32 = NO;
  self.defaultFixed32 = 0;
  self.hasDefaultFixed64 = NO;
  self.defaultFixed64 = 0;
  self.hasDefaultSfixed32 = NO;
  self.defaultSfixed32 = 0;
  self.hasDefaultSfixed64 = NO;
  self.defaultSfixed64 = 0;
  self.hasDefaultFloat = NO;
  self.defaultFloat = 0;
  self.hasDefaultDouble = NO;
  self.defaultDouble = 0;
  self.hasDefaultBool = NO;
  self.defaultBool = 0;
  self.hasDefaultString = NO;
  self.defaultString = nil;
  self.hasDefaultBytes = NO;
  self.defaultBytes = nil;
  self.hasDefaultNestedEnum = NO;
  self.defaultNestedEnum = nil;
  self.hasDefaultForeignEnum = NO;
  self.defaultForeignEnum = nil;
  self.hasDefaultImportEnum = NO;
  self.defaultImportEnum = nil;
  self.hasDefaultStringPiece = NO;
  self.defaultStringPiece = nil;
  self.hasDefaultCord = NO;
  self.defaultCord = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.optionalInt32 = 0;
    self.optionalInt64 = 0L;
    self.optionalUint32 = 0;
    self.optionalUint64 = 0L;
    self.optionalSint32 = 0;
    self.optionalSint64 = 0L;
    self.optionalFixed32 = 0;
    self.optionalFixed64 = 0L;
    self.optionalSfixed32 = 0;
    self.optionalSfixed64 = 0L;
    self.optionalFloat = 0;
    self.optionalDouble = 0;
    self.optionalBool = NO;
    self.optionalString = @"";
    self.optionalBytes = [NSData data];
    self.optionalNestedEnum = [TestAllTypes_NestedEnum FOO];
    self.optionalForeignEnum = [ForeignEnum FOREIGN_FOO];
    self.optionalImportEnum = [ImportEnum IMPORT_FOO];
    self.optionalStringPiece = @"";
    self.optionalCord = @"";
    self.defaultInt32 = 41;
    self.defaultInt64 = 42L;
    self.defaultUint32 = 43;
    self.defaultUint64 = 44L;
    self.defaultSint32 = -45;
    self.defaultSint64 = 46L;
    self.defaultFixed32 = 47;
    self.defaultFixed64 = 48L;
    self.defaultSfixed32 = 49;
    self.defaultSfixed64 = -50L;
    self.defaultFloat = 51.5;
    self.defaultDouble = 52000;
    self.defaultBool = YES;
    self.defaultString = @"hello";
    self.defaultBytes = ([[[TestAllTypes descriptor].fields objectAtIndex:62] defaultValue]);
    self.defaultNestedEnum = [TestAllTypes_NestedEnum BAR];
    self.defaultForeignEnum = [ForeignEnum FOREIGN_BAR];
    self.defaultImportEnum = [ImportEnum IMPORT_BAR];
    self.defaultStringPiece = @"abc";
    self.defaultCord = @"123";
  }
  return self;
}
static TestAllTypes* defaultTestAllTypesInstance = nil;
+ (void) initialize {
  if (self == [TestAllTypes class]) {
    defaultTestAllTypesInstance = [[TestAllTypes alloc] init];
  }
}

+ (TestAllTypes*) defaultInstance {
  return defaultTestAllTypesInstance;
}

- (TestAllTypes*) defaultInstanceForType {
  return defaultTestAllTypesInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_fieldAccessorTable];
}

























- (NSArray*) repeatedInt32List {
  return mutableRepeatedInt32List;
}
- (int32_t) repeatedInt32AtIndex:(int32_t) index {
  id value = [mutableRepeatedInt32List objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) repeatedInt64List {
  return mutableRepeatedInt64List;
}
- (int64_t) repeatedInt64AtIndex:(int32_t) index {
  id value = [mutableRepeatedInt64List objectAtIndex:index];
  return [value longLongValue];
}

- (NSArray*) repeatedUint32List {
  return mutableRepeatedUint32List;
}
- (int32_t) repeatedUint32AtIndex:(int32_t) index {
  id value = [mutableRepeatedUint32List objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) repeatedUint64List {
  return mutableRepeatedUint64List;
}
- (int64_t) repeatedUint64AtIndex:(int32_t) index {
  id value = [mutableRepeatedUint64List objectAtIndex:index];
  return [value longLongValue];
}

- (NSArray*) repeatedSint32List {
  return mutableRepeatedSint32List;
}
- (int32_t) repeatedSint32AtIndex:(int32_t) index {
  id value = [mutableRepeatedSint32List objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) repeatedSint64List {
  return mutableRepeatedSint64List;
}
- (int64_t) repeatedSint64AtIndex:(int32_t) index {
  id value = [mutableRepeatedSint64List objectAtIndex:index];
  return [value longLongValue];
}

- (NSArray*) repeatedFixed32List {
  return mutableRepeatedFixed32List;
}
- (int32_t) repeatedFixed32AtIndex:(int32_t) index {
  id value = [mutableRepeatedFixed32List objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) repeatedFixed64List {
  return mutableRepeatedFixed64List;
}
- (int64_t) repeatedFixed64AtIndex:(int32_t) index {
  id value = [mutableRepeatedFixed64List objectAtIndex:index];
  return [value longLongValue];
}

- (NSArray*) repeatedSfixed32List {
  return mutableRepeatedSfixed32List;
}
- (int32_t) repeatedSfixed32AtIndex:(int32_t) index {
  id value = [mutableRepeatedSfixed32List objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) repeatedSfixed64List {
  return mutableRepeatedSfixed64List;
}
- (int64_t) repeatedSfixed64AtIndex:(int32_t) index {
  id value = [mutableRepeatedSfixed64List objectAtIndex:index];
  return [value longLongValue];
}

- (NSArray*) repeatedFloatList {
  return mutableRepeatedFloatList;
}
- (Float32) repeatedFloatAtIndex:(int32_t) index {
  id value = [mutableRepeatedFloatList objectAtIndex:index];
  return [value floatValue];
}

- (NSArray*) repeatedDoubleList {
  return mutableRepeatedDoubleList;
}
- (Float64) repeatedDoubleAtIndex:(int32_t) index {
  id value = [mutableRepeatedDoubleList objectAtIndex:index];
  return [value doubleValue];
}

- (NSArray*) repeatedBoolList {
  return mutableRepeatedBoolList;
}
- (BOOL) repeatedBoolAtIndex:(int32_t) index {
  id value = [mutableRepeatedBoolList objectAtIndex:index];
  return [value boolValue];
}

- (NSArray*) repeatedStringList {
  return mutableRepeatedStringList;
}
- (NSString*) repeatedStringAtIndex:(int32_t) index {
  id value = [mutableRepeatedStringList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedBytesList {
  return mutableRepeatedBytesList;
}
- (NSData*) repeatedBytesAtIndex:(int32_t) index {
  id value = [mutableRepeatedBytesList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedGroupList {
  return mutableRepeatedGroupList;
}
- (TestAllTypes_RepeatedGroup*) repeatedGroupAtIndex:(int32_t) index {
  id value = [mutableRepeatedGroupList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedNestedMessageList {
  return mutableRepeatedNestedMessageList;
}
- (TestAllTypes_NestedMessage*) repeatedNestedMessageAtIndex:(int32_t) index {
  id value = [mutableRepeatedNestedMessageList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedForeignMessageList {
  return mutableRepeatedForeignMessageList;
}
- (ForeignMessage*) repeatedForeignMessageAtIndex:(int32_t) index {
  id value = [mutableRepeatedForeignMessageList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedImportMessageList {
  return mutableRepeatedImportMessageList;
}
- (ImportMessage*) repeatedImportMessageAtIndex:(int32_t) index {
  id value = [mutableRepeatedImportMessageList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedNestedEnumList {
  return mutableRepeatedNestedEnumList;
}
- (TestAllTypes_NestedEnum*) repeatedNestedEnumAtIndex:(int32_t) index {
  id value = [mutableRepeatedNestedEnumList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedForeignEnumList {
  return mutableRepeatedForeignEnumList;
}
- (ForeignEnum*) repeatedForeignEnumAtIndex:(int32_t) index {
  id value = [mutableRepeatedForeignEnumList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedImportEnumList {
  return mutableRepeatedImportEnumList;
}
- (ImportEnum*) repeatedImportEnumAtIndex:(int32_t) index {
  id value = [mutableRepeatedImportEnumList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedStringPieceList {
  return mutableRepeatedStringPieceList;
}
- (NSString*) repeatedStringPieceAtIndex:(int32_t) index {
  id value = [mutableRepeatedStringPieceList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedCordList {
  return mutableRepeatedCordList;
}
- (NSString*) repeatedCordAtIndex:(int32_t) index {
  id value = [mutableRepeatedCordList objectAtIndex:index];
  return value;
}





















- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasOptionalInt32) {
    [output writeInt32:1 value:self.optionalInt32];
  }
  if (hasOptionalInt64) {
    [output writeInt64:2 value:self.optionalInt64];
  }
  if (hasOptionalUint32) {
    [output writeUInt32:3 value:self.optionalUint32];
  }
  if (hasOptionalUint64) {
    [output writeUInt64:4 value:self.optionalUint64];
  }
  if (hasOptionalSint32) {
    [output writeSInt32:5 value:self.optionalSint32];
  }
  if (hasOptionalSint64) {
    [output writeSInt64:6 value:self.optionalSint64];
  }
  if (hasOptionalFixed32) {
    [output writeFixed32:7 value:self.optionalFixed32];
  }
  if (hasOptionalFixed64) {
    [output writeFixed64:8 value:self.optionalFixed64];
  }
  if (hasOptionalSfixed32) {
    [output writeSFixed32:9 value:self.optionalSfixed32];
  }
  if (hasOptionalSfixed64) {
    [output writeSFixed64:10 value:self.optionalSfixed64];
  }
  if (hasOptionalFloat) {
    [output writeFloat:11 value:self.optionalFloat];
  }
  if (hasOptionalDouble) {
    [output writeDouble:12 value:self.optionalDouble];
  }
  if (hasOptionalBool) {
    [output writeBool:13 value:self.optionalBool];
  }
  if (hasOptionalString) {
    [output writeString:14 value:self.optionalString];
  }
  if (hasOptionalBytes) {
    [output writeData:15 value:self.optionalBytes];
  }
  if (self.hasOptionalGroup) {
    [output writeGroup:16 value:self.optionalGroup];
  }
  if (self.hasOptionalNestedMessage) {
    [output writeMessage:18 value:self.optionalNestedMessage];
  }
  if (self.hasOptionalForeignMessage) {
    [output writeMessage:19 value:self.optionalForeignMessage];
  }
  if (self.hasOptionalImportMessage) {
    [output writeMessage:20 value:self.optionalImportMessage];
  }
  if (self.hasOptionalNestedEnum) {
    [output writeEnum:21 value:self.optionalNestedEnum.number];
  }
  if (self.hasOptionalForeignEnum) {
    [output writeEnum:22 value:self.optionalForeignEnum.number];
  }
  if (self.hasOptionalImportEnum) {
    [output writeEnum:23 value:self.optionalImportEnum.number];
  }
  if (hasOptionalStringPiece) {
    [output writeString:24 value:self.optionalStringPiece];
  }
  if (hasOptionalCord) {
    [output writeString:25 value:self.optionalCord];
  }
  for (NSNumber* value in self.mutableRepeatedInt32List) {
    [output writeInt32:31 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableRepeatedInt64List) {
    [output writeInt64:32 value:[value longLongValue]];
  }
  for (NSNumber* value in self.mutableRepeatedUint32List) {
    [output writeUInt32:33 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableRepeatedUint64List) {
    [output writeUInt64:34 value:[value longLongValue]];
  }
  for (NSNumber* value in self.mutableRepeatedSint32List) {
    [output writeSInt32:35 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableRepeatedSint64List) {
    [output writeSInt64:36 value:[value longLongValue]];
  }
  for (NSNumber* value in self.mutableRepeatedFixed32List) {
    [output writeFixed32:37 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableRepeatedFixed64List) {
    [output writeFixed64:38 value:[value longLongValue]];
  }
  for (NSNumber* value in self.mutableRepeatedSfixed32List) {
    [output writeSFixed32:39 value:[value intValue]];
  }
  for (NSNumber* value in self.mutableRepeatedSfixed64List) {
    [output writeSFixed64:40 value:[value longLongValue]];
  }
  for (NSNumber* value in self.mutableRepeatedFloatList) {
    [output writeFloat:41 value:[value floatValue]];
  }
  for (NSNumber* value in self.mutableRepeatedDoubleList) {
    [output writeDouble:42 value:[value doubleValue]];
  }
  for (NSNumber* value in self.mutableRepeatedBoolList) {
    [output writeBool:43 value:[value boolValue]];
  }
  for (NSString* element in self.mutableRepeatedStringList) {
    [output writeString:44 value:element];
  }
  for (NSData* element in self.mutableRepeatedBytesList) {
    [output writeData:45 value:element];
  }
  for (TestAllTypes_RepeatedGroup* element in self.repeatedGroupList) {
    [output writeGroup:46 value:element];
  }
  for (TestAllTypes_NestedMessage* element in self.repeatedNestedMessageList) {
    [output writeMessage:48 value:element];
  }
  for (ForeignMessage* element in self.repeatedForeignMessageList) {
    [output writeMessage:49 value:element];
  }
  for (ImportMessage* element in self.repeatedImportMessageList) {
    [output writeMessage:50 value:element];
  }
  for (TestAllTypes_NestedEnum* element in self.repeatedNestedEnumList) {
    [output writeEnum:51 value:element.number];
  }
  for (ForeignEnum* element in self.repeatedForeignEnumList) {
    [output writeEnum:52 value:element.number];
  }
  for (ImportEnum* element in self.repeatedImportEnumList) {
    [output writeEnum:53 value:element.number];
  }
  for (NSString* element in self.mutableRepeatedStringPieceList) {
    [output writeString:54 value:element];
  }
  for (NSString* element in self.mutableRepeatedCordList) {
    [output writeString:55 value:element];
  }
  if (hasDefaultInt32) {
    [output writeInt32:61 value:self.defaultInt32];
  }
  if (hasDefaultInt64) {
    [output writeInt64:62 value:self.defaultInt64];
  }
  if (hasDefaultUint32) {
    [output writeUInt32:63 value:self.defaultUint32];
  }
  if (hasDefaultUint64) {
    [output writeUInt64:64 value:self.defaultUint64];
  }
  if (hasDefaultSint32) {
    [output writeSInt32:65 value:self.defaultSint32];
  }
  if (hasDefaultSint64) {
    [output writeSInt64:66 value:self.defaultSint64];
  }
  if (hasDefaultFixed32) {
    [output writeFixed32:67 value:self.defaultFixed32];
  }
  if (hasDefaultFixed64) {
    [output writeFixed64:68 value:self.defaultFixed64];
  }
  if (hasDefaultSfixed32) {
    [output writeSFixed32:69 value:self.defaultSfixed32];
  }
  if (hasDefaultSfixed64) {
    [output writeSFixed64:70 value:self.defaultSfixed64];
  }
  if (hasDefaultFloat) {
    [output writeFloat:71 value:self.defaultFloat];
  }
  if (hasDefaultDouble) {
    [output writeDouble:72 value:self.defaultDouble];
  }
  if (hasDefaultBool) {
    [output writeBool:73 value:self.defaultBool];
  }
  if (hasDefaultString) {
    [output writeString:74 value:self.defaultString];
  }
  if (hasDefaultBytes) {
    [output writeData:75 value:self.defaultBytes];
  }
  if (self.hasDefaultNestedEnum) {
    [output writeEnum:81 value:self.defaultNestedEnum.number];
  }
  if (self.hasDefaultForeignEnum) {
    [output writeEnum:82 value:self.defaultForeignEnum.number];
  }
  if (self.hasDefaultImportEnum) {
    [output writeEnum:83 value:self.defaultImportEnum.number];
  }
  if (hasDefaultStringPiece) {
    [output writeString:84 value:self.defaultStringPiece];
  }
  if (hasDefaultCord) {
    [output writeString:85 value:self.defaultCord];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasOptionalInt32) {
    size += computeInt32Size(1, self.optionalInt32);
  }
  if (hasOptionalInt64) {
    size += computeInt64Size(2, self.optionalInt64);
  }
  if (hasOptionalUint32) {
    size += computeUInt32Size(3, self.optionalUint32);
  }
  if (hasOptionalUint64) {
    size += computeUInt64Size(4, self.optionalUint64);
  }
  if (hasOptionalSint32) {
    size += computeSInt32Size(5, self.optionalSint32);
  }
  if (hasOptionalSint64) {
    size += computeSInt64Size(6, self.optionalSint64);
  }
  if (hasOptionalFixed32) {
    size += computeFixed32Size(7, self.optionalFixed32);
  }
  if (hasOptionalFixed64) {
    size += computeFixed64Size(8, self.optionalFixed64);
  }
  if (hasOptionalSfixed32) {
    size += computeSFixed32Size(9, self.optionalSfixed32);
  }
  if (hasOptionalSfixed64) {
    size += computeSFixed64Size(10, self.optionalSfixed64);
  }
  if (hasOptionalFloat) {
    size += computeFloatSize(11, self.optionalFloat);
  }
  if (hasOptionalDouble) {
    size += computeDoubleSize(12, self.optionalDouble);
  }
  if (hasOptionalBool) {
    size += computeBoolSize(13, self.optionalBool);
  }
  if (hasOptionalString) {
    size += computeStringSize(14, self.optionalString);
  }
  if (hasOptionalBytes) {
    size += computeDataSize(15, self.optionalBytes);
  }
  if (self.hasOptionalGroup) {
    size += computeGroupSize(16, self.optionalGroup);
  }
  if (self.hasOptionalNestedMessage) {
    size += computeMessageSize(18, self.optionalNestedMessage);
  }
  if (self.hasOptionalForeignMessage) {
    size += computeMessageSize(19, self.optionalForeignMessage);
  }
  if (self.hasOptionalImportMessage) {
    size += computeMessageSize(20, self.optionalImportMessage);
  }
  if (self.hasOptionalNestedEnum) {
    size += computeEnumSize(21, self.optionalNestedEnum.number);
  }
  if (self.hasOptionalForeignEnum) {
    size += computeEnumSize(22, self.optionalForeignEnum.number);
  }
  if (self.hasOptionalImportEnum) {
    size += computeEnumSize(23, self.optionalImportEnum.number);
  }
  if (hasOptionalStringPiece) {
    size += computeStringSize(24, self.optionalStringPiece);
  }
  if (hasOptionalCord) {
    size += computeStringSize(25, self.optionalCord);
  }
  for (NSNumber* value in self.mutableRepeatedInt32List) {
    size += computeInt32Size(31, [value intValue]);
  }
  for (NSNumber* value in self.mutableRepeatedInt64List) {
    size += computeInt64Size(32, [value longLongValue]);
  }
  for (NSNumber* value in self.mutableRepeatedUint32List) {
    size += computeUInt32Size(33, [value intValue]);
  }
  for (NSNumber* value in self.mutableRepeatedUint64List) {
    size += computeUInt64Size(34, [value longLongValue]);
  }
  for (NSNumber* value in self.mutableRepeatedSint32List) {
    size += computeSInt32Size(35, [value intValue]);
  }
  for (NSNumber* value in self.mutableRepeatedSint64List) {
    size += computeSInt64Size(36, [value longLongValue]);
  }
  for (NSNumber* value in self.mutableRepeatedFixed32List) {
    size += computeFixed32Size(37, [value intValue]);
  }
  for (NSNumber* value in self.mutableRepeatedFixed64List) {
    size += computeFixed64Size(38, [value longLongValue]);
  }
  for (NSNumber* value in self.mutableRepeatedSfixed32List) {
    size += computeSFixed32Size(39, [value intValue]);
  }
  for (NSNumber* value in self.mutableRepeatedSfixed64List) {
    size += computeSFixed64Size(40, [value longLongValue]);
  }
  for (NSNumber* value in self.mutableRepeatedFloatList) {
    size += computeFloatSize(41, [value floatValue]);
  }
  for (NSNumber* value in self.mutableRepeatedDoubleList) {
    size += computeDoubleSize(42, [value doubleValue]);
  }
  for (NSNumber* value in self.mutableRepeatedBoolList) {
    size += computeBoolSize(43, [value boolValue]);
  }
  for (NSString* element in self.mutableRepeatedStringList) {
    size += computeStringSize(44, element);
  }
  for (NSData* element in self.mutableRepeatedBytesList) {
    size += computeDataSize(45, element);
  }
  for (TestAllTypes_RepeatedGroup* element in self.repeatedGroupList) {
    size += computeGroupSize(46, element);
  }
  for (TestAllTypes_NestedMessage* element in self.repeatedNestedMessageList) {
    size += computeMessageSize(48, element);
  }
  for (ForeignMessage* element in self.repeatedForeignMessageList) {
    size += computeMessageSize(49, element);
  }
  for (ImportMessage* element in self.repeatedImportMessageList) {
    size += computeMessageSize(50, element);
  }
  for (TestAllTypes_NestedEnum* element in self.repeatedNestedEnumList) {
    size += computeEnumSize(51, element.number);
  }
  for (ForeignEnum* element in self.repeatedForeignEnumList) {
    size += computeEnumSize(52, element.number);
  }
  for (ImportEnum* element in self.repeatedImportEnumList) {
    size += computeEnumSize(53, element.number);
  }
  for (NSString* element in self.mutableRepeatedStringPieceList) {
    size += computeStringSize(54, element);
  }
  for (NSString* element in self.mutableRepeatedCordList) {
    size += computeStringSize(55, element);
  }
  if (hasDefaultInt32) {
    size += computeInt32Size(61, self.defaultInt32);
  }
  if (hasDefaultInt64) {
    size += computeInt64Size(62, self.defaultInt64);
  }
  if (hasDefaultUint32) {
    size += computeUInt32Size(63, self.defaultUint32);
  }
  if (hasDefaultUint64) {
    size += computeUInt64Size(64, self.defaultUint64);
  }
  if (hasDefaultSint32) {
    size += computeSInt32Size(65, self.defaultSint32);
  }
  if (hasDefaultSint64) {
    size += computeSInt64Size(66, self.defaultSint64);
  }
  if (hasDefaultFixed32) {
    size += computeFixed32Size(67, self.defaultFixed32);
  }
  if (hasDefaultFixed64) {
    size += computeFixed64Size(68, self.defaultFixed64);
  }
  if (hasDefaultSfixed32) {
    size += computeSFixed32Size(69, self.defaultSfixed32);
  }
  if (hasDefaultSfixed64) {
    size += computeSFixed64Size(70, self.defaultSfixed64);
  }
  if (hasDefaultFloat) {
    size += computeFloatSize(71, self.defaultFloat);
  }
  if (hasDefaultDouble) {
    size += computeDoubleSize(72, self.defaultDouble);
  }
  if (hasDefaultBool) {
    size += computeBoolSize(73, self.defaultBool);
  }
  if (hasDefaultString) {
    size += computeStringSize(74, self.defaultString);
  }
  if (hasDefaultBytes) {
    size += computeDataSize(75, self.defaultBytes);
  }
  if (self.hasDefaultNestedEnum) {
    size += computeEnumSize(81, self.defaultNestedEnum.number);
  }
  if (self.hasDefaultForeignEnum) {
    size += computeEnumSize(82, self.defaultForeignEnum.number);
  }
  if (self.hasDefaultImportEnum) {
    size += computeEnumSize(83, self.defaultImportEnum.number);
  }
  if (hasDefaultStringPiece) {
    size += computeStringSize(84, self.defaultStringPiece);
  }
  if (hasDefaultCord) {
    size += computeStringSize(85, self.defaultCord);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestAllTypes*) parseFromData:(NSData*) data {
  return (TestAllTypes*)[[[TestAllTypes newBuilder] mergeFromData:data] buildParsed];
}
+ (TestAllTypes*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes*)[[[TestAllTypes newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes*) parseFromInputStream:(NSInputStream*) input {
  return (TestAllTypes*)[[[TestAllTypes newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestAllTypes*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes*)[[[TestAllTypes newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestAllTypes*)[[[TestAllTypes newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestAllTypes*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes*)[[[TestAllTypes newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestAllTypes_Builder*) newBuilder { return [[[TestAllTypes_Builder alloc] init] autorelease]; }
- (TestAllTypes_Builder*) newBuilderForType { return [TestAllTypes newBuilder]; }
+ (TestAllTypes_Builder*) newBuilderWithTestAllTypes:(TestAllTypes*) prototype {
  return [[TestAllTypes newBuilder] mergeFromTestAllTypes:prototype];
}

@end

@interface TestAllTypes_NestedEnum ()
@property int32_t index;
@property int32_t value;
@end

@implementation TestAllTypes_NestedEnum
@synthesize index;
@synthesize value;
static TestAllTypes_NestedEnum* TestAllTypes_NestedEnum_FOO = nil;
static TestAllTypes_NestedEnum* TestAllTypes_NestedEnum_BAR = nil;
static TestAllTypes_NestedEnum* TestAllTypes_NestedEnum_BAZ = nil;
- (id) initWithIndex:(int32_t) index_ value:(int32_t) value_ {
  if (self = [super init]) {
    self.index = index_;
    self.value = value_;
  }
  return self;
}
+ (TestAllTypes_NestedEnum*) newWithIndex:(int32_t) index value:(int32_t) value {
  return [[[TestAllTypes_NestedEnum alloc] initWithIndex:index value:value] autorelease];
}
+ (void) initialize {
  if (self == [TestAllTypes_NestedEnum class]) {
    TestAllTypes_NestedEnum_FOO = [[TestAllTypes_NestedEnum newWithIndex:0 value:1] retain];
    TestAllTypes_NestedEnum_BAR = [[TestAllTypes_NestedEnum newWithIndex:1 value:2] retain];
    TestAllTypes_NestedEnum_BAZ = [[TestAllTypes_NestedEnum newWithIndex:2 value:3] retain];
  }
}
+ (TestAllTypes_NestedEnum*) FOO { return TestAllTypes_NestedEnum_FOO; }
+ (TestAllTypes_NestedEnum*) BAR { return TestAllTypes_NestedEnum_BAR; }
+ (TestAllTypes_NestedEnum*) BAZ { return TestAllTypes_NestedEnum_BAZ; }
- (int32_t) number { return value; }
+ (TestAllTypes_NestedEnum*) valueOf:(int32_t) value {
  switch (value) {
    case 1: return [TestAllTypes_NestedEnum FOO];
    case 2: return [TestAllTypes_NestedEnum BAR];
    case 3: return [TestAllTypes_NestedEnum BAZ];
    default: return nil;
  }
}

- (PBEnumValueDescriptor*) valueDescriptor {
  return [[TestAllTypes_NestedEnum descriptor].values objectAtIndex:index];
}
- (PBEnumDescriptor*) descriptorForType {
  return [TestAllTypes_NestedEnum descriptor];
}
+ (PBEnumDescriptor*) descriptor {
  return [[TestAllTypes descriptor].enumTypes objectAtIndex:0];
}


+ (TestAllTypes_NestedEnum*) valueOfDescriptor:(PBEnumValueDescriptor*) desc {
  if (desc.type != [TestAllTypes_NestedEnum descriptor]) {
    @throw [NSException exceptionWithName:@"" reason:@"" userInfo:nil];
  }
  TestAllTypes_NestedEnum* VALUES[] = {
    [TestAllTypes_NestedEnum FOO],
    [TestAllTypes_NestedEnum BAR],
    [TestAllTypes_NestedEnum BAZ],
  };
  return VALUES[desc.index];
}
@end

@interface TestAllTypes_NestedMessage ()
@property BOOL hasBb;
@property int32_t bb;
@end

@implementation TestAllTypes_NestedMessage

@synthesize hasBb;
@synthesize bb;
- (void) dealloc {
  self.hasBb = NO;
  self.bb = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.bb = 0;
  }
  return self;
}
static TestAllTypes_NestedMessage* defaultTestAllTypes_NestedMessageInstance = nil;
+ (void) initialize {
  if (self == [TestAllTypes_NestedMessage class]) {
    defaultTestAllTypes_NestedMessageInstance = [[TestAllTypes_NestedMessage alloc] init];
  }
}

+ (TestAllTypes_NestedMessage*) defaultInstance {
  return defaultTestAllTypes_NestedMessageInstance;
}

- (TestAllTypes_NestedMessage*) defaultInstanceForType {
  return defaultTestAllTypes_NestedMessageInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_NestedMessage_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_NestedMessage_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasBb) {
    [output writeInt32:1 value:self.bb];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasBb) {
    size += computeInt32Size(1, self.bb);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestAllTypes_NestedMessage*) parseFromData:(NSData*) data {
  return (TestAllTypes_NestedMessage*)[[[TestAllTypes_NestedMessage newBuilder] mergeFromData:data] buildParsed];
}
+ (TestAllTypes_NestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_NestedMessage*)[[[TestAllTypes_NestedMessage newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes_NestedMessage*) parseFromInputStream:(NSInputStream*) input {
  return (TestAllTypes_NestedMessage*)[[[TestAllTypes_NestedMessage newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestAllTypes_NestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_NestedMessage*)[[[TestAllTypes_NestedMessage newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes_NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestAllTypes_NestedMessage*)[[[TestAllTypes_NestedMessage newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestAllTypes_NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_NestedMessage*)[[[TestAllTypes_NestedMessage newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestAllTypes_NestedMessage_Builder*) newBuilder { return [[[TestAllTypes_NestedMessage_Builder alloc] init] autorelease]; }
- (TestAllTypes_NestedMessage_Builder*) newBuilderForType { return [TestAllTypes_NestedMessage newBuilder]; }
+ (TestAllTypes_NestedMessage_Builder*) newBuilderWithTestAllTypes_NestedMessage:(TestAllTypes_NestedMessage*) prototype {
  return [[TestAllTypes_NestedMessage newBuilder] mergeFromTestAllTypes_NestedMessage:prototype];
}

@end

@implementation TestAllTypes_NestedMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestAllTypes_NestedMessage alloc] init] autorelease];
  }
  return self;
}
- (TestAllTypes_NestedMessage*) internalGetResult {
  return result;
}

- (TestAllTypes_NestedMessage_Builder*) clear {
  self.result = [[[TestAllTypes_NestedMessage alloc] init] autorelease];
  return self;
}

- (TestAllTypes_NestedMessage_Builder*) clone {
  return (TestAllTypes_NestedMessage_Builder*)[[[[TestAllTypes_NestedMessage_Builder alloc] init] autorelease] mergeFromTestAllTypes_NestedMessage:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestAllTypes_NestedMessage descriptor];
}

- (TestAllTypes_NestedMessage*) defaultInstanceForType {
  return [TestAllTypes_NestedMessage defaultInstance];
}

- (TestAllTypes_NestedMessage*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes_NestedMessage*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes_NestedMessage*) buildPartial {
  TestAllTypes_NestedMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestAllTypes_NestedMessage_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestAllTypes_NestedMessage class]]) {
    return [self mergeFromTestAllTypes_NestedMessage:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestAllTypes_NestedMessage_Builder*) mergeFromTestAllTypes_NestedMessage:(TestAllTypes_NestedMessage*) other {
  if (other == [TestAllTypes_NestedMessage defaultInstance]) return self;
  if (other.hasBb) {
    [self setBb:other.bb];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestAllTypes_NestedMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestAllTypes_NestedMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setBb:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasBb {
  return result.hasBb;
}
- (int32_t) bb {
  return result.bb;
}
- (TestAllTypes_NestedMessage_Builder*) setBb:(int32_t) value {
  result.hasBb = YES;
  result.bb = value;
  return self;
}
- (TestAllTypes_NestedMessage_Builder*) clearBb {
  result.hasBb = NO;
  result.bb = 0;
  return self;
}
@end

@interface TestAllTypes_OptionalGroup ()
@property BOOL hasA;
@property int32_t a;
@end

@implementation TestAllTypes_OptionalGroup

@synthesize hasA;
@synthesize a;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static TestAllTypes_OptionalGroup* defaultTestAllTypes_OptionalGroupInstance = nil;
+ (void) initialize {
  if (self == [TestAllTypes_OptionalGroup class]) {
    defaultTestAllTypes_OptionalGroupInstance = [[TestAllTypes_OptionalGroup alloc] init];
  }
}

+ (TestAllTypes_OptionalGroup*) defaultInstance {
  return defaultTestAllTypes_OptionalGroupInstance;
}

- (TestAllTypes_OptionalGroup*) defaultInstanceForType {
  return defaultTestAllTypes_OptionalGroupInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_OptionalGroup_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:17 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(17, self.a);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestAllTypes_OptionalGroup*) parseFromData:(NSData*) data {
  return (TestAllTypes_OptionalGroup*)[[[TestAllTypes_OptionalGroup newBuilder] mergeFromData:data] buildParsed];
}
+ (TestAllTypes_OptionalGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_OptionalGroup*)[[[TestAllTypes_OptionalGroup newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes_OptionalGroup*) parseFromInputStream:(NSInputStream*) input {
  return (TestAllTypes_OptionalGroup*)[[[TestAllTypes_OptionalGroup newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestAllTypes_OptionalGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_OptionalGroup*)[[[TestAllTypes_OptionalGroup newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes_OptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestAllTypes_OptionalGroup*)[[[TestAllTypes_OptionalGroup newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestAllTypes_OptionalGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_OptionalGroup*)[[[TestAllTypes_OptionalGroup newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestAllTypes_OptionalGroup_Builder*) newBuilder { return [[[TestAllTypes_OptionalGroup_Builder alloc] init] autorelease]; }
- (TestAllTypes_OptionalGroup_Builder*) newBuilderForType { return [TestAllTypes_OptionalGroup newBuilder]; }
+ (TestAllTypes_OptionalGroup_Builder*) newBuilderWithTestAllTypes_OptionalGroup:(TestAllTypes_OptionalGroup*) prototype {
  return [[TestAllTypes_OptionalGroup newBuilder] mergeFromTestAllTypes_OptionalGroup:prototype];
}

@end

@implementation TestAllTypes_OptionalGroup_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestAllTypes_OptionalGroup alloc] init] autorelease];
  }
  return self;
}
- (TestAllTypes_OptionalGroup*) internalGetResult {
  return result;
}

- (TestAllTypes_OptionalGroup_Builder*) clear {
  self.result = [[[TestAllTypes_OptionalGroup alloc] init] autorelease];
  return self;
}

- (TestAllTypes_OptionalGroup_Builder*) clone {
  return (TestAllTypes_OptionalGroup_Builder*)[[[[TestAllTypes_OptionalGroup_Builder alloc] init] autorelease] mergeFromTestAllTypes_OptionalGroup:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestAllTypes_OptionalGroup descriptor];
}

- (TestAllTypes_OptionalGroup*) defaultInstanceForType {
  return [TestAllTypes_OptionalGroup defaultInstance];
}

- (TestAllTypes_OptionalGroup*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes_OptionalGroup*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes_OptionalGroup*) buildPartial {
  TestAllTypes_OptionalGroup* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestAllTypes_OptionalGroup_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestAllTypes_OptionalGroup class]]) {
    return [self mergeFromTestAllTypes_OptionalGroup:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestAllTypes_OptionalGroup_Builder*) mergeFromTestAllTypes_OptionalGroup:(TestAllTypes_OptionalGroup*) other {
  if (other == [TestAllTypes_OptionalGroup defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestAllTypes_OptionalGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestAllTypes_OptionalGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 136: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestAllTypes_OptionalGroup_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestAllTypes_OptionalGroup_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}
@end

@interface TestAllTypes_RepeatedGroup ()
@property BOOL hasA;
@property int32_t a;
@end

@implementation TestAllTypes_RepeatedGroup

@synthesize hasA;
@synthesize a;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static TestAllTypes_RepeatedGroup* defaultTestAllTypes_RepeatedGroupInstance = nil;
+ (void) initialize {
  if (self == [TestAllTypes_RepeatedGroup class]) {
    defaultTestAllTypes_RepeatedGroupInstance = [[TestAllTypes_RepeatedGroup alloc] init];
  }
}

+ (TestAllTypes_RepeatedGroup*) defaultInstance {
  return defaultTestAllTypes_RepeatedGroupInstance;
}

- (TestAllTypes_RepeatedGroup*) defaultInstanceForType {
  return defaultTestAllTypes_RepeatedGroupInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllTypes_RepeatedGroup_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:47 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(47, self.a);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestAllTypes_RepeatedGroup*) parseFromData:(NSData*) data {
  return (TestAllTypes_RepeatedGroup*)[[[TestAllTypes_RepeatedGroup newBuilder] mergeFromData:data] buildParsed];
}
+ (TestAllTypes_RepeatedGroup*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_RepeatedGroup*)[[[TestAllTypes_RepeatedGroup newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes_RepeatedGroup*) parseFromInputStream:(NSInputStream*) input {
  return (TestAllTypes_RepeatedGroup*)[[[TestAllTypes_RepeatedGroup newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestAllTypes_RepeatedGroup*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_RepeatedGroup*)[[[TestAllTypes_RepeatedGroup newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllTypes_RepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestAllTypes_RepeatedGroup*)[[[TestAllTypes_RepeatedGroup newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestAllTypes_RepeatedGroup*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllTypes_RepeatedGroup*)[[[TestAllTypes_RepeatedGroup newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestAllTypes_RepeatedGroup_Builder*) newBuilder { return [[[TestAllTypes_RepeatedGroup_Builder alloc] init] autorelease]; }
- (TestAllTypes_RepeatedGroup_Builder*) newBuilderForType { return [TestAllTypes_RepeatedGroup newBuilder]; }
+ (TestAllTypes_RepeatedGroup_Builder*) newBuilderWithTestAllTypes_RepeatedGroup:(TestAllTypes_RepeatedGroup*) prototype {
  return [[TestAllTypes_RepeatedGroup newBuilder] mergeFromTestAllTypes_RepeatedGroup:prototype];
}

@end

@implementation TestAllTypes_RepeatedGroup_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestAllTypes_RepeatedGroup alloc] init] autorelease];
  }
  return self;
}
- (TestAllTypes_RepeatedGroup*) internalGetResult {
  return result;
}

- (TestAllTypes_RepeatedGroup_Builder*) clear {
  self.result = [[[TestAllTypes_RepeatedGroup alloc] init] autorelease];
  return self;
}

- (TestAllTypes_RepeatedGroup_Builder*) clone {
  return (TestAllTypes_RepeatedGroup_Builder*)[[[[TestAllTypes_RepeatedGroup_Builder alloc] init] autorelease] mergeFromTestAllTypes_RepeatedGroup:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestAllTypes_RepeatedGroup descriptor];
}

- (TestAllTypes_RepeatedGroup*) defaultInstanceForType {
  return [TestAllTypes_RepeatedGroup defaultInstance];
}

- (TestAllTypes_RepeatedGroup*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes_RepeatedGroup*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes_RepeatedGroup*) buildPartial {
  TestAllTypes_RepeatedGroup* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestAllTypes_RepeatedGroup_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestAllTypes_RepeatedGroup class]]) {
    return [self mergeFromTestAllTypes_RepeatedGroup:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestAllTypes_RepeatedGroup_Builder*) mergeFromTestAllTypes_RepeatedGroup:(TestAllTypes_RepeatedGroup*) other {
  if (other == [TestAllTypes_RepeatedGroup defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestAllTypes_RepeatedGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestAllTypes_RepeatedGroup_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 376: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestAllTypes_RepeatedGroup_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestAllTypes_RepeatedGroup_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}
@end

@implementation TestAllTypes_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestAllTypes alloc] init] autorelease];
  }
  return self;
}
- (TestAllTypes*) internalGetResult {
  return result;
}

- (TestAllTypes_Builder*) clear {
  self.result = [[[TestAllTypes alloc] init] autorelease];
  return self;
}

- (TestAllTypes_Builder*) clone {
  return (TestAllTypes_Builder*)[[[[TestAllTypes_Builder alloc] init] autorelease] mergeFromTestAllTypes:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestAllTypes descriptor];
}

- (TestAllTypes*) defaultInstanceForType {
  return [TestAllTypes defaultInstance];
}

- (TestAllTypes*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllTypes*) buildPartial {
  TestAllTypes* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestAllTypes_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestAllTypes class]]) {
    return [self mergeFromTestAllTypes:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestAllTypes_Builder*) mergeFromTestAllTypes:(TestAllTypes*) other {
  if (other == [TestAllTypes defaultInstance]) return self;
  if (other.hasOptionalInt32) {
    [self setOptionalInt32:other.optionalInt32];
  }
  if (other.hasOptionalInt64) {
    [self setOptionalInt64:other.optionalInt64];
  }
  if (other.hasOptionalUint32) {
    [self setOptionalUint32:other.optionalUint32];
  }
  if (other.hasOptionalUint64) {
    [self setOptionalUint64:other.optionalUint64];
  }
  if (other.hasOptionalSint32) {
    [self setOptionalSint32:other.optionalSint32];
  }
  if (other.hasOptionalSint64) {
    [self setOptionalSint64:other.optionalSint64];
  }
  if (other.hasOptionalFixed32) {
    [self setOptionalFixed32:other.optionalFixed32];
  }
  if (other.hasOptionalFixed64) {
    [self setOptionalFixed64:other.optionalFixed64];
  }
  if (other.hasOptionalSfixed32) {
    [self setOptionalSfixed32:other.optionalSfixed32];
  }
  if (other.hasOptionalSfixed64) {
    [self setOptionalSfixed64:other.optionalSfixed64];
  }
  if (other.hasOptionalFloat) {
    [self setOptionalFloat:other.optionalFloat];
  }
  if (other.hasOptionalDouble) {
    [self setOptionalDouble:other.optionalDouble];
  }
  if (other.hasOptionalBool) {
    [self setOptionalBool:other.optionalBool];
  }
  if (other.hasOptionalString) {
    [self setOptionalString:other.optionalString];
  }
  if (other.hasOptionalBytes) {
    [self setOptionalBytes:other.optionalBytes];
  }
  if (other.hasOptionalGroup) {
    [self mergeOptionalGroup:other.optionalGroup];
  }
  if (other.hasOptionalNestedMessage) {
    [self mergeOptionalNestedMessage:other.optionalNestedMessage];
  }
  if (other.hasOptionalForeignMessage) {
    [self mergeOptionalForeignMessage:other.optionalForeignMessage];
  }
  if (other.hasOptionalImportMessage) {
    [self mergeOptionalImportMessage:other.optionalImportMessage];
  }
  if (other.hasOptionalNestedEnum) {
    [self setOptionalNestedEnum:other.optionalNestedEnum];
  }
  if (other.hasOptionalForeignEnum) {
    [self setOptionalForeignEnum:other.optionalForeignEnum];
  }
  if (other.hasOptionalImportEnum) {
    [self setOptionalImportEnum:other.optionalImportEnum];
  }
  if (other.hasOptionalStringPiece) {
    [self setOptionalStringPiece:other.optionalStringPiece];
  }
  if (other.hasOptionalCord) {
    [self setOptionalCord:other.optionalCord];
  }
  if (other.mutableRepeatedInt32List.count > 0) {
    if (result.mutableRepeatedInt32List == nil) {
      result.mutableRepeatedInt32List = [NSMutableArray array];
    }
    [result.mutableRepeatedInt32List addObjectsFromArray:other.mutableRepeatedInt32List];
  }
  if (other.mutableRepeatedInt64List.count > 0) {
    if (result.mutableRepeatedInt64List == nil) {
      result.mutableRepeatedInt64List = [NSMutableArray array];
    }
    [result.mutableRepeatedInt64List addObjectsFromArray:other.mutableRepeatedInt64List];
  }
  if (other.mutableRepeatedUint32List.count > 0) {
    if (result.mutableRepeatedUint32List == nil) {
      result.mutableRepeatedUint32List = [NSMutableArray array];
    }
    [result.mutableRepeatedUint32List addObjectsFromArray:other.mutableRepeatedUint32List];
  }
  if (other.mutableRepeatedUint64List.count > 0) {
    if (result.mutableRepeatedUint64List == nil) {
      result.mutableRepeatedUint64List = [NSMutableArray array];
    }
    [result.mutableRepeatedUint64List addObjectsFromArray:other.mutableRepeatedUint64List];
  }
  if (other.mutableRepeatedSint32List.count > 0) {
    if (result.mutableRepeatedSint32List == nil) {
      result.mutableRepeatedSint32List = [NSMutableArray array];
    }
    [result.mutableRepeatedSint32List addObjectsFromArray:other.mutableRepeatedSint32List];
  }
  if (other.mutableRepeatedSint64List.count > 0) {
    if (result.mutableRepeatedSint64List == nil) {
      result.mutableRepeatedSint64List = [NSMutableArray array];
    }
    [result.mutableRepeatedSint64List addObjectsFromArray:other.mutableRepeatedSint64List];
  }
  if (other.mutableRepeatedFixed32List.count > 0) {
    if (result.mutableRepeatedFixed32List == nil) {
      result.mutableRepeatedFixed32List = [NSMutableArray array];
    }
    [result.mutableRepeatedFixed32List addObjectsFromArray:other.mutableRepeatedFixed32List];
  }
  if (other.mutableRepeatedFixed64List.count > 0) {
    if (result.mutableRepeatedFixed64List == nil) {
      result.mutableRepeatedFixed64List = [NSMutableArray array];
    }
    [result.mutableRepeatedFixed64List addObjectsFromArray:other.mutableRepeatedFixed64List];
  }
  if (other.mutableRepeatedSfixed32List.count > 0) {
    if (result.mutableRepeatedSfixed32List == nil) {
      result.mutableRepeatedSfixed32List = [NSMutableArray array];
    }
    [result.mutableRepeatedSfixed32List addObjectsFromArray:other.mutableRepeatedSfixed32List];
  }
  if (other.mutableRepeatedSfixed64List.count > 0) {
    if (result.mutableRepeatedSfixed64List == nil) {
      result.mutableRepeatedSfixed64List = [NSMutableArray array];
    }
    [result.mutableRepeatedSfixed64List addObjectsFromArray:other.mutableRepeatedSfixed64List];
  }
  if (other.mutableRepeatedFloatList.count > 0) {
    if (result.mutableRepeatedFloatList == nil) {
      result.mutableRepeatedFloatList = [NSMutableArray array];
    }
    [result.mutableRepeatedFloatList addObjectsFromArray:other.mutableRepeatedFloatList];
  }
  if (other.mutableRepeatedDoubleList.count > 0) {
    if (result.mutableRepeatedDoubleList == nil) {
      result.mutableRepeatedDoubleList = [NSMutableArray array];
    }
    [result.mutableRepeatedDoubleList addObjectsFromArray:other.mutableRepeatedDoubleList];
  }
  if (other.mutableRepeatedBoolList.count > 0) {
    if (result.mutableRepeatedBoolList == nil) {
      result.mutableRepeatedBoolList = [NSMutableArray array];
    }
    [result.mutableRepeatedBoolList addObjectsFromArray:other.mutableRepeatedBoolList];
  }
  if (other.mutableRepeatedStringList.count > 0) {
    if (result.mutableRepeatedStringList == nil) {
      result.mutableRepeatedStringList = [NSMutableArray array];
    }
    [result.mutableRepeatedStringList addObjectsFromArray:other.mutableRepeatedStringList];
  }
  if (other.mutableRepeatedBytesList.count > 0) {
    if (result.mutableRepeatedBytesList == nil) {
      result.mutableRepeatedBytesList = [NSMutableArray array];
    }
    [result.mutableRepeatedBytesList addObjectsFromArray:other.mutableRepeatedBytesList];
  }
  if (other.mutableRepeatedGroupList.count > 0) {
    if (result.mutableRepeatedGroupList == nil) {
      result.mutableRepeatedGroupList = [NSMutableArray array];
    }
    [result.mutableRepeatedGroupList addObjectsFromArray:other.mutableRepeatedGroupList];
  }
  if (other.mutableRepeatedNestedMessageList.count > 0) {
    if (result.mutableRepeatedNestedMessageList == nil) {
      result.mutableRepeatedNestedMessageList = [NSMutableArray array];
    }
    [result.mutableRepeatedNestedMessageList addObjectsFromArray:other.mutableRepeatedNestedMessageList];
  }
  if (other.mutableRepeatedForeignMessageList.count > 0) {
    if (result.mutableRepeatedForeignMessageList == nil) {
      result.mutableRepeatedForeignMessageList = [NSMutableArray array];
    }
    [result.mutableRepeatedForeignMessageList addObjectsFromArray:other.mutableRepeatedForeignMessageList];
  }
  if (other.mutableRepeatedImportMessageList.count > 0) {
    if (result.mutableRepeatedImportMessageList == nil) {
      result.mutableRepeatedImportMessageList = [NSMutableArray array];
    }
    [result.mutableRepeatedImportMessageList addObjectsFromArray:other.mutableRepeatedImportMessageList];
  }
  if (other.mutableRepeatedNestedEnumList.count > 0) {
    if (result.mutableRepeatedNestedEnumList == nil) {
      result.mutableRepeatedNestedEnumList = [NSMutableArray array];
    }
    [result.mutableRepeatedNestedEnumList addObjectsFromArray:other.mutableRepeatedNestedEnumList];
  }
  if (other.mutableRepeatedForeignEnumList.count > 0) {
    if (result.mutableRepeatedForeignEnumList == nil) {
      result.mutableRepeatedForeignEnumList = [NSMutableArray array];
    }
    [result.mutableRepeatedForeignEnumList addObjectsFromArray:other.mutableRepeatedForeignEnumList];
  }
  if (other.mutableRepeatedImportEnumList.count > 0) {
    if (result.mutableRepeatedImportEnumList == nil) {
      result.mutableRepeatedImportEnumList = [NSMutableArray array];
    }
    [result.mutableRepeatedImportEnumList addObjectsFromArray:other.mutableRepeatedImportEnumList];
  }
  if (other.mutableRepeatedStringPieceList.count > 0) {
    if (result.mutableRepeatedStringPieceList == nil) {
      result.mutableRepeatedStringPieceList = [NSMutableArray array];
    }
    [result.mutableRepeatedStringPieceList addObjectsFromArray:other.mutableRepeatedStringPieceList];
  }
  if (other.mutableRepeatedCordList.count > 0) {
    if (result.mutableRepeatedCordList == nil) {
      result.mutableRepeatedCordList = [NSMutableArray array];
    }
    [result.mutableRepeatedCordList addObjectsFromArray:other.mutableRepeatedCordList];
  }
  if (other.hasDefaultInt32) {
    [self setDefaultInt32:other.defaultInt32];
  }
  if (other.hasDefaultInt64) {
    [self setDefaultInt64:other.defaultInt64];
  }
  if (other.hasDefaultUint32) {
    [self setDefaultUint32:other.defaultUint32];
  }
  if (other.hasDefaultUint64) {
    [self setDefaultUint64:other.defaultUint64];
  }
  if (other.hasDefaultSint32) {
    [self setDefaultSint32:other.defaultSint32];
  }
  if (other.hasDefaultSint64) {
    [self setDefaultSint64:other.defaultSint64];
  }
  if (other.hasDefaultFixed32) {
    [self setDefaultFixed32:other.defaultFixed32];
  }
  if (other.hasDefaultFixed64) {
    [self setDefaultFixed64:other.defaultFixed64];
  }
  if (other.hasDefaultSfixed32) {
    [self setDefaultSfixed32:other.defaultSfixed32];
  }
  if (other.hasDefaultSfixed64) {
    [self setDefaultSfixed64:other.defaultSfixed64];
  }
  if (other.hasDefaultFloat) {
    [self setDefaultFloat:other.defaultFloat];
  }
  if (other.hasDefaultDouble) {
    [self setDefaultDouble:other.defaultDouble];
  }
  if (other.hasDefaultBool) {
    [self setDefaultBool:other.defaultBool];
  }
  if (other.hasDefaultString) {
    [self setDefaultString:other.defaultString];
  }
  if (other.hasDefaultBytes) {
    [self setDefaultBytes:other.defaultBytes];
  }
  if (other.hasDefaultNestedEnum) {
    [self setDefaultNestedEnum:other.defaultNestedEnum];
  }
  if (other.hasDefaultForeignEnum) {
    [self setDefaultForeignEnum:other.defaultForeignEnum];
  }
  if (other.hasDefaultImportEnum) {
    [self setDefaultImportEnum:other.defaultImportEnum];
  }
  if (other.hasDefaultStringPiece) {
    [self setDefaultStringPiece:other.defaultStringPiece];
  }
  if (other.hasDefaultCord) {
    [self setDefaultCord:other.defaultCord];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestAllTypes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestAllTypes_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOptionalInt32:[input readInt32]];
        break;
      }
      case 16: {
        [self setOptionalInt64:[input readInt64]];
        break;
      }
      case 24: {
        [self setOptionalUint32:[input readUInt32]];
        break;
      }
      case 32: {
        [self setOptionalUint64:[input readUInt64]];
        break;
      }
      case 40: {
        [self setOptionalSint32:[input readSInt32]];
        break;
      }
      case 48: {
        [self setOptionalSint64:[input readSInt64]];
        break;
      }
      case 61: {
        [self setOptionalFixed32:[input readFixed32]];
        break;
      }
      case 65: {
        [self setOptionalFixed64:[input readFixed64]];
        break;
      }
      case 77: {
        [self setOptionalSfixed32:[input readSFixed32]];
        break;
      }
      case 81: {
        [self setOptionalSfixed64:[input readSFixed64]];
        break;
      }
      case 93: {
        [self setOptionalFloat:[input readFloat]];
        break;
      }
      case 97: {
        [self setOptionalDouble:[input readDouble]];
        break;
      }
      case 104: {
        [self setOptionalBool:[input readBool]];
        break;
      }
      case 114: {
        [self setOptionalString:[input readString]];
        break;
      }
      case 122: {
        [self setOptionalBytes:[input readData]];
        break;
      }
      case 131: {
        TestAllTypes_OptionalGroup_Builder* subBuilder = [TestAllTypes_OptionalGroup newBuilder];
        if (self.hasOptionalGroup) {
          [subBuilder mergeFromTestAllTypes_OptionalGroup:self.optionalGroup];
        }
        [input readGroup:16 builder:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalGroup:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        TestAllTypes_NestedMessage_Builder* subBuilder = [TestAllTypes_NestedMessage newBuilder];
        if (self.hasOptionalNestedMessage) {
          [subBuilder mergeFromTestAllTypes_NestedMessage:self.optionalNestedMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalNestedMessage:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        ForeignMessage_Builder* subBuilder = [ForeignMessage newBuilder];
        if (self.hasOptionalForeignMessage) {
          [subBuilder mergeFromForeignMessage:self.optionalForeignMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalForeignMessage:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        ImportMessage_Builder* subBuilder = [ImportMessage newBuilder];
        if (self.hasOptionalImportMessage) {
          [subBuilder mergeFromImportMessage:self.optionalImportMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalImportMessage:[subBuilder buildPartial]];
        break;
      }
      case 168: {
        int32_t rawValue = [input readEnum];
        TestAllTypes_NestedEnum* value = [TestAllTypes_NestedEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:21 value:rawValue];
        } else {
          [self setOptionalNestedEnum:value];
        }
        break;
      }
      case 176: {
        int32_t rawValue = [input readEnum];
        ForeignEnum* value = [ForeignEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:22 value:rawValue];
        } else {
          [self setOptionalForeignEnum:value];
        }
        break;
      }
      case 184: {
        int32_t rawValue = [input readEnum];
        ImportEnum* value = [ImportEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:23 value:rawValue];
        } else {
          [self setOptionalImportEnum:value];
        }
        break;
      }
      case 194: {
        [self setOptionalStringPiece:[input readString]];
        break;
      }
      case 202: {
        [self setOptionalCord:[input readString]];
        break;
      }
      case 248: {
        [self addRepeatedInt32:[input readInt32]];
        break;
      }
      case 256: {
        [self addRepeatedInt64:[input readInt64]];
        break;
      }
      case 264: {
        [self addRepeatedUint32:[input readUInt32]];
        break;
      }
      case 272: {
        [self addRepeatedUint64:[input readUInt64]];
        break;
      }
      case 280: {
        [self addRepeatedSint32:[input readSInt32]];
        break;
      }
      case 288: {
        [self addRepeatedSint64:[input readSInt64]];
        break;
      }
      case 301: {
        [self addRepeatedFixed32:[input readFixed32]];
        break;
      }
      case 305: {
        [self addRepeatedFixed64:[input readFixed64]];
        break;
      }
      case 317: {
        [self addRepeatedSfixed32:[input readSFixed32]];
        break;
      }
      case 321: {
        [self addRepeatedSfixed64:[input readSFixed64]];
        break;
      }
      case 333: {
        [self addRepeatedFloat:[input readFloat]];
        break;
      }
      case 337: {
        [self addRepeatedDouble:[input readDouble]];
        break;
      }
      case 344: {
        [self addRepeatedBool:[input readBool]];
        break;
      }
      case 354: {
        [self addRepeatedString:[input readString]];
        break;
      }
      case 362: {
        [self addRepeatedBytes:[input readData]];
        break;
      }
      case 371: {
        TestAllTypes_RepeatedGroup_Builder* subBuilder = [TestAllTypes_RepeatedGroup newBuilder];
        [input readGroup:46 builder:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedGroup:[subBuilder buildPartial]];
        break;
      }
      case 386: {
        TestAllTypes_NestedMessage_Builder* subBuilder = [TestAllTypes_NestedMessage newBuilder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedNestedMessage:[subBuilder buildPartial]];
        break;
      }
      case 394: {
        ForeignMessage_Builder* subBuilder = [ForeignMessage newBuilder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedForeignMessage:[subBuilder buildPartial]];
        break;
      }
      case 402: {
        ImportMessage_Builder* subBuilder = [ImportMessage newBuilder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedImportMessage:[subBuilder buildPartial]];
        break;
      }
      case 408: {
        int32_t rawValue = [input readEnum];
        TestAllTypes_NestedEnum* value = [TestAllTypes_NestedEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:51 value:rawValue];
        } else {
          [self addRepeatedNestedEnum:value];
        }
        break;
      }
      case 416: {
        int32_t rawValue = [input readEnum];
        ForeignEnum* value = [ForeignEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:52 value:rawValue];
        } else {
          [self addRepeatedForeignEnum:value];
        }
        break;
      }
      case 424: {
        int32_t rawValue = [input readEnum];
        ImportEnum* value = [ImportEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:53 value:rawValue];
        } else {
          [self addRepeatedImportEnum:value];
        }
        break;
      }
      case 434: {
        [self addRepeatedStringPiece:[input readString]];
        break;
      }
      case 442: {
        [self addRepeatedCord:[input readString]];
        break;
      }
      case 488: {
        [self setDefaultInt32:[input readInt32]];
        break;
      }
      case 496: {
        [self setDefaultInt64:[input readInt64]];
        break;
      }
      case 504: {
        [self setDefaultUint32:[input readUInt32]];
        break;
      }
      case 512: {
        [self setDefaultUint64:[input readUInt64]];
        break;
      }
      case 520: {
        [self setDefaultSint32:[input readSInt32]];
        break;
      }
      case 528: {
        [self setDefaultSint64:[input readSInt64]];
        break;
      }
      case 541: {
        [self setDefaultFixed32:[input readFixed32]];
        break;
      }
      case 545: {
        [self setDefaultFixed64:[input readFixed64]];
        break;
      }
      case 557: {
        [self setDefaultSfixed32:[input readSFixed32]];
        break;
      }
      case 561: {
        [self setDefaultSfixed64:[input readSFixed64]];
        break;
      }
      case 573: {
        [self setDefaultFloat:[input readFloat]];
        break;
      }
      case 577: {
        [self setDefaultDouble:[input readDouble]];
        break;
      }
      case 584: {
        [self setDefaultBool:[input readBool]];
        break;
      }
      case 594: {
        [self setDefaultString:[input readString]];
        break;
      }
      case 602: {
        [self setDefaultBytes:[input readData]];
        break;
      }
      case 648: {
        int32_t rawValue = [input readEnum];
        TestAllTypes_NestedEnum* value = [TestAllTypes_NestedEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:81 value:rawValue];
        } else {
          [self setDefaultNestedEnum:value];
        }
        break;
      }
      case 656: {
        int32_t rawValue = [input readEnum];
        ForeignEnum* value = [ForeignEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:82 value:rawValue];
        } else {
          [self setDefaultForeignEnum:value];
        }
        break;
      }
      case 664: {
        int32_t rawValue = [input readEnum];
        ImportEnum* value = [ImportEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:83 value:rawValue];
        } else {
          [self setDefaultImportEnum:value];
        }
        break;
      }
      case 674: {
        [self setDefaultStringPiece:[input readString]];
        break;
      }
      case 682: {
        [self setDefaultCord:[input readString]];
        break;
      }
    }
  }
}


- (BOOL) hasOptionalInt32 {
  return result.hasOptionalInt32;
}
- (int32_t) optionalInt32 {
  return result.optionalInt32;
}
- (TestAllTypes_Builder*) setOptionalInt32:(int32_t) value {
  result.hasOptionalInt32 = YES;
  result.optionalInt32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalInt32 {
  result.hasOptionalInt32 = NO;
  result.optionalInt32 = 0;
  return self;
}

- (BOOL) hasOptionalInt64 {
  return result.hasOptionalInt64;
}
- (int64_t) optionalInt64 {
  return result.optionalInt64;
}
- (TestAllTypes_Builder*) setOptionalInt64:(int64_t) value {
  result.hasOptionalInt64 = YES;
  result.optionalInt64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalInt64 {
  result.hasOptionalInt64 = NO;
  result.optionalInt64 = 0L;
  return self;
}

- (BOOL) hasOptionalUint32 {
  return result.hasOptionalUint32;
}
- (int32_t) optionalUint32 {
  return result.optionalUint32;
}
- (TestAllTypes_Builder*) setOptionalUint32:(int32_t) value {
  result.hasOptionalUint32 = YES;
  result.optionalUint32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalUint32 {
  result.hasOptionalUint32 = NO;
  result.optionalUint32 = 0;
  return self;
}

- (BOOL) hasOptionalUint64 {
  return result.hasOptionalUint64;
}
- (int64_t) optionalUint64 {
  return result.optionalUint64;
}
- (TestAllTypes_Builder*) setOptionalUint64:(int64_t) value {
  result.hasOptionalUint64 = YES;
  result.optionalUint64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalUint64 {
  result.hasOptionalUint64 = NO;
  result.optionalUint64 = 0L;
  return self;
}

- (BOOL) hasOptionalSint32 {
  return result.hasOptionalSint32;
}
- (int32_t) optionalSint32 {
  return result.optionalSint32;
}
- (TestAllTypes_Builder*) setOptionalSint32:(int32_t) value {
  result.hasOptionalSint32 = YES;
  result.optionalSint32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalSint32 {
  result.hasOptionalSint32 = NO;
  result.optionalSint32 = 0;
  return self;
}

- (BOOL) hasOptionalSint64 {
  return result.hasOptionalSint64;
}
- (int64_t) optionalSint64 {
  return result.optionalSint64;
}
- (TestAllTypes_Builder*) setOptionalSint64:(int64_t) value {
  result.hasOptionalSint64 = YES;
  result.optionalSint64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalSint64 {
  result.hasOptionalSint64 = NO;
  result.optionalSint64 = 0L;
  return self;
}

- (BOOL) hasOptionalFixed32 {
  return result.hasOptionalFixed32;
}
- (int32_t) optionalFixed32 {
  return result.optionalFixed32;
}
- (TestAllTypes_Builder*) setOptionalFixed32:(int32_t) value {
  result.hasOptionalFixed32 = YES;
  result.optionalFixed32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalFixed32 {
  result.hasOptionalFixed32 = NO;
  result.optionalFixed32 = 0;
  return self;
}

- (BOOL) hasOptionalFixed64 {
  return result.hasOptionalFixed64;
}
- (int64_t) optionalFixed64 {
  return result.optionalFixed64;
}
- (TestAllTypes_Builder*) setOptionalFixed64:(int64_t) value {
  result.hasOptionalFixed64 = YES;
  result.optionalFixed64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalFixed64 {
  result.hasOptionalFixed64 = NO;
  result.optionalFixed64 = 0L;
  return self;
}

- (BOOL) hasOptionalSfixed32 {
  return result.hasOptionalSfixed32;
}
- (int32_t) optionalSfixed32 {
  return result.optionalSfixed32;
}
- (TestAllTypes_Builder*) setOptionalSfixed32:(int32_t) value {
  result.hasOptionalSfixed32 = YES;
  result.optionalSfixed32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalSfixed32 {
  result.hasOptionalSfixed32 = NO;
  result.optionalSfixed32 = 0;
  return self;
}

- (BOOL) hasOptionalSfixed64 {
  return result.hasOptionalSfixed64;
}
- (int64_t) optionalSfixed64 {
  return result.optionalSfixed64;
}
- (TestAllTypes_Builder*) setOptionalSfixed64:(int64_t) value {
  result.hasOptionalSfixed64 = YES;
  result.optionalSfixed64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalSfixed64 {
  result.hasOptionalSfixed64 = NO;
  result.optionalSfixed64 = 0L;
  return self;
}

- (BOOL) hasOptionalFloat {
  return result.hasOptionalFloat;
}
- (Float32) optionalFloat {
  return result.optionalFloat;
}
- (TestAllTypes_Builder*) setOptionalFloat:(Float32) value {
  result.hasOptionalFloat = YES;
  result.optionalFloat = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalFloat {
  result.hasOptionalFloat = NO;
  result.optionalFloat = 0;
  return self;
}

- (BOOL) hasOptionalDouble {
  return result.hasOptionalDouble;
}
- (Float64) optionalDouble {
  return result.optionalDouble;
}
- (TestAllTypes_Builder*) setOptionalDouble:(Float64) value {
  result.hasOptionalDouble = YES;
  result.optionalDouble = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalDouble {
  result.hasOptionalDouble = NO;
  result.optionalDouble = 0;
  return self;
}

- (BOOL) hasOptionalBool {
  return result.hasOptionalBool;
}
- (BOOL) optionalBool {
  return result.optionalBool;
}
- (TestAllTypes_Builder*) setOptionalBool:(BOOL) value {
  result.hasOptionalBool = YES;
  result.optionalBool = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalBool {
  result.hasOptionalBool = NO;
  result.optionalBool = NO;
  return self;
}

- (BOOL) hasOptionalString {
  return result.hasOptionalString;
}
- (NSString*) optionalString {
  return result.optionalString;
}
- (TestAllTypes_Builder*) setOptionalString:(NSString*) value {
  result.hasOptionalString = YES;
  result.optionalString = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalString {
  result.hasOptionalString = NO;
  result.optionalString = @"";
  return self;
}

- (BOOL) hasOptionalBytes {
  return result.hasOptionalBytes;
}
- (NSData*) optionalBytes {
  return result.optionalBytes;
}
- (TestAllTypes_Builder*) setOptionalBytes:(NSData*) value {
  result.hasOptionalBytes = YES;
  result.optionalBytes = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalBytes {
  result.hasOptionalBytes = NO;
  result.optionalBytes = [NSData data];
  return self;
}

- (BOOL) hasOptionalGroup {
  return result.hasOptionalGroup;
}
- (TestAllTypes_OptionalGroup*) optionalGroup {
  return result.optionalGroup;
}
- (id<PBMessage_Builder>) setOptionalGroup:(TestAllTypes_OptionalGroup*) value {
  result.hasOptionalGroup = YES;
  result.optionalGroup = value;
  return self;
}
- (id<PBMessage_Builder>) setOptionalGroupBuilder:(TestAllTypes_OptionalGroup_Builder*) builderForValue {
  return [self setOptionalGroup:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeOptionalGroup:(TestAllTypes_OptionalGroup*) value {
  if (result.hasOptionalGroup &&
      result.optionalGroup != [TestAllTypes_OptionalGroup defaultInstance]) {
    result.optionalGroup =
      [[[TestAllTypes_OptionalGroup newBuilderWithTestAllTypes_OptionalGroup:result.optionalGroup] mergeFromTestAllTypes_OptionalGroup:value] buildPartial];
  } else {
    result.optionalGroup = value;
  }
  result.hasOptionalGroup = YES;
  return self;
}
- (id<PBMessage_Builder>) clearOptionalGroup {
  result.hasOptionalGroup = NO;
  result.optionalGroup = [TestAllTypes_OptionalGroup defaultInstance];
  return self;
}

- (BOOL) hasOptionalNestedMessage {
  return result.hasOptionalNestedMessage;
}
- (TestAllTypes_NestedMessage*) optionalNestedMessage {
  return result.optionalNestedMessage;
}
- (id<PBMessage_Builder>) setOptionalNestedMessage:(TestAllTypes_NestedMessage*) value {
  result.hasOptionalNestedMessage = YES;
  result.optionalNestedMessage = value;
  return self;
}
- (id<PBMessage_Builder>) setOptionalNestedMessageBuilder:(TestAllTypes_NestedMessage_Builder*) builderForValue {
  return [self setOptionalNestedMessage:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeOptionalNestedMessage:(TestAllTypes_NestedMessage*) value {
  if (result.hasOptionalNestedMessage &&
      result.optionalNestedMessage != [TestAllTypes_NestedMessage defaultInstance]) {
    result.optionalNestedMessage =
      [[[TestAllTypes_NestedMessage newBuilderWithTestAllTypes_NestedMessage:result.optionalNestedMessage] mergeFromTestAllTypes_NestedMessage:value] buildPartial];
  } else {
    result.optionalNestedMessage = value;
  }
  result.hasOptionalNestedMessage = YES;
  return self;
}
- (id<PBMessage_Builder>) clearOptionalNestedMessage {
  result.hasOptionalNestedMessage = NO;
  result.optionalNestedMessage = [TestAllTypes_NestedMessage defaultInstance];
  return self;
}

- (BOOL) hasOptionalForeignMessage {
  return result.hasOptionalForeignMessage;
}
- (ForeignMessage*) optionalForeignMessage {
  return result.optionalForeignMessage;
}
- (id<PBMessage_Builder>) setOptionalForeignMessage:(ForeignMessage*) value {
  result.hasOptionalForeignMessage = YES;
  result.optionalForeignMessage = value;
  return self;
}
- (id<PBMessage_Builder>) setOptionalForeignMessageBuilder:(ForeignMessage_Builder*) builderForValue {
  return [self setOptionalForeignMessage:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeOptionalForeignMessage:(ForeignMessage*) value {
  if (result.hasOptionalForeignMessage &&
      result.optionalForeignMessage != [ForeignMessage defaultInstance]) {
    result.optionalForeignMessage =
      [[[ForeignMessage newBuilderWithForeignMessage:result.optionalForeignMessage] mergeFromForeignMessage:value] buildPartial];
  } else {
    result.optionalForeignMessage = value;
  }
  result.hasOptionalForeignMessage = YES;
  return self;
}
- (id<PBMessage_Builder>) clearOptionalForeignMessage {
  result.hasOptionalForeignMessage = NO;
  result.optionalForeignMessage = [ForeignMessage defaultInstance];
  return self;
}

- (BOOL) hasOptionalImportMessage {
  return result.hasOptionalImportMessage;
}
- (ImportMessage*) optionalImportMessage {
  return result.optionalImportMessage;
}
- (id<PBMessage_Builder>) setOptionalImportMessage:(ImportMessage*) value {
  result.hasOptionalImportMessage = YES;
  result.optionalImportMessage = value;
  return self;
}
- (id<PBMessage_Builder>) setOptionalImportMessageBuilder:(ImportMessage_Builder*) builderForValue {
  return [self setOptionalImportMessage:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeOptionalImportMessage:(ImportMessage*) value {
  if (result.hasOptionalImportMessage &&
      result.optionalImportMessage != [ImportMessage defaultInstance]) {
    result.optionalImportMessage =
      [[[ImportMessage newBuilderWithImportMessage:result.optionalImportMessage] mergeFromImportMessage:value] buildPartial];
  } else {
    result.optionalImportMessage = value;
  }
  result.hasOptionalImportMessage = YES;
  return self;
}
- (id<PBMessage_Builder>) clearOptionalImportMessage {
  result.hasOptionalImportMessage = NO;
  result.optionalImportMessage = [ImportMessage defaultInstance];
  return self;
}

- (BOOL) hasOptionalNestedEnum {
  return result.hasOptionalNestedEnum;
}
- (TestAllTypes_NestedEnum*) optionalNestedEnum {
  return result.optionalNestedEnum;
}
- (TestAllTypes_Builder*) setOptionalNestedEnum:(TestAllTypes_NestedEnum*) value {
  result.hasOptionalNestedEnum = YES;
  result.optionalNestedEnum = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalNestedEnum {
  result.hasOptionalNestedEnum = NO;
  result.optionalNestedEnum = [TestAllTypes_NestedEnum FOO];
  return self;
}

- (BOOL) hasOptionalForeignEnum {
  return result.hasOptionalForeignEnum;
}
- (ForeignEnum*) optionalForeignEnum {
  return result.optionalForeignEnum;
}
- (TestAllTypes_Builder*) setOptionalForeignEnum:(ForeignEnum*) value {
  result.hasOptionalForeignEnum = YES;
  result.optionalForeignEnum = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalForeignEnum {
  result.hasOptionalForeignEnum = NO;
  result.optionalForeignEnum = [ForeignEnum FOREIGN_FOO];
  return self;
}

- (BOOL) hasOptionalImportEnum {
  return result.hasOptionalImportEnum;
}
- (ImportEnum*) optionalImportEnum {
  return result.optionalImportEnum;
}
- (TestAllTypes_Builder*) setOptionalImportEnum:(ImportEnum*) value {
  result.hasOptionalImportEnum = YES;
  result.optionalImportEnum = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalImportEnum {
  result.hasOptionalImportEnum = NO;
  result.optionalImportEnum = [ImportEnum IMPORT_FOO];
  return self;
}

- (BOOL) hasOptionalStringPiece {
  return result.hasOptionalStringPiece;
}
- (NSString*) optionalStringPiece {
  return result.optionalStringPiece;
}
- (TestAllTypes_Builder*) setOptionalStringPiece:(NSString*) value {
  result.hasOptionalStringPiece = YES;
  result.optionalStringPiece = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalStringPiece {
  result.hasOptionalStringPiece = NO;
  result.optionalStringPiece = @"";
  return self;
}

- (BOOL) hasOptionalCord {
  return result.hasOptionalCord;
}
- (NSString*) optionalCord {
  return result.optionalCord;
}
- (TestAllTypes_Builder*) setOptionalCord:(NSString*) value {
  result.hasOptionalCord = YES;
  result.optionalCord = value;
  return self;
}
- (TestAllTypes_Builder*) clearOptionalCord {
  result.hasOptionalCord = NO;
  result.optionalCord = @"";
  return self;
}

- (NSArray*) repeatedInt32List {
  if (result.mutableRepeatedInt32List == nil) { return [NSArray array]; }
  return result.mutableRepeatedInt32List;
}
- (int32_t) repeatedInt32AtIndex:(int32_t) index {
  return [result repeatedInt32AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedInt32AtIndex:(int32_t) index withRepeatedInt32:(int32_t) value {
  [result.mutableRepeatedInt32List replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedInt32:(int32_t) value {
  if (result.mutableRepeatedInt32List == nil) {
    result.mutableRepeatedInt32List = [NSMutableArray array];
  }
  [result.mutableRepeatedInt32List addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedInt32:(NSArray*) values {
  if (result.mutableRepeatedInt32List == nil) {
    result.mutableRepeatedInt32List = [NSMutableArray array];
  }
  [result.mutableRepeatedInt32List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedInt32List {
  result.mutableRepeatedInt32List = nil;
  return self;
}

- (NSArray*) repeatedInt64List {
  if (result.mutableRepeatedInt64List == nil) { return [NSArray array]; }
  return result.mutableRepeatedInt64List;
}
- (int64_t) repeatedInt64AtIndex:(int32_t) index {
  return [result repeatedInt64AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedInt64AtIndex:(int32_t) index withRepeatedInt64:(int64_t) value {
  [result.mutableRepeatedInt64List replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedInt64:(int64_t) value {
  if (result.mutableRepeatedInt64List == nil) {
    result.mutableRepeatedInt64List = [NSMutableArray array];
  }
  [result.mutableRepeatedInt64List addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedInt64:(NSArray*) values {
  if (result.mutableRepeatedInt64List == nil) {
    result.mutableRepeatedInt64List = [NSMutableArray array];
  }
  [result.mutableRepeatedInt64List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedInt64List {
  result.mutableRepeatedInt64List = nil;
  return self;
}

- (NSArray*) repeatedUint32List {
  if (result.mutableRepeatedUint32List == nil) { return [NSArray array]; }
  return result.mutableRepeatedUint32List;
}
- (int32_t) repeatedUint32AtIndex:(int32_t) index {
  return [result repeatedUint32AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedUint32AtIndex:(int32_t) index withRepeatedUint32:(int32_t) value {
  [result.mutableRepeatedUint32List replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedUint32:(int32_t) value {
  if (result.mutableRepeatedUint32List == nil) {
    result.mutableRepeatedUint32List = [NSMutableArray array];
  }
  [result.mutableRepeatedUint32List addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedUint32:(NSArray*) values {
  if (result.mutableRepeatedUint32List == nil) {
    result.mutableRepeatedUint32List = [NSMutableArray array];
  }
  [result.mutableRepeatedUint32List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedUint32List {
  result.mutableRepeatedUint32List = nil;
  return self;
}

- (NSArray*) repeatedUint64List {
  if (result.mutableRepeatedUint64List == nil) { return [NSArray array]; }
  return result.mutableRepeatedUint64List;
}
- (int64_t) repeatedUint64AtIndex:(int32_t) index {
  return [result repeatedUint64AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedUint64AtIndex:(int32_t) index withRepeatedUint64:(int64_t) value {
  [result.mutableRepeatedUint64List replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedUint64:(int64_t) value {
  if (result.mutableRepeatedUint64List == nil) {
    result.mutableRepeatedUint64List = [NSMutableArray array];
  }
  [result.mutableRepeatedUint64List addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedUint64:(NSArray*) values {
  if (result.mutableRepeatedUint64List == nil) {
    result.mutableRepeatedUint64List = [NSMutableArray array];
  }
  [result.mutableRepeatedUint64List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedUint64List {
  result.mutableRepeatedUint64List = nil;
  return self;
}

- (NSArray*) repeatedSint32List {
  if (result.mutableRepeatedSint32List == nil) { return [NSArray array]; }
  return result.mutableRepeatedSint32List;
}
- (int32_t) repeatedSint32AtIndex:(int32_t) index {
  return [result repeatedSint32AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedSint32AtIndex:(int32_t) index withRepeatedSint32:(int32_t) value {
  [result.mutableRepeatedSint32List replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedSint32:(int32_t) value {
  if (result.mutableRepeatedSint32List == nil) {
    result.mutableRepeatedSint32List = [NSMutableArray array];
  }
  [result.mutableRepeatedSint32List addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedSint32:(NSArray*) values {
  if (result.mutableRepeatedSint32List == nil) {
    result.mutableRepeatedSint32List = [NSMutableArray array];
  }
  [result.mutableRepeatedSint32List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedSint32List {
  result.mutableRepeatedSint32List = nil;
  return self;
}

- (NSArray*) repeatedSint64List {
  if (result.mutableRepeatedSint64List == nil) { return [NSArray array]; }
  return result.mutableRepeatedSint64List;
}
- (int64_t) repeatedSint64AtIndex:(int32_t) index {
  return [result repeatedSint64AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedSint64AtIndex:(int32_t) index withRepeatedSint64:(int64_t) value {
  [result.mutableRepeatedSint64List replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedSint64:(int64_t) value {
  if (result.mutableRepeatedSint64List == nil) {
    result.mutableRepeatedSint64List = [NSMutableArray array];
  }
  [result.mutableRepeatedSint64List addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedSint64:(NSArray*) values {
  if (result.mutableRepeatedSint64List == nil) {
    result.mutableRepeatedSint64List = [NSMutableArray array];
  }
  [result.mutableRepeatedSint64List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedSint64List {
  result.mutableRepeatedSint64List = nil;
  return self;
}

- (NSArray*) repeatedFixed32List {
  if (result.mutableRepeatedFixed32List == nil) { return [NSArray array]; }
  return result.mutableRepeatedFixed32List;
}
- (int32_t) repeatedFixed32AtIndex:(int32_t) index {
  return [result repeatedFixed32AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedFixed32AtIndex:(int32_t) index withRepeatedFixed32:(int32_t) value {
  [result.mutableRepeatedFixed32List replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedFixed32:(int32_t) value {
  if (result.mutableRepeatedFixed32List == nil) {
    result.mutableRepeatedFixed32List = [NSMutableArray array];
  }
  [result.mutableRepeatedFixed32List addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedFixed32:(NSArray*) values {
  if (result.mutableRepeatedFixed32List == nil) {
    result.mutableRepeatedFixed32List = [NSMutableArray array];
  }
  [result.mutableRepeatedFixed32List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedFixed32List {
  result.mutableRepeatedFixed32List = nil;
  return self;
}

- (NSArray*) repeatedFixed64List {
  if (result.mutableRepeatedFixed64List == nil) { return [NSArray array]; }
  return result.mutableRepeatedFixed64List;
}
- (int64_t) repeatedFixed64AtIndex:(int32_t) index {
  return [result repeatedFixed64AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedFixed64AtIndex:(int32_t) index withRepeatedFixed64:(int64_t) value {
  [result.mutableRepeatedFixed64List replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedFixed64:(int64_t) value {
  if (result.mutableRepeatedFixed64List == nil) {
    result.mutableRepeatedFixed64List = [NSMutableArray array];
  }
  [result.mutableRepeatedFixed64List addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedFixed64:(NSArray*) values {
  if (result.mutableRepeatedFixed64List == nil) {
    result.mutableRepeatedFixed64List = [NSMutableArray array];
  }
  [result.mutableRepeatedFixed64List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedFixed64List {
  result.mutableRepeatedFixed64List = nil;
  return self;
}

- (NSArray*) repeatedSfixed32List {
  if (result.mutableRepeatedSfixed32List == nil) { return [NSArray array]; }
  return result.mutableRepeatedSfixed32List;
}
- (int32_t) repeatedSfixed32AtIndex:(int32_t) index {
  return [result repeatedSfixed32AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedSfixed32AtIndex:(int32_t) index withRepeatedSfixed32:(int32_t) value {
  [result.mutableRepeatedSfixed32List replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedSfixed32:(int32_t) value {
  if (result.mutableRepeatedSfixed32List == nil) {
    result.mutableRepeatedSfixed32List = [NSMutableArray array];
  }
  [result.mutableRepeatedSfixed32List addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedSfixed32:(NSArray*) values {
  if (result.mutableRepeatedSfixed32List == nil) {
    result.mutableRepeatedSfixed32List = [NSMutableArray array];
  }
  [result.mutableRepeatedSfixed32List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedSfixed32List {
  result.mutableRepeatedSfixed32List = nil;
  return self;
}

- (NSArray*) repeatedSfixed64List {
  if (result.mutableRepeatedSfixed64List == nil) { return [NSArray array]; }
  return result.mutableRepeatedSfixed64List;
}
- (int64_t) repeatedSfixed64AtIndex:(int32_t) index {
  return [result repeatedSfixed64AtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedSfixed64AtIndex:(int32_t) index withRepeatedSfixed64:(int64_t) value {
  [result.mutableRepeatedSfixed64List replaceObjectAtIndex:index withObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedSfixed64:(int64_t) value {
  if (result.mutableRepeatedSfixed64List == nil) {
    result.mutableRepeatedSfixed64List = [NSMutableArray array];
  }
  [result.mutableRepeatedSfixed64List addObject:[NSNumber numberWithLongLong:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedSfixed64:(NSArray*) values {
  if (result.mutableRepeatedSfixed64List == nil) {
    result.mutableRepeatedSfixed64List = [NSMutableArray array];
  }
  [result.mutableRepeatedSfixed64List addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedSfixed64List {
  result.mutableRepeatedSfixed64List = nil;
  return self;
}

- (NSArray*) repeatedFloatList {
  if (result.mutableRepeatedFloatList == nil) { return [NSArray array]; }
  return result.mutableRepeatedFloatList;
}
- (Float32) repeatedFloatAtIndex:(int32_t) index {
  return [result repeatedFloatAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedFloatAtIndex:(int32_t) index withRepeatedFloat:(Float32) value {
  [result.mutableRepeatedFloatList replaceObjectAtIndex:index withObject:[NSNumber numberWithFloat:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedFloat:(Float32) value {
  if (result.mutableRepeatedFloatList == nil) {
    result.mutableRepeatedFloatList = [NSMutableArray array];
  }
  [result.mutableRepeatedFloatList addObject:[NSNumber numberWithFloat:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedFloat:(NSArray*) values {
  if (result.mutableRepeatedFloatList == nil) {
    result.mutableRepeatedFloatList = [NSMutableArray array];
  }
  [result.mutableRepeatedFloatList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedFloatList {
  result.mutableRepeatedFloatList = nil;
  return self;
}

- (NSArray*) repeatedDoubleList {
  if (result.mutableRepeatedDoubleList == nil) { return [NSArray array]; }
  return result.mutableRepeatedDoubleList;
}
- (Float64) repeatedDoubleAtIndex:(int32_t) index {
  return [result repeatedDoubleAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedDoubleAtIndex:(int32_t) index withRepeatedDouble:(Float64) value {
  [result.mutableRepeatedDoubleList replaceObjectAtIndex:index withObject:[NSNumber numberWithDouble:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedDouble:(Float64) value {
  if (result.mutableRepeatedDoubleList == nil) {
    result.mutableRepeatedDoubleList = [NSMutableArray array];
  }
  [result.mutableRepeatedDoubleList addObject:[NSNumber numberWithDouble:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedDouble:(NSArray*) values {
  if (result.mutableRepeatedDoubleList == nil) {
    result.mutableRepeatedDoubleList = [NSMutableArray array];
  }
  [result.mutableRepeatedDoubleList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedDoubleList {
  result.mutableRepeatedDoubleList = nil;
  return self;
}

- (NSArray*) repeatedBoolList {
  if (result.mutableRepeatedBoolList == nil) { return [NSArray array]; }
  return result.mutableRepeatedBoolList;
}
- (BOOL) repeatedBoolAtIndex:(int32_t) index {
  return [result repeatedBoolAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedBoolAtIndex:(int32_t) index withRepeatedBool:(BOOL) value {
  [result.mutableRepeatedBoolList replaceObjectAtIndex:index withObject:[NSNumber numberWithBool:value]];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedBool:(BOOL) value {
  if (result.mutableRepeatedBoolList == nil) {
    result.mutableRepeatedBoolList = [NSMutableArray array];
  }
  [result.mutableRepeatedBoolList addObject:[NSNumber numberWithBool:value]];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedBool:(NSArray*) values {
  if (result.mutableRepeatedBoolList == nil) {
    result.mutableRepeatedBoolList = [NSMutableArray array];
  }
  [result.mutableRepeatedBoolList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedBoolList {
  result.mutableRepeatedBoolList = nil;
  return self;
}

- (NSArray*) repeatedStringList {
  if (result.mutableRepeatedStringList == nil) { return [NSArray array]; }
  return result.mutableRepeatedStringList;
}
- (NSString*) repeatedStringAtIndex:(int32_t) index {
  return [result repeatedStringAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedStringAtIndex:(int32_t) index withRepeatedString:(NSString*) value {
  [result.mutableRepeatedStringList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedString:(NSString*) value {
  if (result.mutableRepeatedStringList == nil) {
    result.mutableRepeatedStringList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedString:(NSArray*) values {
  if (result.mutableRepeatedStringList == nil) {
    result.mutableRepeatedStringList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedStringList {
  result.mutableRepeatedStringList = nil;
  return self;
}

- (NSArray*) repeatedBytesList {
  if (result.mutableRepeatedBytesList == nil) { return [NSArray array]; }
  return result.mutableRepeatedBytesList;
}
- (NSData*) repeatedBytesAtIndex:(int32_t) index {
  return [result repeatedBytesAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedBytesAtIndex:(int32_t) index withRepeatedBytes:(NSData*) value {
  [result.mutableRepeatedBytesList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedBytes:(NSData*) value {
  if (result.mutableRepeatedBytesList == nil) {
    result.mutableRepeatedBytesList = [NSMutableArray array];
  }
  [result.mutableRepeatedBytesList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedBytes:(NSArray*) values {
  if (result.mutableRepeatedBytesList == nil) {
    result.mutableRepeatedBytesList = [NSMutableArray array];
  }
  [result.mutableRepeatedBytesList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedBytesList {
  result.mutableRepeatedBytesList = nil;
  return self;
}

- (NSArray*) repeatedGroupList {
  if (result.mutableRepeatedGroupList == nil) { return [NSArray array]; }
  return result.mutableRepeatedGroupList;
}
- (TestAllTypes_RepeatedGroup*) repeatedGroupAtIndex:(int32_t) index {
  return [result repeatedGroupAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedGroupAtIndex:(int32_t) index withRepeatedGroup:(TestAllTypes_RepeatedGroup*) value {
  [result.mutableRepeatedGroupList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedGroup:(NSArray*) values {
  if (result.mutableRepeatedGroupList == nil) {
    result.mutableRepeatedGroupList = [NSMutableArray array];
  }
  [result.mutableRepeatedGroupList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedGroupList {
  result.mutableRepeatedGroupList = nil;
  return self;
}
- (TestAllTypes_Builder*) addRepeatedGroup:(TestAllTypes_RepeatedGroup*) value {
  if (result.mutableRepeatedGroupList == nil) {
    result.mutableRepeatedGroupList = [NSMutableArray array];
  }
  [result.mutableRepeatedGroupList addObject:value];
  return self;
}

- (NSArray*) repeatedNestedMessageList {
  if (result.mutableRepeatedNestedMessageList == nil) { return [NSArray array]; }
  return result.mutableRepeatedNestedMessageList;
}
- (TestAllTypes_NestedMessage*) repeatedNestedMessageAtIndex:(int32_t) index {
  return [result repeatedNestedMessageAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedNestedMessageAtIndex:(int32_t) index withRepeatedNestedMessage:(TestAllTypes_NestedMessage*) value {
  [result.mutableRepeatedNestedMessageList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedNestedMessage:(NSArray*) values {
  if (result.mutableRepeatedNestedMessageList == nil) {
    result.mutableRepeatedNestedMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedNestedMessageList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedNestedMessageList {
  result.mutableRepeatedNestedMessageList = nil;
  return self;
}
- (TestAllTypes_Builder*) addRepeatedNestedMessage:(TestAllTypes_NestedMessage*) value {
  if (result.mutableRepeatedNestedMessageList == nil) {
    result.mutableRepeatedNestedMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedNestedMessageList addObject:value];
  return self;
}

- (NSArray*) repeatedForeignMessageList {
  if (result.mutableRepeatedForeignMessageList == nil) { return [NSArray array]; }
  return result.mutableRepeatedForeignMessageList;
}
- (ForeignMessage*) repeatedForeignMessageAtIndex:(int32_t) index {
  return [result repeatedForeignMessageAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedForeignMessageAtIndex:(int32_t) index withRepeatedForeignMessage:(ForeignMessage*) value {
  [result.mutableRepeatedForeignMessageList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedForeignMessage:(NSArray*) values {
  if (result.mutableRepeatedForeignMessageList == nil) {
    result.mutableRepeatedForeignMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedForeignMessageList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedForeignMessageList {
  result.mutableRepeatedForeignMessageList = nil;
  return self;
}
- (TestAllTypes_Builder*) addRepeatedForeignMessage:(ForeignMessage*) value {
  if (result.mutableRepeatedForeignMessageList == nil) {
    result.mutableRepeatedForeignMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedForeignMessageList addObject:value];
  return self;
}

- (NSArray*) repeatedImportMessageList {
  if (result.mutableRepeatedImportMessageList == nil) { return [NSArray array]; }
  return result.mutableRepeatedImportMessageList;
}
- (ImportMessage*) repeatedImportMessageAtIndex:(int32_t) index {
  return [result repeatedImportMessageAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedImportMessageAtIndex:(int32_t) index withRepeatedImportMessage:(ImportMessage*) value {
  [result.mutableRepeatedImportMessageList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedImportMessage:(NSArray*) values {
  if (result.mutableRepeatedImportMessageList == nil) {
    result.mutableRepeatedImportMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedImportMessageList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedImportMessageList {
  result.mutableRepeatedImportMessageList = nil;
  return self;
}
- (TestAllTypes_Builder*) addRepeatedImportMessage:(ImportMessage*) value {
  if (result.mutableRepeatedImportMessageList == nil) {
    result.mutableRepeatedImportMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedImportMessageList addObject:value];
  return self;
}

- (NSArray*) repeatedNestedEnumList {
  return result.mutableRepeatedNestedEnumList;
}
- (TestAllTypes_NestedEnum*) repeatedNestedEnumAtIndex:(int32_t) index {
  return [result repeatedNestedEnumAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedNestedEnumAtIndex:(int32_t) index withRepeatedNestedEnum:(TestAllTypes_NestedEnum*) value {
  [result.mutableRepeatedNestedEnumList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedNestedEnum:(TestAllTypes_NestedEnum*) value {
  if (result.mutableRepeatedNestedEnumList == nil) {
    result.mutableRepeatedNestedEnumList = [NSMutableArray array];
  }
  [result.mutableRepeatedNestedEnumList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedNestedEnum:(NSArray*) values {
  if (result.mutableRepeatedNestedEnumList == nil) {
    result.mutableRepeatedNestedEnumList = [NSMutableArray array];
  }
  [result.mutableRepeatedNestedEnumList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedNestedEnumList {
  result.mutableRepeatedNestedEnumList = nil;
  return self;
}

- (NSArray*) repeatedForeignEnumList {
  return result.mutableRepeatedForeignEnumList;
}
- (ForeignEnum*) repeatedForeignEnumAtIndex:(int32_t) index {
  return [result repeatedForeignEnumAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedForeignEnumAtIndex:(int32_t) index withRepeatedForeignEnum:(ForeignEnum*) value {
  [result.mutableRepeatedForeignEnumList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedForeignEnum:(ForeignEnum*) value {
  if (result.mutableRepeatedForeignEnumList == nil) {
    result.mutableRepeatedForeignEnumList = [NSMutableArray array];
  }
  [result.mutableRepeatedForeignEnumList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedForeignEnum:(NSArray*) values {
  if (result.mutableRepeatedForeignEnumList == nil) {
    result.mutableRepeatedForeignEnumList = [NSMutableArray array];
  }
  [result.mutableRepeatedForeignEnumList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedForeignEnumList {
  result.mutableRepeatedForeignEnumList = nil;
  return self;
}

- (NSArray*) repeatedImportEnumList {
  return result.mutableRepeatedImportEnumList;
}
- (ImportEnum*) repeatedImportEnumAtIndex:(int32_t) index {
  return [result repeatedImportEnumAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedImportEnumAtIndex:(int32_t) index withRepeatedImportEnum:(ImportEnum*) value {
  [result.mutableRepeatedImportEnumList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedImportEnum:(ImportEnum*) value {
  if (result.mutableRepeatedImportEnumList == nil) {
    result.mutableRepeatedImportEnumList = [NSMutableArray array];
  }
  [result.mutableRepeatedImportEnumList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedImportEnum:(NSArray*) values {
  if (result.mutableRepeatedImportEnumList == nil) {
    result.mutableRepeatedImportEnumList = [NSMutableArray array];
  }
  [result.mutableRepeatedImportEnumList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedImportEnumList {
  result.mutableRepeatedImportEnumList = nil;
  return self;
}

- (NSArray*) repeatedStringPieceList {
  if (result.mutableRepeatedStringPieceList == nil) { return [NSArray array]; }
  return result.mutableRepeatedStringPieceList;
}
- (NSString*) repeatedStringPieceAtIndex:(int32_t) index {
  return [result repeatedStringPieceAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedStringPieceAtIndex:(int32_t) index withRepeatedStringPiece:(NSString*) value {
  [result.mutableRepeatedStringPieceList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedStringPiece:(NSString*) value {
  if (result.mutableRepeatedStringPieceList == nil) {
    result.mutableRepeatedStringPieceList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringPieceList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedStringPiece:(NSArray*) values {
  if (result.mutableRepeatedStringPieceList == nil) {
    result.mutableRepeatedStringPieceList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringPieceList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedStringPieceList {
  result.mutableRepeatedStringPieceList = nil;
  return self;
}

- (NSArray*) repeatedCordList {
  if (result.mutableRepeatedCordList == nil) { return [NSArray array]; }
  return result.mutableRepeatedCordList;
}
- (NSString*) repeatedCordAtIndex:(int32_t) index {
  return [result repeatedCordAtIndex:index];
}
- (TestAllTypes_Builder*) replaceRepeatedCordAtIndex:(int32_t) index withRepeatedCord:(NSString*) value {
  [result.mutableRepeatedCordList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestAllTypes_Builder*) addRepeatedCord:(NSString*) value {
  if (result.mutableRepeatedCordList == nil) {
    result.mutableRepeatedCordList = [NSMutableArray array];
  }
  [result.mutableRepeatedCordList addObject:value];
  return self;
}
- (TestAllTypes_Builder*) addAllRepeatedCord:(NSArray*) values {
  if (result.mutableRepeatedCordList == nil) {
    result.mutableRepeatedCordList = [NSMutableArray array];
  }
  [result.mutableRepeatedCordList addObjectsFromArray:values];
  return self;
}
- (TestAllTypes_Builder*) clearRepeatedCordList {
  result.mutableRepeatedCordList = nil;
  return self;
}

- (BOOL) hasDefaultInt32 {
  return result.hasDefaultInt32;
}
- (int32_t) defaultInt32 {
  return result.defaultInt32;
}
- (TestAllTypes_Builder*) setDefaultInt32:(int32_t) value {
  result.hasDefaultInt32 = YES;
  result.defaultInt32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultInt32 {
  result.hasDefaultInt32 = NO;
  result.defaultInt32 = 41;
  return self;
}

- (BOOL) hasDefaultInt64 {
  return result.hasDefaultInt64;
}
- (int64_t) defaultInt64 {
  return result.defaultInt64;
}
- (TestAllTypes_Builder*) setDefaultInt64:(int64_t) value {
  result.hasDefaultInt64 = YES;
  result.defaultInt64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultInt64 {
  result.hasDefaultInt64 = NO;
  result.defaultInt64 = 42L;
  return self;
}

- (BOOL) hasDefaultUint32 {
  return result.hasDefaultUint32;
}
- (int32_t) defaultUint32 {
  return result.defaultUint32;
}
- (TestAllTypes_Builder*) setDefaultUint32:(int32_t) value {
  result.hasDefaultUint32 = YES;
  result.defaultUint32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultUint32 {
  result.hasDefaultUint32 = NO;
  result.defaultUint32 = 43;
  return self;
}

- (BOOL) hasDefaultUint64 {
  return result.hasDefaultUint64;
}
- (int64_t) defaultUint64 {
  return result.defaultUint64;
}
- (TestAllTypes_Builder*) setDefaultUint64:(int64_t) value {
  result.hasDefaultUint64 = YES;
  result.defaultUint64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultUint64 {
  result.hasDefaultUint64 = NO;
  result.defaultUint64 = 44L;
  return self;
}

- (BOOL) hasDefaultSint32 {
  return result.hasDefaultSint32;
}
- (int32_t) defaultSint32 {
  return result.defaultSint32;
}
- (TestAllTypes_Builder*) setDefaultSint32:(int32_t) value {
  result.hasDefaultSint32 = YES;
  result.defaultSint32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultSint32 {
  result.hasDefaultSint32 = NO;
  result.defaultSint32 = -45;
  return self;
}

- (BOOL) hasDefaultSint64 {
  return result.hasDefaultSint64;
}
- (int64_t) defaultSint64 {
  return result.defaultSint64;
}
- (TestAllTypes_Builder*) setDefaultSint64:(int64_t) value {
  result.hasDefaultSint64 = YES;
  result.defaultSint64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultSint64 {
  result.hasDefaultSint64 = NO;
  result.defaultSint64 = 46L;
  return self;
}

- (BOOL) hasDefaultFixed32 {
  return result.hasDefaultFixed32;
}
- (int32_t) defaultFixed32 {
  return result.defaultFixed32;
}
- (TestAllTypes_Builder*) setDefaultFixed32:(int32_t) value {
  result.hasDefaultFixed32 = YES;
  result.defaultFixed32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultFixed32 {
  result.hasDefaultFixed32 = NO;
  result.defaultFixed32 = 47;
  return self;
}

- (BOOL) hasDefaultFixed64 {
  return result.hasDefaultFixed64;
}
- (int64_t) defaultFixed64 {
  return result.defaultFixed64;
}
- (TestAllTypes_Builder*) setDefaultFixed64:(int64_t) value {
  result.hasDefaultFixed64 = YES;
  result.defaultFixed64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultFixed64 {
  result.hasDefaultFixed64 = NO;
  result.defaultFixed64 = 48L;
  return self;
}

- (BOOL) hasDefaultSfixed32 {
  return result.hasDefaultSfixed32;
}
- (int32_t) defaultSfixed32 {
  return result.defaultSfixed32;
}
- (TestAllTypes_Builder*) setDefaultSfixed32:(int32_t) value {
  result.hasDefaultSfixed32 = YES;
  result.defaultSfixed32 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultSfixed32 {
  result.hasDefaultSfixed32 = NO;
  result.defaultSfixed32 = 49;
  return self;
}

- (BOOL) hasDefaultSfixed64 {
  return result.hasDefaultSfixed64;
}
- (int64_t) defaultSfixed64 {
  return result.defaultSfixed64;
}
- (TestAllTypes_Builder*) setDefaultSfixed64:(int64_t) value {
  result.hasDefaultSfixed64 = YES;
  result.defaultSfixed64 = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultSfixed64 {
  result.hasDefaultSfixed64 = NO;
  result.defaultSfixed64 = -50L;
  return self;
}

- (BOOL) hasDefaultFloat {
  return result.hasDefaultFloat;
}
- (Float32) defaultFloat {
  return result.defaultFloat;
}
- (TestAllTypes_Builder*) setDefaultFloat:(Float32) value {
  result.hasDefaultFloat = YES;
  result.defaultFloat = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultFloat {
  result.hasDefaultFloat = NO;
  result.defaultFloat = 51.5;
  return self;
}

- (BOOL) hasDefaultDouble {
  return result.hasDefaultDouble;
}
- (Float64) defaultDouble {
  return result.defaultDouble;
}
- (TestAllTypes_Builder*) setDefaultDouble:(Float64) value {
  result.hasDefaultDouble = YES;
  result.defaultDouble = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultDouble {
  result.hasDefaultDouble = NO;
  result.defaultDouble = 52000;
  return self;
}

- (BOOL) hasDefaultBool {
  return result.hasDefaultBool;
}
- (BOOL) defaultBool {
  return result.defaultBool;
}
- (TestAllTypes_Builder*) setDefaultBool:(BOOL) value {
  result.hasDefaultBool = YES;
  result.defaultBool = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultBool {
  result.hasDefaultBool = NO;
  result.defaultBool = YES;
  return self;
}

- (BOOL) hasDefaultString {
  return result.hasDefaultString;
}
- (NSString*) defaultString {
  return result.defaultString;
}
- (TestAllTypes_Builder*) setDefaultString:(NSString*) value {
  result.hasDefaultString = YES;
  result.defaultString = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultString {
  result.hasDefaultString = NO;
  result.defaultString = @"hello";
  return self;
}

- (BOOL) hasDefaultBytes {
  return result.hasDefaultBytes;
}
- (NSData*) defaultBytes {
  return result.defaultBytes;
}
- (TestAllTypes_Builder*) setDefaultBytes:(NSData*) value {
  result.hasDefaultBytes = YES;
  result.defaultBytes = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultBytes {
  result.hasDefaultBytes = NO;
  result.defaultBytes = ([[[TestAllTypes descriptor].fields objectAtIndex:62] defaultValue]);
  return self;
}

- (BOOL) hasDefaultNestedEnum {
  return result.hasDefaultNestedEnum;
}
- (TestAllTypes_NestedEnum*) defaultNestedEnum {
  return result.defaultNestedEnum;
}
- (TestAllTypes_Builder*) setDefaultNestedEnum:(TestAllTypes_NestedEnum*) value {
  result.hasDefaultNestedEnum = YES;
  result.defaultNestedEnum = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultNestedEnum {
  result.hasDefaultNestedEnum = NO;
  result.defaultNestedEnum = [TestAllTypes_NestedEnum BAR];
  return self;
}

- (BOOL) hasDefaultForeignEnum {
  return result.hasDefaultForeignEnum;
}
- (ForeignEnum*) defaultForeignEnum {
  return result.defaultForeignEnum;
}
- (TestAllTypes_Builder*) setDefaultForeignEnum:(ForeignEnum*) value {
  result.hasDefaultForeignEnum = YES;
  result.defaultForeignEnum = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultForeignEnum {
  result.hasDefaultForeignEnum = NO;
  result.defaultForeignEnum = [ForeignEnum FOREIGN_BAR];
  return self;
}

- (BOOL) hasDefaultImportEnum {
  return result.hasDefaultImportEnum;
}
- (ImportEnum*) defaultImportEnum {
  return result.defaultImportEnum;
}
- (TestAllTypes_Builder*) setDefaultImportEnum:(ImportEnum*) value {
  result.hasDefaultImportEnum = YES;
  result.defaultImportEnum = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultImportEnum {
  result.hasDefaultImportEnum = NO;
  result.defaultImportEnum = [ImportEnum IMPORT_BAR];
  return self;
}

- (BOOL) hasDefaultStringPiece {
  return result.hasDefaultStringPiece;
}
- (NSString*) defaultStringPiece {
  return result.defaultStringPiece;
}
- (TestAllTypes_Builder*) setDefaultStringPiece:(NSString*) value {
  result.hasDefaultStringPiece = YES;
  result.defaultStringPiece = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultStringPiece {
  result.hasDefaultStringPiece = NO;
  result.defaultStringPiece = @"abc";
  return self;
}

- (BOOL) hasDefaultCord {
  return result.hasDefaultCord;
}
- (NSString*) defaultCord {
  return result.defaultCord;
}
- (TestAllTypes_Builder*) setDefaultCord:(NSString*) value {
  result.hasDefaultCord = YES;
  result.defaultCord = value;
  return self;
}
- (TestAllTypes_Builder*) clearDefaultCord {
  result.hasDefaultCord = NO;
  result.defaultCord = @"123";
  return self;
}
@end

@interface ForeignMessage ()
@property BOOL hasC;
@property int32_t c;
@end

@implementation ForeignMessage

@synthesize hasC;
@synthesize c;
- (void) dealloc {
  self.hasC = NO;
  self.c = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.c = 0;
  }
  return self;
}
static ForeignMessage* defaultForeignMessageInstance = nil;
+ (void) initialize {
  if (self == [ForeignMessage class]) {
    defaultForeignMessageInstance = [[ForeignMessage alloc] init];
  }
}

+ (ForeignMessage*) defaultInstance {
  return defaultForeignMessageInstance;
}

- (ForeignMessage*) defaultInstanceForType {
  return defaultForeignMessageInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_ForeignMessage_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_ForeignMessage_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasC) {
    [output writeInt32:1 value:self.c];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasC) {
    size += computeInt32Size(1, self.c);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (ForeignMessage*) parseFromData:(NSData*) data {
  return (ForeignMessage*)[[[ForeignMessage newBuilder] mergeFromData:data] buildParsed];
}
+ (ForeignMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForeignMessage*)[[[ForeignMessage newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (ForeignMessage*) parseFromInputStream:(NSInputStream*) input {
  return (ForeignMessage*)[[[ForeignMessage newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (ForeignMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForeignMessage*)[[[ForeignMessage newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (ForeignMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ForeignMessage*)[[[ForeignMessage newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (ForeignMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ForeignMessage*)[[[ForeignMessage newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (ForeignMessage_Builder*) newBuilder { return [[[ForeignMessage_Builder alloc] init] autorelease]; }
- (ForeignMessage_Builder*) newBuilderForType { return [ForeignMessage newBuilder]; }
+ (ForeignMessage_Builder*) newBuilderWithForeignMessage:(ForeignMessage*) prototype {
  return [[ForeignMessage newBuilder] mergeFromForeignMessage:prototype];
}

@end

@implementation ForeignMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[ForeignMessage alloc] init] autorelease];
  }
  return self;
}
- (ForeignMessage*) internalGetResult {
  return result;
}

- (ForeignMessage_Builder*) clear {
  self.result = [[[ForeignMessage alloc] init] autorelease];
  return self;
}

- (ForeignMessage_Builder*) clone {
  return (ForeignMessage_Builder*)[[[[ForeignMessage_Builder alloc] init] autorelease] mergeFromForeignMessage:result];
}

- (PBDescriptor*) descriptorForType {
  return [ForeignMessage descriptor];
}

- (ForeignMessage*) defaultInstanceForType {
  return [ForeignMessage defaultInstance];
}

- (ForeignMessage*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (ForeignMessage*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (ForeignMessage*) buildPartial {
  ForeignMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (ForeignMessage_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[ForeignMessage class]]) {
    return [self mergeFromForeignMessage:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (ForeignMessage_Builder*) mergeFromForeignMessage:(ForeignMessage*) other {
  if (other == [ForeignMessage defaultInstance]) return self;
  if (other.hasC) {
    [self setC:other.c];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (ForeignMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (ForeignMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setC:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasC {
  return result.hasC;
}
- (int32_t) c {
  return result.c;
}
- (ForeignMessage_Builder*) setC:(int32_t) value {
  result.hasC = YES;
  result.c = value;
  return self;
}
- (ForeignMessage_Builder*) clearC {
  result.hasC = NO;
  result.c = 0;
  return self;
}
@end

@interface TestAllExtensions ()
@end

@implementation TestAllExtensions

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestAllExtensions* defaultTestAllExtensionsInstance = nil;
+ (void) initialize {
  if (self == [TestAllExtensions class]) {
    defaultTestAllExtensionsInstance = [[TestAllExtensions alloc] init];
  }
}

+ (TestAllExtensions*) defaultInstance {
  return defaultTestAllExtensionsInstance;
}

- (TestAllExtensions*) defaultInstanceForType {
  return defaultTestAllExtensionsInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllExtensions_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestAllExtensions_fieldAccessorTable];
}

- (BOOL) isInitialized {
  if (!self.extensionsAreInitialized) return false;
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  PBExtensionWriter* extensionWriter = [PBExtensionWriter writerWithExtensions:self.extensions];
  [extensionWriter writeUntil:536870912 output:output];
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestAllExtensions*) parseFromData:(NSData*) data {
  return (TestAllExtensions*)[[[TestAllExtensions newBuilder] mergeFromData:data] buildParsed];
}
+ (TestAllExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllExtensions*)[[[TestAllExtensions newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllExtensions*) parseFromInputStream:(NSInputStream*) input {
  return (TestAllExtensions*)[[[TestAllExtensions newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestAllExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllExtensions*)[[[TestAllExtensions newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestAllExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestAllExtensions*)[[[TestAllExtensions newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestAllExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestAllExtensions*)[[[TestAllExtensions newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestAllExtensions_Builder*) newBuilder { return [[[TestAllExtensions_Builder alloc] init] autorelease]; }
- (TestAllExtensions_Builder*) newBuilderForType { return [TestAllExtensions newBuilder]; }
+ (TestAllExtensions_Builder*) newBuilderWithTestAllExtensions:(TestAllExtensions*) prototype {
  return [[TestAllExtensions newBuilder] mergeFromTestAllExtensions:prototype];
}

@end

@implementation TestAllExtensions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestAllExtensions alloc] init] autorelease];
  }
  return self;
}
- (TestAllExtensions*) internalGetResult {
  return result;
}

- (TestAllExtensions_Builder*) clear {
  self.result = [[[TestAllExtensions alloc] init] autorelease];
  return self;
}

- (TestAllExtensions_Builder*) clone {
  return (TestAllExtensions_Builder*)[[[[TestAllExtensions_Builder alloc] init] autorelease] mergeFromTestAllExtensions:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestAllExtensions descriptor];
}

- (TestAllExtensions*) defaultInstanceForType {
  return [TestAllExtensions defaultInstance];
}

- (TestAllExtensions*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllExtensions*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestAllExtensions*) buildPartial {
  TestAllExtensions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestAllExtensions_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestAllExtensions class]]) {
    return [self mergeFromTestAllExtensions:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestAllExtensions_Builder*) mergeFromTestAllExtensions:(TestAllExtensions*) other {
  if (other == [TestAllExtensions defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestAllExtensions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestAllExtensions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@interface OptionalGroup_extension ()
@property BOOL hasA;
@property int32_t a;
@end

@implementation OptionalGroup_extension

@synthesize hasA;
@synthesize a;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static OptionalGroup_extension* defaultOptionalGroup_extensionInstance = nil;
+ (void) initialize {
  if (self == [OptionalGroup_extension class]) {
    defaultOptionalGroup_extensionInstance = [[OptionalGroup_extension alloc] init];
  }
}

+ (OptionalGroup_extension*) defaultInstance {
  return defaultOptionalGroup_extensionInstance;
}

- (OptionalGroup_extension*) defaultInstanceForType {
  return defaultOptionalGroup_extensionInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_OptionalGroup_extension_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_OptionalGroup_extension_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:17 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(17, self.a);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (OptionalGroup_extension*) parseFromData:(NSData*) data {
  return (OptionalGroup_extension*)[[[OptionalGroup_extension newBuilder] mergeFromData:data] buildParsed];
}
+ (OptionalGroup_extension*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OptionalGroup_extension*)[[[OptionalGroup_extension newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (OptionalGroup_extension*) parseFromInputStream:(NSInputStream*) input {
  return (OptionalGroup_extension*)[[[OptionalGroup_extension newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (OptionalGroup_extension*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OptionalGroup_extension*)[[[OptionalGroup_extension newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (OptionalGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (OptionalGroup_extension*)[[[OptionalGroup_extension newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (OptionalGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (OptionalGroup_extension*)[[[OptionalGroup_extension newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (OptionalGroup_extension_Builder*) newBuilder { return [[[OptionalGroup_extension_Builder alloc] init] autorelease]; }
- (OptionalGroup_extension_Builder*) newBuilderForType { return [OptionalGroup_extension newBuilder]; }
+ (OptionalGroup_extension_Builder*) newBuilderWithOptionalGroup_extension:(OptionalGroup_extension*) prototype {
  return [[OptionalGroup_extension newBuilder] mergeFromOptionalGroup_extension:prototype];
}

@end

@implementation OptionalGroup_extension_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[OptionalGroup_extension alloc] init] autorelease];
  }
  return self;
}
- (OptionalGroup_extension*) internalGetResult {
  return result;
}

- (OptionalGroup_extension_Builder*) clear {
  self.result = [[[OptionalGroup_extension alloc] init] autorelease];
  return self;
}

- (OptionalGroup_extension_Builder*) clone {
  return (OptionalGroup_extension_Builder*)[[[[OptionalGroup_extension_Builder alloc] init] autorelease] mergeFromOptionalGroup_extension:result];
}

- (PBDescriptor*) descriptorForType {
  return [OptionalGroup_extension descriptor];
}

- (OptionalGroup_extension*) defaultInstanceForType {
  return [OptionalGroup_extension defaultInstance];
}

- (OptionalGroup_extension*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (OptionalGroup_extension*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (OptionalGroup_extension*) buildPartial {
  OptionalGroup_extension* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (OptionalGroup_extension_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[OptionalGroup_extension class]]) {
    return [self mergeFromOptionalGroup_extension:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (OptionalGroup_extension_Builder*) mergeFromOptionalGroup_extension:(OptionalGroup_extension*) other {
  if (other == [OptionalGroup_extension defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (OptionalGroup_extension_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (OptionalGroup_extension_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 136: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (OptionalGroup_extension_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (OptionalGroup_extension_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}
@end

@interface RepeatedGroup_extension ()
@property BOOL hasA;
@property int32_t a;
@end

@implementation RepeatedGroup_extension

@synthesize hasA;
@synthesize a;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static RepeatedGroup_extension* defaultRepeatedGroup_extensionInstance = nil;
+ (void) initialize {
  if (self == [RepeatedGroup_extension class]) {
    defaultRepeatedGroup_extensionInstance = [[RepeatedGroup_extension alloc] init];
  }
}

+ (RepeatedGroup_extension*) defaultInstance {
  return defaultRepeatedGroup_extensionInstance;
}

- (RepeatedGroup_extension*) defaultInstanceForType {
  return defaultRepeatedGroup_extensionInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_RepeatedGroup_extension_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_RepeatedGroup_extension_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:47 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(47, self.a);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (RepeatedGroup_extension*) parseFromData:(NSData*) data {
  return (RepeatedGroup_extension*)[[[RepeatedGroup_extension newBuilder] mergeFromData:data] buildParsed];
}
+ (RepeatedGroup_extension*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RepeatedGroup_extension*)[[[RepeatedGroup_extension newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (RepeatedGroup_extension*) parseFromInputStream:(NSInputStream*) input {
  return (RepeatedGroup_extension*)[[[RepeatedGroup_extension newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (RepeatedGroup_extension*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RepeatedGroup_extension*)[[[RepeatedGroup_extension newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (RepeatedGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (RepeatedGroup_extension*)[[[RepeatedGroup_extension newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (RepeatedGroup_extension*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (RepeatedGroup_extension*)[[[RepeatedGroup_extension newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (RepeatedGroup_extension_Builder*) newBuilder { return [[[RepeatedGroup_extension_Builder alloc] init] autorelease]; }
- (RepeatedGroup_extension_Builder*) newBuilderForType { return [RepeatedGroup_extension newBuilder]; }
+ (RepeatedGroup_extension_Builder*) newBuilderWithRepeatedGroup_extension:(RepeatedGroup_extension*) prototype {
  return [[RepeatedGroup_extension newBuilder] mergeFromRepeatedGroup_extension:prototype];
}

@end

@implementation RepeatedGroup_extension_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[RepeatedGroup_extension alloc] init] autorelease];
  }
  return self;
}
- (RepeatedGroup_extension*) internalGetResult {
  return result;
}

- (RepeatedGroup_extension_Builder*) clear {
  self.result = [[[RepeatedGroup_extension alloc] init] autorelease];
  return self;
}

- (RepeatedGroup_extension_Builder*) clone {
  return (RepeatedGroup_extension_Builder*)[[[[RepeatedGroup_extension_Builder alloc] init] autorelease] mergeFromRepeatedGroup_extension:result];
}

- (PBDescriptor*) descriptorForType {
  return [RepeatedGroup_extension descriptor];
}

- (RepeatedGroup_extension*) defaultInstanceForType {
  return [RepeatedGroup_extension defaultInstance];
}

- (RepeatedGroup_extension*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (RepeatedGroup_extension*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (RepeatedGroup_extension*) buildPartial {
  RepeatedGroup_extension* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (RepeatedGroup_extension_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[RepeatedGroup_extension class]]) {
    return [self mergeFromRepeatedGroup_extension:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (RepeatedGroup_extension_Builder*) mergeFromRepeatedGroup_extension:(RepeatedGroup_extension*) other {
  if (other == [RepeatedGroup_extension defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (RepeatedGroup_extension_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (RepeatedGroup_extension_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 376: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (RepeatedGroup_extension_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (RepeatedGroup_extension_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}
@end

@interface TestRequired ()
@property BOOL hasA;
@property int32_t a;
@property BOOL hasDummy2;
@property int32_t dummy2;
@property BOOL hasB;
@property int32_t b;
@property BOOL hasDummy4;
@property int32_t dummy4;
@property BOOL hasDummy5;
@property int32_t dummy5;
@property BOOL hasDummy6;
@property int32_t dummy6;
@property BOOL hasDummy7;
@property int32_t dummy7;
@property BOOL hasDummy8;
@property int32_t dummy8;
@property BOOL hasDummy9;
@property int32_t dummy9;
@property BOOL hasDummy10;
@property int32_t dummy10;
@property BOOL hasDummy11;
@property int32_t dummy11;
@property BOOL hasDummy12;
@property int32_t dummy12;
@property BOOL hasDummy13;
@property int32_t dummy13;
@property BOOL hasDummy14;
@property int32_t dummy14;
@property BOOL hasDummy15;
@property int32_t dummy15;
@property BOOL hasDummy16;
@property int32_t dummy16;
@property BOOL hasDummy17;
@property int32_t dummy17;
@property BOOL hasDummy18;
@property int32_t dummy18;
@property BOOL hasDummy19;
@property int32_t dummy19;
@property BOOL hasDummy20;
@property int32_t dummy20;
@property BOOL hasDummy21;
@property int32_t dummy21;
@property BOOL hasDummy22;
@property int32_t dummy22;
@property BOOL hasDummy23;
@property int32_t dummy23;
@property BOOL hasDummy24;
@property int32_t dummy24;
@property BOOL hasDummy25;
@property int32_t dummy25;
@property BOOL hasDummy26;
@property int32_t dummy26;
@property BOOL hasDummy27;
@property int32_t dummy27;
@property BOOL hasDummy28;
@property int32_t dummy28;
@property BOOL hasDummy29;
@property int32_t dummy29;
@property BOOL hasDummy30;
@property int32_t dummy30;
@property BOOL hasDummy31;
@property int32_t dummy31;
@property BOOL hasDummy32;
@property int32_t dummy32;
@property BOOL hasC;
@property int32_t c;
@end

@implementation TestRequired

@synthesize hasA;
@synthesize a;
@synthesize hasDummy2;
@synthesize dummy2;
@synthesize hasB;
@synthesize b;
@synthesize hasDummy4;
@synthesize dummy4;
@synthesize hasDummy5;
@synthesize dummy5;
@synthesize hasDummy6;
@synthesize dummy6;
@synthesize hasDummy7;
@synthesize dummy7;
@synthesize hasDummy8;
@synthesize dummy8;
@synthesize hasDummy9;
@synthesize dummy9;
@synthesize hasDummy10;
@synthesize dummy10;
@synthesize hasDummy11;
@synthesize dummy11;
@synthesize hasDummy12;
@synthesize dummy12;
@synthesize hasDummy13;
@synthesize dummy13;
@synthesize hasDummy14;
@synthesize dummy14;
@synthesize hasDummy15;
@synthesize dummy15;
@synthesize hasDummy16;
@synthesize dummy16;
@synthesize hasDummy17;
@synthesize dummy17;
@synthesize hasDummy18;
@synthesize dummy18;
@synthesize hasDummy19;
@synthesize dummy19;
@synthesize hasDummy20;
@synthesize dummy20;
@synthesize hasDummy21;
@synthesize dummy21;
@synthesize hasDummy22;
@synthesize dummy22;
@synthesize hasDummy23;
@synthesize dummy23;
@synthesize hasDummy24;
@synthesize dummy24;
@synthesize hasDummy25;
@synthesize dummy25;
@synthesize hasDummy26;
@synthesize dummy26;
@synthesize hasDummy27;
@synthesize dummy27;
@synthesize hasDummy28;
@synthesize dummy28;
@synthesize hasDummy29;
@synthesize dummy29;
@synthesize hasDummy30;
@synthesize dummy30;
@synthesize hasDummy31;
@synthesize dummy31;
@synthesize hasDummy32;
@synthesize dummy32;
@synthesize hasC;
@synthesize c;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  self.hasDummy2 = NO;
  self.dummy2 = 0;
  self.hasB = NO;
  self.b = 0;
  self.hasDummy4 = NO;
  self.dummy4 = 0;
  self.hasDummy5 = NO;
  self.dummy5 = 0;
  self.hasDummy6 = NO;
  self.dummy6 = 0;
  self.hasDummy7 = NO;
  self.dummy7 = 0;
  self.hasDummy8 = NO;
  self.dummy8 = 0;
  self.hasDummy9 = NO;
  self.dummy9 = 0;
  self.hasDummy10 = NO;
  self.dummy10 = 0;
  self.hasDummy11 = NO;
  self.dummy11 = 0;
  self.hasDummy12 = NO;
  self.dummy12 = 0;
  self.hasDummy13 = NO;
  self.dummy13 = 0;
  self.hasDummy14 = NO;
  self.dummy14 = 0;
  self.hasDummy15 = NO;
  self.dummy15 = 0;
  self.hasDummy16 = NO;
  self.dummy16 = 0;
  self.hasDummy17 = NO;
  self.dummy17 = 0;
  self.hasDummy18 = NO;
  self.dummy18 = 0;
  self.hasDummy19 = NO;
  self.dummy19 = 0;
  self.hasDummy20 = NO;
  self.dummy20 = 0;
  self.hasDummy21 = NO;
  self.dummy21 = 0;
  self.hasDummy22 = NO;
  self.dummy22 = 0;
  self.hasDummy23 = NO;
  self.dummy23 = 0;
  self.hasDummy24 = NO;
  self.dummy24 = 0;
  self.hasDummy25 = NO;
  self.dummy25 = 0;
  self.hasDummy26 = NO;
  self.dummy26 = 0;
  self.hasDummy27 = NO;
  self.dummy27 = 0;
  self.hasDummy28 = NO;
  self.dummy28 = 0;
  self.hasDummy29 = NO;
  self.dummy29 = 0;
  self.hasDummy30 = NO;
  self.dummy30 = 0;
  self.hasDummy31 = NO;
  self.dummy31 = 0;
  self.hasDummy32 = NO;
  self.dummy32 = 0;
  self.hasC = NO;
  self.c = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
    self.dummy2 = 0;
    self.b = 0;
    self.dummy4 = 0;
    self.dummy5 = 0;
    self.dummy6 = 0;
    self.dummy7 = 0;
    self.dummy8 = 0;
    self.dummy9 = 0;
    self.dummy10 = 0;
    self.dummy11 = 0;
    self.dummy12 = 0;
    self.dummy13 = 0;
    self.dummy14 = 0;
    self.dummy15 = 0;
    self.dummy16 = 0;
    self.dummy17 = 0;
    self.dummy18 = 0;
    self.dummy19 = 0;
    self.dummy20 = 0;
    self.dummy21 = 0;
    self.dummy22 = 0;
    self.dummy23 = 0;
    self.dummy24 = 0;
    self.dummy25 = 0;
    self.dummy26 = 0;
    self.dummy27 = 0;
    self.dummy28 = 0;
    self.dummy29 = 0;
    self.dummy30 = 0;
    self.dummy31 = 0;
    self.dummy32 = 0;
    self.c = 0;
  }
  return self;
}
static PBGeneratedExtension* TestRequired_single = nil;
static PBGeneratedExtension* TestRequired_multi = nil;
static TestRequired* defaultTestRequiredInstance = nil;
+ (void) initialize {
  if (self == [TestRequired class]) {
    defaultTestRequiredInstance = [[TestRequired alloc] init];
     TestRequired_single = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:0]
                                                       type:[TestRequired class]] retain];
     TestRequired_multi = [[PBGeneratedExtension extensionWithDescriptor:[[self descriptor].extensions objectAtIndex:1]
                                                       type:[TestRequired class]] retain];
  }
}

+ (TestRequired*) defaultInstance {
  return defaultTestRequiredInstance;
}

- (TestRequired*) defaultInstanceForType {
  return defaultTestRequiredInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestRequired_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestRequired_fieldAccessorTable];
}


































- (BOOL) isInitialized {
  if (!self.hasA) return false;
  if (!self.hasB) return false;
  if (!self.hasC) return false;
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:1 value:self.a];
  }
  if (hasDummy2) {
    [output writeInt32:2 value:self.dummy2];
  }
  if (hasB) {
    [output writeInt32:3 value:self.b];
  }
  if (hasDummy4) {
    [output writeInt32:4 value:self.dummy4];
  }
  if (hasDummy5) {
    [output writeInt32:5 value:self.dummy5];
  }
  if (hasDummy6) {
    [output writeInt32:6 value:self.dummy6];
  }
  if (hasDummy7) {
    [output writeInt32:7 value:self.dummy7];
  }
  if (hasDummy8) {
    [output writeInt32:8 value:self.dummy8];
  }
  if (hasDummy9) {
    [output writeInt32:9 value:self.dummy9];
  }
  if (hasDummy10) {
    [output writeInt32:10 value:self.dummy10];
  }
  if (hasDummy11) {
    [output writeInt32:11 value:self.dummy11];
  }
  if (hasDummy12) {
    [output writeInt32:12 value:self.dummy12];
  }
  if (hasDummy13) {
    [output writeInt32:13 value:self.dummy13];
  }
  if (hasDummy14) {
    [output writeInt32:14 value:self.dummy14];
  }
  if (hasDummy15) {
    [output writeInt32:15 value:self.dummy15];
  }
  if (hasDummy16) {
    [output writeInt32:16 value:self.dummy16];
  }
  if (hasDummy17) {
    [output writeInt32:17 value:self.dummy17];
  }
  if (hasDummy18) {
    [output writeInt32:18 value:self.dummy18];
  }
  if (hasDummy19) {
    [output writeInt32:19 value:self.dummy19];
  }
  if (hasDummy20) {
    [output writeInt32:20 value:self.dummy20];
  }
  if (hasDummy21) {
    [output writeInt32:21 value:self.dummy21];
  }
  if (hasDummy22) {
    [output writeInt32:22 value:self.dummy22];
  }
  if (hasDummy23) {
    [output writeInt32:23 value:self.dummy23];
  }
  if (hasDummy24) {
    [output writeInt32:24 value:self.dummy24];
  }
  if (hasDummy25) {
    [output writeInt32:25 value:self.dummy25];
  }
  if (hasDummy26) {
    [output writeInt32:26 value:self.dummy26];
  }
  if (hasDummy27) {
    [output writeInt32:27 value:self.dummy27];
  }
  if (hasDummy28) {
    [output writeInt32:28 value:self.dummy28];
  }
  if (hasDummy29) {
    [output writeInt32:29 value:self.dummy29];
  }
  if (hasDummy30) {
    [output writeInt32:30 value:self.dummy30];
  }
  if (hasDummy31) {
    [output writeInt32:31 value:self.dummy31];
  }
  if (hasDummy32) {
    [output writeInt32:32 value:self.dummy32];
  }
  if (hasC) {
    [output writeInt32:33 value:self.c];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(1, self.a);
  }
  if (hasDummy2) {
    size += computeInt32Size(2, self.dummy2);
  }
  if (hasB) {
    size += computeInt32Size(3, self.b);
  }
  if (hasDummy4) {
    size += computeInt32Size(4, self.dummy4);
  }
  if (hasDummy5) {
    size += computeInt32Size(5, self.dummy5);
  }
  if (hasDummy6) {
    size += computeInt32Size(6, self.dummy6);
  }
  if (hasDummy7) {
    size += computeInt32Size(7, self.dummy7);
  }
  if (hasDummy8) {
    size += computeInt32Size(8, self.dummy8);
  }
  if (hasDummy9) {
    size += computeInt32Size(9, self.dummy9);
  }
  if (hasDummy10) {
    size += computeInt32Size(10, self.dummy10);
  }
  if (hasDummy11) {
    size += computeInt32Size(11, self.dummy11);
  }
  if (hasDummy12) {
    size += computeInt32Size(12, self.dummy12);
  }
  if (hasDummy13) {
    size += computeInt32Size(13, self.dummy13);
  }
  if (hasDummy14) {
    size += computeInt32Size(14, self.dummy14);
  }
  if (hasDummy15) {
    size += computeInt32Size(15, self.dummy15);
  }
  if (hasDummy16) {
    size += computeInt32Size(16, self.dummy16);
  }
  if (hasDummy17) {
    size += computeInt32Size(17, self.dummy17);
  }
  if (hasDummy18) {
    size += computeInt32Size(18, self.dummy18);
  }
  if (hasDummy19) {
    size += computeInt32Size(19, self.dummy19);
  }
  if (hasDummy20) {
    size += computeInt32Size(20, self.dummy20);
  }
  if (hasDummy21) {
    size += computeInt32Size(21, self.dummy21);
  }
  if (hasDummy22) {
    size += computeInt32Size(22, self.dummy22);
  }
  if (hasDummy23) {
    size += computeInt32Size(23, self.dummy23);
  }
  if (hasDummy24) {
    size += computeInt32Size(24, self.dummy24);
  }
  if (hasDummy25) {
    size += computeInt32Size(25, self.dummy25);
  }
  if (hasDummy26) {
    size += computeInt32Size(26, self.dummy26);
  }
  if (hasDummy27) {
    size += computeInt32Size(27, self.dummy27);
  }
  if (hasDummy28) {
    size += computeInt32Size(28, self.dummy28);
  }
  if (hasDummy29) {
    size += computeInt32Size(29, self.dummy29);
  }
  if (hasDummy30) {
    size += computeInt32Size(30, self.dummy30);
  }
  if (hasDummy31) {
    size += computeInt32Size(31, self.dummy31);
  }
  if (hasDummy32) {
    size += computeInt32Size(32, self.dummy32);
  }
  if (hasC) {
    size += computeInt32Size(33, self.c);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestRequired*) parseFromData:(NSData*) data {
  return (TestRequired*)[[[TestRequired newBuilder] mergeFromData:data] buildParsed];
}
+ (TestRequired*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRequired*)[[[TestRequired newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestRequired*) parseFromInputStream:(NSInputStream*) input {
  return (TestRequired*)[[[TestRequired newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestRequired*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRequired*)[[[TestRequired newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestRequired*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestRequired*)[[[TestRequired newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestRequired*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRequired*)[[[TestRequired newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestRequired_Builder*) newBuilder { return [[[TestRequired_Builder alloc] init] autorelease]; }
- (TestRequired_Builder*) newBuilderForType { return [TestRequired newBuilder]; }
+ (TestRequired_Builder*) newBuilderWithTestRequired:(TestRequired*) prototype {
  return [[TestRequired newBuilder] mergeFromTestRequired:prototype];
}

@end

@implementation TestRequired_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestRequired alloc] init] autorelease];
  }
  return self;
}
- (TestRequired*) internalGetResult {
  return result;
}

- (TestRequired_Builder*) clear {
  self.result = [[[TestRequired alloc] init] autorelease];
  return self;
}

- (TestRequired_Builder*) clone {
  return (TestRequired_Builder*)[[[[TestRequired_Builder alloc] init] autorelease] mergeFromTestRequired:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestRequired descriptor];
}

- (TestRequired*) defaultInstanceForType {
  return [TestRequired defaultInstance];
}

- (TestRequired*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestRequired*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestRequired*) buildPartial {
  TestRequired* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestRequired_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestRequired class]]) {
    return [self mergeFromTestRequired:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestRequired_Builder*) mergeFromTestRequired:(TestRequired*) other {
  if (other == [TestRequired defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  if (other.hasDummy2) {
    [self setDummy2:other.dummy2];
  }
  if (other.hasB) {
    [self setB:other.b];
  }
  if (other.hasDummy4) {
    [self setDummy4:other.dummy4];
  }
  if (other.hasDummy5) {
    [self setDummy5:other.dummy5];
  }
  if (other.hasDummy6) {
    [self setDummy6:other.dummy6];
  }
  if (other.hasDummy7) {
    [self setDummy7:other.dummy7];
  }
  if (other.hasDummy8) {
    [self setDummy8:other.dummy8];
  }
  if (other.hasDummy9) {
    [self setDummy9:other.dummy9];
  }
  if (other.hasDummy10) {
    [self setDummy10:other.dummy10];
  }
  if (other.hasDummy11) {
    [self setDummy11:other.dummy11];
  }
  if (other.hasDummy12) {
    [self setDummy12:other.dummy12];
  }
  if (other.hasDummy13) {
    [self setDummy13:other.dummy13];
  }
  if (other.hasDummy14) {
    [self setDummy14:other.dummy14];
  }
  if (other.hasDummy15) {
    [self setDummy15:other.dummy15];
  }
  if (other.hasDummy16) {
    [self setDummy16:other.dummy16];
  }
  if (other.hasDummy17) {
    [self setDummy17:other.dummy17];
  }
  if (other.hasDummy18) {
    [self setDummy18:other.dummy18];
  }
  if (other.hasDummy19) {
    [self setDummy19:other.dummy19];
  }
  if (other.hasDummy20) {
    [self setDummy20:other.dummy20];
  }
  if (other.hasDummy21) {
    [self setDummy21:other.dummy21];
  }
  if (other.hasDummy22) {
    [self setDummy22:other.dummy22];
  }
  if (other.hasDummy23) {
    [self setDummy23:other.dummy23];
  }
  if (other.hasDummy24) {
    [self setDummy24:other.dummy24];
  }
  if (other.hasDummy25) {
    [self setDummy25:other.dummy25];
  }
  if (other.hasDummy26) {
    [self setDummy26:other.dummy26];
  }
  if (other.hasDummy27) {
    [self setDummy27:other.dummy27];
  }
  if (other.hasDummy28) {
    [self setDummy28:other.dummy28];
  }
  if (other.hasDummy29) {
    [self setDummy29:other.dummy29];
  }
  if (other.hasDummy30) {
    [self setDummy30:other.dummy30];
  }
  if (other.hasDummy31) {
    [self setDummy31:other.dummy31];
  }
  if (other.hasDummy32) {
    [self setDummy32:other.dummy32];
  }
  if (other.hasC) {
    [self setC:other.c];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestRequired_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestRequired_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setA:[input readInt32]];
        break;
      }
      case 16: {
        [self setDummy2:[input readInt32]];
        break;
      }
      case 24: {
        [self setB:[input readInt32]];
        break;
      }
      case 32: {
        [self setDummy4:[input readInt32]];
        break;
      }
      case 40: {
        [self setDummy5:[input readInt32]];
        break;
      }
      case 48: {
        [self setDummy6:[input readInt32]];
        break;
      }
      case 56: {
        [self setDummy7:[input readInt32]];
        break;
      }
      case 64: {
        [self setDummy8:[input readInt32]];
        break;
      }
      case 72: {
        [self setDummy9:[input readInt32]];
        break;
      }
      case 80: {
        [self setDummy10:[input readInt32]];
        break;
      }
      case 88: {
        [self setDummy11:[input readInt32]];
        break;
      }
      case 96: {
        [self setDummy12:[input readInt32]];
        break;
      }
      case 104: {
        [self setDummy13:[input readInt32]];
        break;
      }
      case 112: {
        [self setDummy14:[input readInt32]];
        break;
      }
      case 120: {
        [self setDummy15:[input readInt32]];
        break;
      }
      case 128: {
        [self setDummy16:[input readInt32]];
        break;
      }
      case 136: {
        [self setDummy17:[input readInt32]];
        break;
      }
      case 144: {
        [self setDummy18:[input readInt32]];
        break;
      }
      case 152: {
        [self setDummy19:[input readInt32]];
        break;
      }
      case 160: {
        [self setDummy20:[input readInt32]];
        break;
      }
      case 168: {
        [self setDummy21:[input readInt32]];
        break;
      }
      case 176: {
        [self setDummy22:[input readInt32]];
        break;
      }
      case 184: {
        [self setDummy23:[input readInt32]];
        break;
      }
      case 192: {
        [self setDummy24:[input readInt32]];
        break;
      }
      case 200: {
        [self setDummy25:[input readInt32]];
        break;
      }
      case 208: {
        [self setDummy26:[input readInt32]];
        break;
      }
      case 216: {
        [self setDummy27:[input readInt32]];
        break;
      }
      case 224: {
        [self setDummy28:[input readInt32]];
        break;
      }
      case 232: {
        [self setDummy29:[input readInt32]];
        break;
      }
      case 240: {
        [self setDummy30:[input readInt32]];
        break;
      }
      case 248: {
        [self setDummy31:[input readInt32]];
        break;
      }
      case 256: {
        [self setDummy32:[input readInt32]];
        break;
      }
      case 264: {
        [self setC:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestRequired_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestRequired_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}

- (BOOL) hasDummy2 {
  return result.hasDummy2;
}
- (int32_t) dummy2 {
  return result.dummy2;
}
- (TestRequired_Builder*) setDummy2:(int32_t) value {
  result.hasDummy2 = YES;
  result.dummy2 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy2 {
  result.hasDummy2 = NO;
  result.dummy2 = 0;
  return self;
}

- (BOOL) hasB {
  return result.hasB;
}
- (int32_t) b {
  return result.b;
}
- (TestRequired_Builder*) setB:(int32_t) value {
  result.hasB = YES;
  result.b = value;
  return self;
}
- (TestRequired_Builder*) clearB {
  result.hasB = NO;
  result.b = 0;
  return self;
}

- (BOOL) hasDummy4 {
  return result.hasDummy4;
}
- (int32_t) dummy4 {
  return result.dummy4;
}
- (TestRequired_Builder*) setDummy4:(int32_t) value {
  result.hasDummy4 = YES;
  result.dummy4 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy4 {
  result.hasDummy4 = NO;
  result.dummy4 = 0;
  return self;
}

- (BOOL) hasDummy5 {
  return result.hasDummy5;
}
- (int32_t) dummy5 {
  return result.dummy5;
}
- (TestRequired_Builder*) setDummy5:(int32_t) value {
  result.hasDummy5 = YES;
  result.dummy5 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy5 {
  result.hasDummy5 = NO;
  result.dummy5 = 0;
  return self;
}

- (BOOL) hasDummy6 {
  return result.hasDummy6;
}
- (int32_t) dummy6 {
  return result.dummy6;
}
- (TestRequired_Builder*) setDummy6:(int32_t) value {
  result.hasDummy6 = YES;
  result.dummy6 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy6 {
  result.hasDummy6 = NO;
  result.dummy6 = 0;
  return self;
}

- (BOOL) hasDummy7 {
  return result.hasDummy7;
}
- (int32_t) dummy7 {
  return result.dummy7;
}
- (TestRequired_Builder*) setDummy7:(int32_t) value {
  result.hasDummy7 = YES;
  result.dummy7 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy7 {
  result.hasDummy7 = NO;
  result.dummy7 = 0;
  return self;
}

- (BOOL) hasDummy8 {
  return result.hasDummy8;
}
- (int32_t) dummy8 {
  return result.dummy8;
}
- (TestRequired_Builder*) setDummy8:(int32_t) value {
  result.hasDummy8 = YES;
  result.dummy8 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy8 {
  result.hasDummy8 = NO;
  result.dummy8 = 0;
  return self;
}

- (BOOL) hasDummy9 {
  return result.hasDummy9;
}
- (int32_t) dummy9 {
  return result.dummy9;
}
- (TestRequired_Builder*) setDummy9:(int32_t) value {
  result.hasDummy9 = YES;
  result.dummy9 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy9 {
  result.hasDummy9 = NO;
  result.dummy9 = 0;
  return self;
}

- (BOOL) hasDummy10 {
  return result.hasDummy10;
}
- (int32_t) dummy10 {
  return result.dummy10;
}
- (TestRequired_Builder*) setDummy10:(int32_t) value {
  result.hasDummy10 = YES;
  result.dummy10 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy10 {
  result.hasDummy10 = NO;
  result.dummy10 = 0;
  return self;
}

- (BOOL) hasDummy11 {
  return result.hasDummy11;
}
- (int32_t) dummy11 {
  return result.dummy11;
}
- (TestRequired_Builder*) setDummy11:(int32_t) value {
  result.hasDummy11 = YES;
  result.dummy11 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy11 {
  result.hasDummy11 = NO;
  result.dummy11 = 0;
  return self;
}

- (BOOL) hasDummy12 {
  return result.hasDummy12;
}
- (int32_t) dummy12 {
  return result.dummy12;
}
- (TestRequired_Builder*) setDummy12:(int32_t) value {
  result.hasDummy12 = YES;
  result.dummy12 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy12 {
  result.hasDummy12 = NO;
  result.dummy12 = 0;
  return self;
}

- (BOOL) hasDummy13 {
  return result.hasDummy13;
}
- (int32_t) dummy13 {
  return result.dummy13;
}
- (TestRequired_Builder*) setDummy13:(int32_t) value {
  result.hasDummy13 = YES;
  result.dummy13 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy13 {
  result.hasDummy13 = NO;
  result.dummy13 = 0;
  return self;
}

- (BOOL) hasDummy14 {
  return result.hasDummy14;
}
- (int32_t) dummy14 {
  return result.dummy14;
}
- (TestRequired_Builder*) setDummy14:(int32_t) value {
  result.hasDummy14 = YES;
  result.dummy14 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy14 {
  result.hasDummy14 = NO;
  result.dummy14 = 0;
  return self;
}

- (BOOL) hasDummy15 {
  return result.hasDummy15;
}
- (int32_t) dummy15 {
  return result.dummy15;
}
- (TestRequired_Builder*) setDummy15:(int32_t) value {
  result.hasDummy15 = YES;
  result.dummy15 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy15 {
  result.hasDummy15 = NO;
  result.dummy15 = 0;
  return self;
}

- (BOOL) hasDummy16 {
  return result.hasDummy16;
}
- (int32_t) dummy16 {
  return result.dummy16;
}
- (TestRequired_Builder*) setDummy16:(int32_t) value {
  result.hasDummy16 = YES;
  result.dummy16 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy16 {
  result.hasDummy16 = NO;
  result.dummy16 = 0;
  return self;
}

- (BOOL) hasDummy17 {
  return result.hasDummy17;
}
- (int32_t) dummy17 {
  return result.dummy17;
}
- (TestRequired_Builder*) setDummy17:(int32_t) value {
  result.hasDummy17 = YES;
  result.dummy17 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy17 {
  result.hasDummy17 = NO;
  result.dummy17 = 0;
  return self;
}

- (BOOL) hasDummy18 {
  return result.hasDummy18;
}
- (int32_t) dummy18 {
  return result.dummy18;
}
- (TestRequired_Builder*) setDummy18:(int32_t) value {
  result.hasDummy18 = YES;
  result.dummy18 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy18 {
  result.hasDummy18 = NO;
  result.dummy18 = 0;
  return self;
}

- (BOOL) hasDummy19 {
  return result.hasDummy19;
}
- (int32_t) dummy19 {
  return result.dummy19;
}
- (TestRequired_Builder*) setDummy19:(int32_t) value {
  result.hasDummy19 = YES;
  result.dummy19 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy19 {
  result.hasDummy19 = NO;
  result.dummy19 = 0;
  return self;
}

- (BOOL) hasDummy20 {
  return result.hasDummy20;
}
- (int32_t) dummy20 {
  return result.dummy20;
}
- (TestRequired_Builder*) setDummy20:(int32_t) value {
  result.hasDummy20 = YES;
  result.dummy20 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy20 {
  result.hasDummy20 = NO;
  result.dummy20 = 0;
  return self;
}

- (BOOL) hasDummy21 {
  return result.hasDummy21;
}
- (int32_t) dummy21 {
  return result.dummy21;
}
- (TestRequired_Builder*) setDummy21:(int32_t) value {
  result.hasDummy21 = YES;
  result.dummy21 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy21 {
  result.hasDummy21 = NO;
  result.dummy21 = 0;
  return self;
}

- (BOOL) hasDummy22 {
  return result.hasDummy22;
}
- (int32_t) dummy22 {
  return result.dummy22;
}
- (TestRequired_Builder*) setDummy22:(int32_t) value {
  result.hasDummy22 = YES;
  result.dummy22 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy22 {
  result.hasDummy22 = NO;
  result.dummy22 = 0;
  return self;
}

- (BOOL) hasDummy23 {
  return result.hasDummy23;
}
- (int32_t) dummy23 {
  return result.dummy23;
}
- (TestRequired_Builder*) setDummy23:(int32_t) value {
  result.hasDummy23 = YES;
  result.dummy23 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy23 {
  result.hasDummy23 = NO;
  result.dummy23 = 0;
  return self;
}

- (BOOL) hasDummy24 {
  return result.hasDummy24;
}
- (int32_t) dummy24 {
  return result.dummy24;
}
- (TestRequired_Builder*) setDummy24:(int32_t) value {
  result.hasDummy24 = YES;
  result.dummy24 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy24 {
  result.hasDummy24 = NO;
  result.dummy24 = 0;
  return self;
}

- (BOOL) hasDummy25 {
  return result.hasDummy25;
}
- (int32_t) dummy25 {
  return result.dummy25;
}
- (TestRequired_Builder*) setDummy25:(int32_t) value {
  result.hasDummy25 = YES;
  result.dummy25 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy25 {
  result.hasDummy25 = NO;
  result.dummy25 = 0;
  return self;
}

- (BOOL) hasDummy26 {
  return result.hasDummy26;
}
- (int32_t) dummy26 {
  return result.dummy26;
}
- (TestRequired_Builder*) setDummy26:(int32_t) value {
  result.hasDummy26 = YES;
  result.dummy26 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy26 {
  result.hasDummy26 = NO;
  result.dummy26 = 0;
  return self;
}

- (BOOL) hasDummy27 {
  return result.hasDummy27;
}
- (int32_t) dummy27 {
  return result.dummy27;
}
- (TestRequired_Builder*) setDummy27:(int32_t) value {
  result.hasDummy27 = YES;
  result.dummy27 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy27 {
  result.hasDummy27 = NO;
  result.dummy27 = 0;
  return self;
}

- (BOOL) hasDummy28 {
  return result.hasDummy28;
}
- (int32_t) dummy28 {
  return result.dummy28;
}
- (TestRequired_Builder*) setDummy28:(int32_t) value {
  result.hasDummy28 = YES;
  result.dummy28 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy28 {
  result.hasDummy28 = NO;
  result.dummy28 = 0;
  return self;
}

- (BOOL) hasDummy29 {
  return result.hasDummy29;
}
- (int32_t) dummy29 {
  return result.dummy29;
}
- (TestRequired_Builder*) setDummy29:(int32_t) value {
  result.hasDummy29 = YES;
  result.dummy29 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy29 {
  result.hasDummy29 = NO;
  result.dummy29 = 0;
  return self;
}

- (BOOL) hasDummy30 {
  return result.hasDummy30;
}
- (int32_t) dummy30 {
  return result.dummy30;
}
- (TestRequired_Builder*) setDummy30:(int32_t) value {
  result.hasDummy30 = YES;
  result.dummy30 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy30 {
  result.hasDummy30 = NO;
  result.dummy30 = 0;
  return self;
}

- (BOOL) hasDummy31 {
  return result.hasDummy31;
}
- (int32_t) dummy31 {
  return result.dummy31;
}
- (TestRequired_Builder*) setDummy31:(int32_t) value {
  result.hasDummy31 = YES;
  result.dummy31 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy31 {
  result.hasDummy31 = NO;
  result.dummy31 = 0;
  return self;
}

- (BOOL) hasDummy32 {
  return result.hasDummy32;
}
- (int32_t) dummy32 {
  return result.dummy32;
}
- (TestRequired_Builder*) setDummy32:(int32_t) value {
  result.hasDummy32 = YES;
  result.dummy32 = value;
  return self;
}
- (TestRequired_Builder*) clearDummy32 {
  result.hasDummy32 = NO;
  result.dummy32 = 0;
  return self;
}

- (BOOL) hasC {
  return result.hasC;
}
- (int32_t) c {
  return result.c;
}
- (TestRequired_Builder*) setC:(int32_t) value {
  result.hasC = YES;
  result.c = value;
  return self;
}
- (TestRequired_Builder*) clearC {
  result.hasC = NO;
  result.c = 0;
  return self;
}
@end

@interface TestRequiredForeign ()
@property BOOL hasOptionalMessage;
@property (retain) TestRequired* optionalMessage;
@property (retain) NSMutableArray* mutableRepeatedMessageList;
@property BOOL hasDummy;
@property int32_t dummy;
@end

@implementation TestRequiredForeign

@synthesize hasOptionalMessage;
@synthesize optionalMessage;
@synthesize mutableRepeatedMessageList;
@synthesize hasDummy;
@synthesize dummy;
- (void) dealloc {
  self.hasOptionalMessage = NO;
  self.optionalMessage = nil;
  self.mutableRepeatedMessageList = nil;
  self.hasDummy = NO;
  self.dummy = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.dummy = 0;
  }
  return self;
}
static TestRequiredForeign* defaultTestRequiredForeignInstance = nil;
+ (void) initialize {
  if (self == [TestRequiredForeign class]) {
    defaultTestRequiredForeignInstance = [[TestRequiredForeign alloc] init];
  }
}

+ (TestRequiredForeign*) defaultInstance {
  return defaultTestRequiredForeignInstance;
}

- (TestRequiredForeign*) defaultInstanceForType {
  return defaultTestRequiredForeignInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestRequiredForeign_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestRequiredForeign_fieldAccessorTable];
}


- (NSArray*) repeatedMessageList {
  return mutableRepeatedMessageList;
}
- (TestRequired*) repeatedMessageAtIndex:(int32_t) index {
  id value = [mutableRepeatedMessageList objectAtIndex:index];
  return value;
}


- (BOOL) isInitialized {
  if (self.hasOptionalMessage) {
    if (!self.optionalMessage.isInitialized) return false;
  }
  for (TestRequired* element in self.repeatedMessageList) {
    if (!element.isInitialized) return false;
  }
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOptionalMessage) {
    [output writeMessage:1 value:self.optionalMessage];
  }
  for (TestRequired* element in self.repeatedMessageList) {
    [output writeMessage:2 value:element];
  }
  if (hasDummy) {
    [output writeInt32:3 value:self.dummy];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (self.hasOptionalMessage) {
    size += computeMessageSize(1, self.optionalMessage);
  }
  for (TestRequired* element in self.repeatedMessageList) {
    size += computeMessageSize(2, element);
  }
  if (hasDummy) {
    size += computeInt32Size(3, self.dummy);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestRequiredForeign*) parseFromData:(NSData*) data {
  return (TestRequiredForeign*)[[[TestRequiredForeign newBuilder] mergeFromData:data] buildParsed];
}
+ (TestRequiredForeign*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRequiredForeign*)[[[TestRequiredForeign newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestRequiredForeign*) parseFromInputStream:(NSInputStream*) input {
  return (TestRequiredForeign*)[[[TestRequiredForeign newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestRequiredForeign*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRequiredForeign*)[[[TestRequiredForeign newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestRequiredForeign*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestRequiredForeign*)[[[TestRequiredForeign newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestRequiredForeign*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRequiredForeign*)[[[TestRequiredForeign newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestRequiredForeign_Builder*) newBuilder { return [[[TestRequiredForeign_Builder alloc] init] autorelease]; }
- (TestRequiredForeign_Builder*) newBuilderForType { return [TestRequiredForeign newBuilder]; }
+ (TestRequiredForeign_Builder*) newBuilderWithTestRequiredForeign:(TestRequiredForeign*) prototype {
  return [[TestRequiredForeign newBuilder] mergeFromTestRequiredForeign:prototype];
}

@end

@implementation TestRequiredForeign_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestRequiredForeign alloc] init] autorelease];
  }
  return self;
}
- (TestRequiredForeign*) internalGetResult {
  return result;
}

- (TestRequiredForeign_Builder*) clear {
  self.result = [[[TestRequiredForeign alloc] init] autorelease];
  return self;
}

- (TestRequiredForeign_Builder*) clone {
  return (TestRequiredForeign_Builder*)[[[[TestRequiredForeign_Builder alloc] init] autorelease] mergeFromTestRequiredForeign:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestRequiredForeign descriptor];
}

- (TestRequiredForeign*) defaultInstanceForType {
  return [TestRequiredForeign defaultInstance];
}

- (TestRequiredForeign*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestRequiredForeign*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestRequiredForeign*) buildPartial {
  TestRequiredForeign* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestRequiredForeign_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestRequiredForeign class]]) {
    return [self mergeFromTestRequiredForeign:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestRequiredForeign_Builder*) mergeFromTestRequiredForeign:(TestRequiredForeign*) other {
  if (other == [TestRequiredForeign defaultInstance]) return self;
  if (other.hasOptionalMessage) {
    [self mergeOptionalMessage:other.optionalMessage];
  }
  if (other.mutableRepeatedMessageList.count > 0) {
    if (result.mutableRepeatedMessageList == nil) {
      result.mutableRepeatedMessageList = [NSMutableArray array];
    }
    [result.mutableRepeatedMessageList addObjectsFromArray:other.mutableRepeatedMessageList];
  }
  if (other.hasDummy) {
    [self setDummy:other.dummy];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestRequiredForeign_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestRequiredForeign_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestRequired_Builder* subBuilder = [TestRequired newBuilder];
        if (self.hasOptionalMessage) {
          [subBuilder mergeFromTestRequired:self.optionalMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalMessage:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        TestRequired_Builder* subBuilder = [TestRequired newBuilder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedMessage:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setDummy:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasOptionalMessage {
  return result.hasOptionalMessage;
}
- (TestRequired*) optionalMessage {
  return result.optionalMessage;
}
- (id<PBMessage_Builder>) setOptionalMessage:(TestRequired*) value {
  result.hasOptionalMessage = YES;
  result.optionalMessage = value;
  return self;
}
- (id<PBMessage_Builder>) setOptionalMessageBuilder:(TestRequired_Builder*) builderForValue {
  return [self setOptionalMessage:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeOptionalMessage:(TestRequired*) value {
  if (result.hasOptionalMessage &&
      result.optionalMessage != [TestRequired defaultInstance]) {
    result.optionalMessage =
      [[[TestRequired newBuilderWithTestRequired:result.optionalMessage] mergeFromTestRequired:value] buildPartial];
  } else {
    result.optionalMessage = value;
  }
  result.hasOptionalMessage = YES;
  return self;
}
- (id<PBMessage_Builder>) clearOptionalMessage {
  result.hasOptionalMessage = NO;
  result.optionalMessage = [TestRequired defaultInstance];
  return self;
}

- (NSArray*) repeatedMessageList {
  if (result.mutableRepeatedMessageList == nil) { return [NSArray array]; }
  return result.mutableRepeatedMessageList;
}
- (TestRequired*) repeatedMessageAtIndex:(int32_t) index {
  return [result repeatedMessageAtIndex:index];
}
- (TestRequiredForeign_Builder*) replaceRepeatedMessageAtIndex:(int32_t) index withRepeatedMessage:(TestRequired*) value {
  [result.mutableRepeatedMessageList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestRequiredForeign_Builder*) addAllRepeatedMessage:(NSArray*) values {
  if (result.mutableRepeatedMessageList == nil) {
    result.mutableRepeatedMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedMessageList addObjectsFromArray:values];
  return self;
}
- (TestRequiredForeign_Builder*) clearRepeatedMessageList {
  result.mutableRepeatedMessageList = nil;
  return self;
}
- (TestRequiredForeign_Builder*) addRepeatedMessage:(TestRequired*) value {
  if (result.mutableRepeatedMessageList == nil) {
    result.mutableRepeatedMessageList = [NSMutableArray array];
  }
  [result.mutableRepeatedMessageList addObject:value];
  return self;
}

- (BOOL) hasDummy {
  return result.hasDummy;
}
- (int32_t) dummy {
  return result.dummy;
}
- (TestRequiredForeign_Builder*) setDummy:(int32_t) value {
  result.hasDummy = YES;
  result.dummy = value;
  return self;
}
- (TestRequiredForeign_Builder*) clearDummy {
  result.hasDummy = NO;
  result.dummy = 0;
  return self;
}
@end

@interface TestForeignNested ()
@property BOOL hasForeignNested;
@property (retain) TestAllTypes_NestedMessage* foreignNested;
@end

@implementation TestForeignNested

@synthesize hasForeignNested;
@synthesize foreignNested;
- (void) dealloc {
  self.hasForeignNested = NO;
  self.foreignNested = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestForeignNested* defaultTestForeignNestedInstance = nil;
+ (void) initialize {
  if (self == [TestForeignNested class]) {
    defaultTestForeignNestedInstance = [[TestForeignNested alloc] init];
  }
}

+ (TestForeignNested*) defaultInstance {
  return defaultTestForeignNestedInstance;
}

- (TestForeignNested*) defaultInstanceForType {
  return defaultTestForeignNestedInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestForeignNested_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestForeignNested_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasForeignNested) {
    [output writeMessage:1 value:self.foreignNested];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (self.hasForeignNested) {
    size += computeMessageSize(1, self.foreignNested);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestForeignNested*) parseFromData:(NSData*) data {
  return (TestForeignNested*)[[[TestForeignNested newBuilder] mergeFromData:data] buildParsed];
}
+ (TestForeignNested*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestForeignNested*)[[[TestForeignNested newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestForeignNested*) parseFromInputStream:(NSInputStream*) input {
  return (TestForeignNested*)[[[TestForeignNested newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestForeignNested*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestForeignNested*)[[[TestForeignNested newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestForeignNested*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestForeignNested*)[[[TestForeignNested newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestForeignNested*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestForeignNested*)[[[TestForeignNested newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestForeignNested_Builder*) newBuilder { return [[[TestForeignNested_Builder alloc] init] autorelease]; }
- (TestForeignNested_Builder*) newBuilderForType { return [TestForeignNested newBuilder]; }
+ (TestForeignNested_Builder*) newBuilderWithTestForeignNested:(TestForeignNested*) prototype {
  return [[TestForeignNested newBuilder] mergeFromTestForeignNested:prototype];
}

@end

@implementation TestForeignNested_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestForeignNested alloc] init] autorelease];
  }
  return self;
}
- (TestForeignNested*) internalGetResult {
  return result;
}

- (TestForeignNested_Builder*) clear {
  self.result = [[[TestForeignNested alloc] init] autorelease];
  return self;
}

- (TestForeignNested_Builder*) clone {
  return (TestForeignNested_Builder*)[[[[TestForeignNested_Builder alloc] init] autorelease] mergeFromTestForeignNested:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestForeignNested descriptor];
}

- (TestForeignNested*) defaultInstanceForType {
  return [TestForeignNested defaultInstance];
}

- (TestForeignNested*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestForeignNested*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestForeignNested*) buildPartial {
  TestForeignNested* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestForeignNested_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestForeignNested class]]) {
    return [self mergeFromTestForeignNested:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestForeignNested_Builder*) mergeFromTestForeignNested:(TestForeignNested*) other {
  if (other == [TestForeignNested defaultInstance]) return self;
  if (other.hasForeignNested) {
    [self mergeForeignNested:other.foreignNested];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestForeignNested_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestForeignNested_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestAllTypes_NestedMessage_Builder* subBuilder = [TestAllTypes_NestedMessage newBuilder];
        if (self.hasForeignNested) {
          [subBuilder mergeFromTestAllTypes_NestedMessage:self.foreignNested];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setForeignNested:[subBuilder buildPartial]];
        break;
      }
    }
  }
}


- (BOOL) hasForeignNested {
  return result.hasForeignNested;
}
- (TestAllTypes_NestedMessage*) foreignNested {
  return result.foreignNested;
}
- (id<PBMessage_Builder>) setForeignNested:(TestAllTypes_NestedMessage*) value {
  result.hasForeignNested = YES;
  result.foreignNested = value;
  return self;
}
- (id<PBMessage_Builder>) setForeignNestedBuilder:(TestAllTypes_NestedMessage_Builder*) builderForValue {
  return [self setForeignNested:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeForeignNested:(TestAllTypes_NestedMessage*) value {
  if (result.hasForeignNested &&
      result.foreignNested != [TestAllTypes_NestedMessage defaultInstance]) {
    result.foreignNested =
      [[[TestAllTypes_NestedMessage newBuilderWithTestAllTypes_NestedMessage:result.foreignNested] mergeFromTestAllTypes_NestedMessage:value] buildPartial];
  } else {
    result.foreignNested = value;
  }
  result.hasForeignNested = YES;
  return self;
}
- (id<PBMessage_Builder>) clearForeignNested {
  result.hasForeignNested = NO;
  result.foreignNested = [TestAllTypes_NestedMessage defaultInstance];
  return self;
}
@end

@interface TestEmptyMessage ()
@end

@implementation TestEmptyMessage

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestEmptyMessage* defaultTestEmptyMessageInstance = nil;
+ (void) initialize {
  if (self == [TestEmptyMessage class]) {
    defaultTestEmptyMessageInstance = [[TestEmptyMessage alloc] init];
  }
}

+ (TestEmptyMessage*) defaultInstance {
  return defaultTestEmptyMessageInstance;
}

- (TestEmptyMessage*) defaultInstanceForType {
  return defaultTestEmptyMessageInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestEmptyMessage_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestEmptyMessage_fieldAccessorTable];
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestEmptyMessage*) parseFromData:(NSData*) data {
  return (TestEmptyMessage*)[[[TestEmptyMessage newBuilder] mergeFromData:data] buildParsed];
}
+ (TestEmptyMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestEmptyMessage*)[[[TestEmptyMessage newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestEmptyMessage*) parseFromInputStream:(NSInputStream*) input {
  return (TestEmptyMessage*)[[[TestEmptyMessage newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestEmptyMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestEmptyMessage*)[[[TestEmptyMessage newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestEmptyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestEmptyMessage*)[[[TestEmptyMessage newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestEmptyMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestEmptyMessage*)[[[TestEmptyMessage newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestEmptyMessage_Builder*) newBuilder { return [[[TestEmptyMessage_Builder alloc] init] autorelease]; }
- (TestEmptyMessage_Builder*) newBuilderForType { return [TestEmptyMessage newBuilder]; }
+ (TestEmptyMessage_Builder*) newBuilderWithTestEmptyMessage:(TestEmptyMessage*) prototype {
  return [[TestEmptyMessage newBuilder] mergeFromTestEmptyMessage:prototype];
}

@end

@implementation TestEmptyMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestEmptyMessage alloc] init] autorelease];
  }
  return self;
}
- (TestEmptyMessage*) internalGetResult {
  return result;
}

- (TestEmptyMessage_Builder*) clear {
  self.result = [[[TestEmptyMessage alloc] init] autorelease];
  return self;
}

- (TestEmptyMessage_Builder*) clone {
  return (TestEmptyMessage_Builder*)[[[[TestEmptyMessage_Builder alloc] init] autorelease] mergeFromTestEmptyMessage:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestEmptyMessage descriptor];
}

- (TestEmptyMessage*) defaultInstanceForType {
  return [TestEmptyMessage defaultInstance];
}

- (TestEmptyMessage*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestEmptyMessage*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestEmptyMessage*) buildPartial {
  TestEmptyMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestEmptyMessage_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestEmptyMessage class]]) {
    return [self mergeFromTestEmptyMessage:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestEmptyMessage_Builder*) mergeFromTestEmptyMessage:(TestEmptyMessage*) other {
  if (other == [TestEmptyMessage defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestEmptyMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestEmptyMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@interface TestEmptyMessageWithExtensions ()
@end

@implementation TestEmptyMessageWithExtensions

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestEmptyMessageWithExtensions* defaultTestEmptyMessageWithExtensionsInstance = nil;
+ (void) initialize {
  if (self == [TestEmptyMessageWithExtensions class]) {
    defaultTestEmptyMessageWithExtensionsInstance = [[TestEmptyMessageWithExtensions alloc] init];
  }
}

+ (TestEmptyMessageWithExtensions*) defaultInstance {
  return defaultTestEmptyMessageWithExtensionsInstance;
}

- (TestEmptyMessageWithExtensions*) defaultInstanceForType {
  return defaultTestEmptyMessageWithExtensionsInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestEmptyMessageWithExtensions_fieldAccessorTable];
}

- (BOOL) isInitialized {
  if (!self.extensionsAreInitialized) return false;
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  PBExtensionWriter* extensionWriter = [PBExtensionWriter writerWithExtensions:self.extensions];
  [extensionWriter writeUntil:536870912 output:output];
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestEmptyMessageWithExtensions*) parseFromData:(NSData*) data {
  return (TestEmptyMessageWithExtensions*)[[[TestEmptyMessageWithExtensions newBuilder] mergeFromData:data] buildParsed];
}
+ (TestEmptyMessageWithExtensions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestEmptyMessageWithExtensions*)[[[TestEmptyMessageWithExtensions newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestEmptyMessageWithExtensions*) parseFromInputStream:(NSInputStream*) input {
  return (TestEmptyMessageWithExtensions*)[[[TestEmptyMessageWithExtensions newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestEmptyMessageWithExtensions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestEmptyMessageWithExtensions*)[[[TestEmptyMessageWithExtensions newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestEmptyMessageWithExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestEmptyMessageWithExtensions*)[[[TestEmptyMessageWithExtensions newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestEmptyMessageWithExtensions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestEmptyMessageWithExtensions*)[[[TestEmptyMessageWithExtensions newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestEmptyMessageWithExtensions_Builder*) newBuilder { return [[[TestEmptyMessageWithExtensions_Builder alloc] init] autorelease]; }
- (TestEmptyMessageWithExtensions_Builder*) newBuilderForType { return [TestEmptyMessageWithExtensions newBuilder]; }
+ (TestEmptyMessageWithExtensions_Builder*) newBuilderWithTestEmptyMessageWithExtensions:(TestEmptyMessageWithExtensions*) prototype {
  return [[TestEmptyMessageWithExtensions newBuilder] mergeFromTestEmptyMessageWithExtensions:prototype];
}

@end

@implementation TestEmptyMessageWithExtensions_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestEmptyMessageWithExtensions alloc] init] autorelease];
  }
  return self;
}
- (TestEmptyMessageWithExtensions*) internalGetResult {
  return result;
}

- (TestEmptyMessageWithExtensions_Builder*) clear {
  self.result = [[[TestEmptyMessageWithExtensions alloc] init] autorelease];
  return self;
}

- (TestEmptyMessageWithExtensions_Builder*) clone {
  return (TestEmptyMessageWithExtensions_Builder*)[[[[TestEmptyMessageWithExtensions_Builder alloc] init] autorelease] mergeFromTestEmptyMessageWithExtensions:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestEmptyMessageWithExtensions descriptor];
}

- (TestEmptyMessageWithExtensions*) defaultInstanceForType {
  return [TestEmptyMessageWithExtensions defaultInstance];
}

- (TestEmptyMessageWithExtensions*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestEmptyMessageWithExtensions*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestEmptyMessageWithExtensions*) buildPartial {
  TestEmptyMessageWithExtensions* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestEmptyMessageWithExtensions_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestEmptyMessageWithExtensions class]]) {
    return [self mergeFromTestEmptyMessageWithExtensions:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestEmptyMessageWithExtensions_Builder*) mergeFromTestEmptyMessageWithExtensions:(TestEmptyMessageWithExtensions*) other {
  if (other == [TestEmptyMessageWithExtensions defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestEmptyMessageWithExtensions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestEmptyMessageWithExtensions_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@interface TestReallyLargeTagNumber ()
@property BOOL hasA;
@property int32_t a;
@property BOOL hasBb;
@property int32_t bb;
@end

@implementation TestReallyLargeTagNumber

@synthesize hasA;
@synthesize a;
@synthesize hasBb;
@synthesize bb;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  self.hasBb = NO;
  self.bb = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
    self.bb = 0;
  }
  return self;
}
static TestReallyLargeTagNumber* defaultTestReallyLargeTagNumberInstance = nil;
+ (void) initialize {
  if (self == [TestReallyLargeTagNumber class]) {
    defaultTestReallyLargeTagNumberInstance = [[TestReallyLargeTagNumber alloc] init];
  }
}

+ (TestReallyLargeTagNumber*) defaultInstance {
  return defaultTestReallyLargeTagNumberInstance;
}

- (TestReallyLargeTagNumber*) defaultInstanceForType {
  return defaultTestReallyLargeTagNumberInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestReallyLargeTagNumber_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestReallyLargeTagNumber_fieldAccessorTable];
}



- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:1 value:self.a];
  }
  if (hasBb) {
    [output writeInt32:268435455 value:self.bb];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(1, self.a);
  }
  if (hasBb) {
    size += computeInt32Size(268435455, self.bb);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestReallyLargeTagNumber*) parseFromData:(NSData*) data {
  return (TestReallyLargeTagNumber*)[[[TestReallyLargeTagNumber newBuilder] mergeFromData:data] buildParsed];
}
+ (TestReallyLargeTagNumber*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestReallyLargeTagNumber*)[[[TestReallyLargeTagNumber newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestReallyLargeTagNumber*) parseFromInputStream:(NSInputStream*) input {
  return (TestReallyLargeTagNumber*)[[[TestReallyLargeTagNumber newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestReallyLargeTagNumber*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestReallyLargeTagNumber*)[[[TestReallyLargeTagNumber newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestReallyLargeTagNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestReallyLargeTagNumber*)[[[TestReallyLargeTagNumber newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestReallyLargeTagNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestReallyLargeTagNumber*)[[[TestReallyLargeTagNumber newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestReallyLargeTagNumber_Builder*) newBuilder { return [[[TestReallyLargeTagNumber_Builder alloc] init] autorelease]; }
- (TestReallyLargeTagNumber_Builder*) newBuilderForType { return [TestReallyLargeTagNumber newBuilder]; }
+ (TestReallyLargeTagNumber_Builder*) newBuilderWithTestReallyLargeTagNumber:(TestReallyLargeTagNumber*) prototype {
  return [[TestReallyLargeTagNumber newBuilder] mergeFromTestReallyLargeTagNumber:prototype];
}

@end

@implementation TestReallyLargeTagNumber_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestReallyLargeTagNumber alloc] init] autorelease];
  }
  return self;
}
- (TestReallyLargeTagNumber*) internalGetResult {
  return result;
}

- (TestReallyLargeTagNumber_Builder*) clear {
  self.result = [[[TestReallyLargeTagNumber alloc] init] autorelease];
  return self;
}

- (TestReallyLargeTagNumber_Builder*) clone {
  return (TestReallyLargeTagNumber_Builder*)[[[[TestReallyLargeTagNumber_Builder alloc] init] autorelease] mergeFromTestReallyLargeTagNumber:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestReallyLargeTagNumber descriptor];
}

- (TestReallyLargeTagNumber*) defaultInstanceForType {
  return [TestReallyLargeTagNumber defaultInstance];
}

- (TestReallyLargeTagNumber*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestReallyLargeTagNumber*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestReallyLargeTagNumber*) buildPartial {
  TestReallyLargeTagNumber* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestReallyLargeTagNumber_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestReallyLargeTagNumber class]]) {
    return [self mergeFromTestReallyLargeTagNumber:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestReallyLargeTagNumber_Builder*) mergeFromTestReallyLargeTagNumber:(TestReallyLargeTagNumber*) other {
  if (other == [TestReallyLargeTagNumber defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  if (other.hasBb) {
    [self setBb:other.bb];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestReallyLargeTagNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestReallyLargeTagNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setA:[input readInt32]];
        break;
      }
      case 2147483640: {
        [self setBb:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestReallyLargeTagNumber_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestReallyLargeTagNumber_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}

- (BOOL) hasBb {
  return result.hasBb;
}
- (int32_t) bb {
  return result.bb;
}
- (TestReallyLargeTagNumber_Builder*) setBb:(int32_t) value {
  result.hasBb = YES;
  result.bb = value;
  return self;
}
- (TestReallyLargeTagNumber_Builder*) clearBb {
  result.hasBb = NO;
  result.bb = 0;
  return self;
}
@end

@interface TestRecursiveMessage ()
@property BOOL hasA;
@property (retain) TestRecursiveMessage* a;
@property BOOL hasI;
@property int32_t i;
@end

@implementation TestRecursiveMessage

@synthesize hasA;
@synthesize a;
@synthesize hasI;
@synthesize i;
- (void) dealloc {
  self.hasA = NO;
  self.a = nil;
  self.hasI = NO;
  self.i = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.i = 0;
  }
  return self;
}
static TestRecursiveMessage* defaultTestRecursiveMessageInstance = nil;
+ (void) initialize {
  if (self == [TestRecursiveMessage class]) {
    defaultTestRecursiveMessageInstance = [[TestRecursiveMessage alloc] init];
  }
}

+ (TestRecursiveMessage*) defaultInstance {
  return defaultTestRecursiveMessageInstance;
}

- (TestRecursiveMessage*) defaultInstanceForType {
  return defaultTestRecursiveMessageInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestRecursiveMessage_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestRecursiveMessage_fieldAccessorTable];
}



- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasA) {
    [output writeMessage:1 value:self.a];
  }
  if (hasI) {
    [output writeInt32:2 value:self.i];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (self.hasA) {
    size += computeMessageSize(1, self.a);
  }
  if (hasI) {
    size += computeInt32Size(2, self.i);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestRecursiveMessage*) parseFromData:(NSData*) data {
  return (TestRecursiveMessage*)[[[TestRecursiveMessage newBuilder] mergeFromData:data] buildParsed];
}
+ (TestRecursiveMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRecursiveMessage*)[[[TestRecursiveMessage newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestRecursiveMessage*) parseFromInputStream:(NSInputStream*) input {
  return (TestRecursiveMessage*)[[[TestRecursiveMessage newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestRecursiveMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRecursiveMessage*)[[[TestRecursiveMessage newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestRecursiveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestRecursiveMessage*)[[[TestRecursiveMessage newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestRecursiveMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestRecursiveMessage*)[[[TestRecursiveMessage newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestRecursiveMessage_Builder*) newBuilder { return [[[TestRecursiveMessage_Builder alloc] init] autorelease]; }
- (TestRecursiveMessage_Builder*) newBuilderForType { return [TestRecursiveMessage newBuilder]; }
+ (TestRecursiveMessage_Builder*) newBuilderWithTestRecursiveMessage:(TestRecursiveMessage*) prototype {
  return [[TestRecursiveMessage newBuilder] mergeFromTestRecursiveMessage:prototype];
}

@end

@implementation TestRecursiveMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestRecursiveMessage alloc] init] autorelease];
  }
  return self;
}
- (TestRecursiveMessage*) internalGetResult {
  return result;
}

- (TestRecursiveMessage_Builder*) clear {
  self.result = [[[TestRecursiveMessage alloc] init] autorelease];
  return self;
}

- (TestRecursiveMessage_Builder*) clone {
  return (TestRecursiveMessage_Builder*)[[[[TestRecursiveMessage_Builder alloc] init] autorelease] mergeFromTestRecursiveMessage:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestRecursiveMessage descriptor];
}

- (TestRecursiveMessage*) defaultInstanceForType {
  return [TestRecursiveMessage defaultInstance];
}

- (TestRecursiveMessage*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestRecursiveMessage*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestRecursiveMessage*) buildPartial {
  TestRecursiveMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestRecursiveMessage_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestRecursiveMessage class]]) {
    return [self mergeFromTestRecursiveMessage:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestRecursiveMessage_Builder*) mergeFromTestRecursiveMessage:(TestRecursiveMessage*) other {
  if (other == [TestRecursiveMessage defaultInstance]) return self;
  if (other.hasA) {
    [self mergeA:other.a];
  }
  if (other.hasI) {
    [self setI:other.i];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestRecursiveMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestRecursiveMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestRecursiveMessage_Builder* subBuilder = [TestRecursiveMessage newBuilder];
        if (self.hasA) {
          [subBuilder mergeFromTestRecursiveMessage:self.a];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setA:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setI:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (TestRecursiveMessage*) a {
  return result.a;
}
- (id<PBMessage_Builder>) setA:(TestRecursiveMessage*) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (id<PBMessage_Builder>) setABuilder:(TestRecursiveMessage_Builder*) builderForValue {
  return [self setA:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeA:(TestRecursiveMessage*) value {
  if (result.hasA &&
      result.a != [TestRecursiveMessage defaultInstance]) {
    result.a =
      [[[TestRecursiveMessage newBuilderWithTestRecursiveMessage:result.a] mergeFromTestRecursiveMessage:value] buildPartial];
  } else {
    result.a = value;
  }
  result.hasA = YES;
  return self;
}
- (id<PBMessage_Builder>) clearA {
  result.hasA = NO;
  result.a = [TestRecursiveMessage defaultInstance];
  return self;
}

- (BOOL) hasI {
  return result.hasI;
}
- (int32_t) i {
  return result.i;
}
- (TestRecursiveMessage_Builder*) setI:(int32_t) value {
  result.hasI = YES;
  result.i = value;
  return self;
}
- (TestRecursiveMessage_Builder*) clearI {
  result.hasI = NO;
  result.i = 0;
  return self;
}
@end

@interface TestMutualRecursionA ()
@property BOOL hasBb;
@property (retain) TestMutualRecursionB* bb;
@end

@implementation TestMutualRecursionA

@synthesize hasBb;
@synthesize bb;
- (void) dealloc {
  self.hasBb = NO;
  self.bb = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestMutualRecursionA* defaultTestMutualRecursionAInstance = nil;
+ (void) initialize {
  if (self == [TestMutualRecursionA class]) {
    defaultTestMutualRecursionAInstance = [[TestMutualRecursionA alloc] init];
  }
}

+ (TestMutualRecursionA*) defaultInstance {
  return defaultTestMutualRecursionAInstance;
}

- (TestMutualRecursionA*) defaultInstanceForType {
  return defaultTestMutualRecursionAInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestMutualRecursionA_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestMutualRecursionA_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBb) {
    [output writeMessage:1 value:self.bb];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (self.hasBb) {
    size += computeMessageSize(1, self.bb);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestMutualRecursionA*) parseFromData:(NSData*) data {
  return (TestMutualRecursionA*)[[[TestMutualRecursionA newBuilder] mergeFromData:data] buildParsed];
}
+ (TestMutualRecursionA*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestMutualRecursionA*)[[[TestMutualRecursionA newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestMutualRecursionA*) parseFromInputStream:(NSInputStream*) input {
  return (TestMutualRecursionA*)[[[TestMutualRecursionA newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestMutualRecursionA*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestMutualRecursionA*)[[[TestMutualRecursionA newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestMutualRecursionA*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestMutualRecursionA*)[[[TestMutualRecursionA newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestMutualRecursionA*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestMutualRecursionA*)[[[TestMutualRecursionA newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestMutualRecursionA_Builder*) newBuilder { return [[[TestMutualRecursionA_Builder alloc] init] autorelease]; }
- (TestMutualRecursionA_Builder*) newBuilderForType { return [TestMutualRecursionA newBuilder]; }
+ (TestMutualRecursionA_Builder*) newBuilderWithTestMutualRecursionA:(TestMutualRecursionA*) prototype {
  return [[TestMutualRecursionA newBuilder] mergeFromTestMutualRecursionA:prototype];
}

@end

@implementation TestMutualRecursionA_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestMutualRecursionA alloc] init] autorelease];
  }
  return self;
}
- (TestMutualRecursionA*) internalGetResult {
  return result;
}

- (TestMutualRecursionA_Builder*) clear {
  self.result = [[[TestMutualRecursionA alloc] init] autorelease];
  return self;
}

- (TestMutualRecursionA_Builder*) clone {
  return (TestMutualRecursionA_Builder*)[[[[TestMutualRecursionA_Builder alloc] init] autorelease] mergeFromTestMutualRecursionA:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestMutualRecursionA descriptor];
}

- (TestMutualRecursionA*) defaultInstanceForType {
  return [TestMutualRecursionA defaultInstance];
}

- (TestMutualRecursionA*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestMutualRecursionA*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestMutualRecursionA*) buildPartial {
  TestMutualRecursionA* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestMutualRecursionA_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestMutualRecursionA class]]) {
    return [self mergeFromTestMutualRecursionA:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestMutualRecursionA_Builder*) mergeFromTestMutualRecursionA:(TestMutualRecursionA*) other {
  if (other == [TestMutualRecursionA defaultInstance]) return self;
  if (other.hasBb) {
    [self mergeBb:other.bb];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestMutualRecursionA_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestMutualRecursionA_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestMutualRecursionB_Builder* subBuilder = [TestMutualRecursionB newBuilder];
        if (self.hasBb) {
          [subBuilder mergeFromTestMutualRecursionB:self.bb];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBb:[subBuilder buildPartial]];
        break;
      }
    }
  }
}


- (BOOL) hasBb {
  return result.hasBb;
}
- (TestMutualRecursionB*) bb {
  return result.bb;
}
- (id<PBMessage_Builder>) setBb:(TestMutualRecursionB*) value {
  result.hasBb = YES;
  result.bb = value;
  return self;
}
- (id<PBMessage_Builder>) setBbBuilder:(TestMutualRecursionB_Builder*) builderForValue {
  return [self setBb:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeBb:(TestMutualRecursionB*) value {
  if (result.hasBb &&
      result.bb != [TestMutualRecursionB defaultInstance]) {
    result.bb =
      [[[TestMutualRecursionB newBuilderWithTestMutualRecursionB:result.bb] mergeFromTestMutualRecursionB:value] buildPartial];
  } else {
    result.bb = value;
  }
  result.hasBb = YES;
  return self;
}
- (id<PBMessage_Builder>) clearBb {
  result.hasBb = NO;
  result.bb = [TestMutualRecursionB defaultInstance];
  return self;
}
@end

@interface TestMutualRecursionB ()
@property BOOL hasA;
@property (retain) TestMutualRecursionA* a;
@property BOOL hasOptionalInt32;
@property int32_t optionalInt32;
@end

@implementation TestMutualRecursionB

@synthesize hasA;
@synthesize a;
@synthesize hasOptionalInt32;
@synthesize optionalInt32;
- (void) dealloc {
  self.hasA = NO;
  self.a = nil;
  self.hasOptionalInt32 = NO;
  self.optionalInt32 = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.optionalInt32 = 0;
  }
  return self;
}
static TestMutualRecursionB* defaultTestMutualRecursionBInstance = nil;
+ (void) initialize {
  if (self == [TestMutualRecursionB class]) {
    defaultTestMutualRecursionBInstance = [[TestMutualRecursionB alloc] init];
  }
}

+ (TestMutualRecursionB*) defaultInstance {
  return defaultTestMutualRecursionBInstance;
}

- (TestMutualRecursionB*) defaultInstanceForType {
  return defaultTestMutualRecursionBInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestMutualRecursionB_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestMutualRecursionB_fieldAccessorTable];
}



- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasA) {
    [output writeMessage:1 value:self.a];
  }
  if (hasOptionalInt32) {
    [output writeInt32:2 value:self.optionalInt32];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (self.hasA) {
    size += computeMessageSize(1, self.a);
  }
  if (hasOptionalInt32) {
    size += computeInt32Size(2, self.optionalInt32);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestMutualRecursionB*) parseFromData:(NSData*) data {
  return (TestMutualRecursionB*)[[[TestMutualRecursionB newBuilder] mergeFromData:data] buildParsed];
}
+ (TestMutualRecursionB*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestMutualRecursionB*)[[[TestMutualRecursionB newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestMutualRecursionB*) parseFromInputStream:(NSInputStream*) input {
  return (TestMutualRecursionB*)[[[TestMutualRecursionB newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestMutualRecursionB*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestMutualRecursionB*)[[[TestMutualRecursionB newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestMutualRecursionB*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestMutualRecursionB*)[[[TestMutualRecursionB newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestMutualRecursionB*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestMutualRecursionB*)[[[TestMutualRecursionB newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestMutualRecursionB_Builder*) newBuilder { return [[[TestMutualRecursionB_Builder alloc] init] autorelease]; }
- (TestMutualRecursionB_Builder*) newBuilderForType { return [TestMutualRecursionB newBuilder]; }
+ (TestMutualRecursionB_Builder*) newBuilderWithTestMutualRecursionB:(TestMutualRecursionB*) prototype {
  return [[TestMutualRecursionB newBuilder] mergeFromTestMutualRecursionB:prototype];
}

@end

@implementation TestMutualRecursionB_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestMutualRecursionB alloc] init] autorelease];
  }
  return self;
}
- (TestMutualRecursionB*) internalGetResult {
  return result;
}

- (TestMutualRecursionB_Builder*) clear {
  self.result = [[[TestMutualRecursionB alloc] init] autorelease];
  return self;
}

- (TestMutualRecursionB_Builder*) clone {
  return (TestMutualRecursionB_Builder*)[[[[TestMutualRecursionB_Builder alloc] init] autorelease] mergeFromTestMutualRecursionB:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestMutualRecursionB descriptor];
}

- (TestMutualRecursionB*) defaultInstanceForType {
  return [TestMutualRecursionB defaultInstance];
}

- (TestMutualRecursionB*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestMutualRecursionB*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestMutualRecursionB*) buildPartial {
  TestMutualRecursionB* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestMutualRecursionB_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestMutualRecursionB class]]) {
    return [self mergeFromTestMutualRecursionB:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestMutualRecursionB_Builder*) mergeFromTestMutualRecursionB:(TestMutualRecursionB*) other {
  if (other == [TestMutualRecursionB defaultInstance]) return self;
  if (other.hasA) {
    [self mergeA:other.a];
  }
  if (other.hasOptionalInt32) {
    [self setOptionalInt32:other.optionalInt32];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestMutualRecursionB_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestMutualRecursionB_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestMutualRecursionA_Builder* subBuilder = [TestMutualRecursionA newBuilder];
        if (self.hasA) {
          [subBuilder mergeFromTestMutualRecursionA:self.a];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setA:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setOptionalInt32:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (TestMutualRecursionA*) a {
  return result.a;
}
- (id<PBMessage_Builder>) setA:(TestMutualRecursionA*) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (id<PBMessage_Builder>) setABuilder:(TestMutualRecursionA_Builder*) builderForValue {
  return [self setA:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeA:(TestMutualRecursionA*) value {
  if (result.hasA &&
      result.a != [TestMutualRecursionA defaultInstance]) {
    result.a =
      [[[TestMutualRecursionA newBuilderWithTestMutualRecursionA:result.a] mergeFromTestMutualRecursionA:value] buildPartial];
  } else {
    result.a = value;
  }
  result.hasA = YES;
  return self;
}
- (id<PBMessage_Builder>) clearA {
  result.hasA = NO;
  result.a = [TestMutualRecursionA defaultInstance];
  return self;
}

- (BOOL) hasOptionalInt32 {
  return result.hasOptionalInt32;
}
- (int32_t) optionalInt32 {
  return result.optionalInt32;
}
- (TestMutualRecursionB_Builder*) setOptionalInt32:(int32_t) value {
  result.hasOptionalInt32 = YES;
  result.optionalInt32 = value;
  return self;
}
- (TestMutualRecursionB_Builder*) clearOptionalInt32 {
  result.hasOptionalInt32 = NO;
  result.optionalInt32 = 0;
  return self;
}
@end

@interface TestDupFieldNumber ()
@property BOOL hasA;
@property int32_t a;
@property BOOL hasFoo;
@property (retain) TestDupFieldNumber_Foo* foo;
@property BOOL hasBar;
@property (retain) TestDupFieldNumber_Bar* bar;
@end

@implementation TestDupFieldNumber

@synthesize hasA;
@synthesize a;
@synthesize hasFoo;
@synthesize foo;
@synthesize hasBar;
@synthesize bar;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  self.hasFoo = NO;
  self.foo = nil;
  self.hasBar = NO;
  self.bar = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static TestDupFieldNumber* defaultTestDupFieldNumberInstance = nil;
+ (void) initialize {
  if (self == [TestDupFieldNumber class]) {
    defaultTestDupFieldNumberInstance = [[TestDupFieldNumber alloc] init];
  }
}

+ (TestDupFieldNumber*) defaultInstance {
  return defaultTestDupFieldNumberInstance;
}

- (TestDupFieldNumber*) defaultInstanceForType {
  return defaultTestDupFieldNumberInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestDupFieldNumber_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestDupFieldNumber_fieldAccessorTable];
}




- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:1 value:self.a];
  }
  if (self.hasFoo) {
    [output writeGroup:2 value:self.foo];
  }
  if (self.hasBar) {
    [output writeGroup:3 value:self.bar];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(1, self.a);
  }
  if (self.hasFoo) {
    size += computeGroupSize(2, self.foo);
  }
  if (self.hasBar) {
    size += computeGroupSize(3, self.bar);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestDupFieldNumber*) parseFromData:(NSData*) data {
  return (TestDupFieldNumber*)[[[TestDupFieldNumber newBuilder] mergeFromData:data] buildParsed];
}
+ (TestDupFieldNumber*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber*)[[[TestDupFieldNumber newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestDupFieldNumber*) parseFromInputStream:(NSInputStream*) input {
  return (TestDupFieldNumber*)[[[TestDupFieldNumber newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestDupFieldNumber*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber*)[[[TestDupFieldNumber newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestDupFieldNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestDupFieldNumber*)[[[TestDupFieldNumber newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestDupFieldNumber*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber*)[[[TestDupFieldNumber newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestDupFieldNumber_Builder*) newBuilder { return [[[TestDupFieldNumber_Builder alloc] init] autorelease]; }
- (TestDupFieldNumber_Builder*) newBuilderForType { return [TestDupFieldNumber newBuilder]; }
+ (TestDupFieldNumber_Builder*) newBuilderWithTestDupFieldNumber:(TestDupFieldNumber*) prototype {
  return [[TestDupFieldNumber newBuilder] mergeFromTestDupFieldNumber:prototype];
}

@end

@interface TestDupFieldNumber_Foo ()
@property BOOL hasA;
@property int32_t a;
@end

@implementation TestDupFieldNumber_Foo

@synthesize hasA;
@synthesize a;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static TestDupFieldNumber_Foo* defaultTestDupFieldNumber_FooInstance = nil;
+ (void) initialize {
  if (self == [TestDupFieldNumber_Foo class]) {
    defaultTestDupFieldNumber_FooInstance = [[TestDupFieldNumber_Foo alloc] init];
  }
}

+ (TestDupFieldNumber_Foo*) defaultInstance {
  return defaultTestDupFieldNumber_FooInstance;
}

- (TestDupFieldNumber_Foo*) defaultInstanceForType {
  return defaultTestDupFieldNumber_FooInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestDupFieldNumber_Foo_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestDupFieldNumber_Foo_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:1 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(1, self.a);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestDupFieldNumber_Foo*) parseFromData:(NSData*) data {
  return (TestDupFieldNumber_Foo*)[[[TestDupFieldNumber_Foo newBuilder] mergeFromData:data] buildParsed];
}
+ (TestDupFieldNumber_Foo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber_Foo*)[[[TestDupFieldNumber_Foo newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestDupFieldNumber_Foo*) parseFromInputStream:(NSInputStream*) input {
  return (TestDupFieldNumber_Foo*)[[[TestDupFieldNumber_Foo newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestDupFieldNumber_Foo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber_Foo*)[[[TestDupFieldNumber_Foo newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestDupFieldNumber_Foo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestDupFieldNumber_Foo*)[[[TestDupFieldNumber_Foo newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestDupFieldNumber_Foo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber_Foo*)[[[TestDupFieldNumber_Foo newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestDupFieldNumber_Foo_Builder*) newBuilder { return [[[TestDupFieldNumber_Foo_Builder alloc] init] autorelease]; }
- (TestDupFieldNumber_Foo_Builder*) newBuilderForType { return [TestDupFieldNumber_Foo newBuilder]; }
+ (TestDupFieldNumber_Foo_Builder*) newBuilderWithTestDupFieldNumber_Foo:(TestDupFieldNumber_Foo*) prototype {
  return [[TestDupFieldNumber_Foo newBuilder] mergeFromTestDupFieldNumber_Foo:prototype];
}

@end

@implementation TestDupFieldNumber_Foo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestDupFieldNumber_Foo alloc] init] autorelease];
  }
  return self;
}
- (TestDupFieldNumber_Foo*) internalGetResult {
  return result;
}

- (TestDupFieldNumber_Foo_Builder*) clear {
  self.result = [[[TestDupFieldNumber_Foo alloc] init] autorelease];
  return self;
}

- (TestDupFieldNumber_Foo_Builder*) clone {
  return (TestDupFieldNumber_Foo_Builder*)[[[[TestDupFieldNumber_Foo_Builder alloc] init] autorelease] mergeFromTestDupFieldNumber_Foo:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestDupFieldNumber_Foo descriptor];
}

- (TestDupFieldNumber_Foo*) defaultInstanceForType {
  return [TestDupFieldNumber_Foo defaultInstance];
}

- (TestDupFieldNumber_Foo*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestDupFieldNumber_Foo*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestDupFieldNumber_Foo*) buildPartial {
  TestDupFieldNumber_Foo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestDupFieldNumber_Foo_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestDupFieldNumber_Foo class]]) {
    return [self mergeFromTestDupFieldNumber_Foo:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestDupFieldNumber_Foo_Builder*) mergeFromTestDupFieldNumber_Foo:(TestDupFieldNumber_Foo*) other {
  if (other == [TestDupFieldNumber_Foo defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestDupFieldNumber_Foo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestDupFieldNumber_Foo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestDupFieldNumber_Foo_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestDupFieldNumber_Foo_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}
@end

@interface TestDupFieldNumber_Bar ()
@property BOOL hasA;
@property int32_t a;
@end

@implementation TestDupFieldNumber_Bar

@synthesize hasA;
@synthesize a;
- (void) dealloc {
  self.hasA = NO;
  self.a = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.a = 0;
  }
  return self;
}
static TestDupFieldNumber_Bar* defaultTestDupFieldNumber_BarInstance = nil;
+ (void) initialize {
  if (self == [TestDupFieldNumber_Bar class]) {
    defaultTestDupFieldNumber_BarInstance = [[TestDupFieldNumber_Bar alloc] init];
  }
}

+ (TestDupFieldNumber_Bar*) defaultInstance {
  return defaultTestDupFieldNumber_BarInstance;
}

- (TestDupFieldNumber_Bar*) defaultInstanceForType {
  return defaultTestDupFieldNumber_BarInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestDupFieldNumber_Bar_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestDupFieldNumber_Bar_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasA) {
    [output writeInt32:1 value:self.a];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasA) {
    size += computeInt32Size(1, self.a);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestDupFieldNumber_Bar*) parseFromData:(NSData*) data {
  return (TestDupFieldNumber_Bar*)[[[TestDupFieldNumber_Bar newBuilder] mergeFromData:data] buildParsed];
}
+ (TestDupFieldNumber_Bar*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber_Bar*)[[[TestDupFieldNumber_Bar newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestDupFieldNumber_Bar*) parseFromInputStream:(NSInputStream*) input {
  return (TestDupFieldNumber_Bar*)[[[TestDupFieldNumber_Bar newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestDupFieldNumber_Bar*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber_Bar*)[[[TestDupFieldNumber_Bar newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestDupFieldNumber_Bar*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestDupFieldNumber_Bar*)[[[TestDupFieldNumber_Bar newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestDupFieldNumber_Bar*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestDupFieldNumber_Bar*)[[[TestDupFieldNumber_Bar newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestDupFieldNumber_Bar_Builder*) newBuilder { return [[[TestDupFieldNumber_Bar_Builder alloc] init] autorelease]; }
- (TestDupFieldNumber_Bar_Builder*) newBuilderForType { return [TestDupFieldNumber_Bar newBuilder]; }
+ (TestDupFieldNumber_Bar_Builder*) newBuilderWithTestDupFieldNumber_Bar:(TestDupFieldNumber_Bar*) prototype {
  return [[TestDupFieldNumber_Bar newBuilder] mergeFromTestDupFieldNumber_Bar:prototype];
}

@end

@implementation TestDupFieldNumber_Bar_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestDupFieldNumber_Bar alloc] init] autorelease];
  }
  return self;
}
- (TestDupFieldNumber_Bar*) internalGetResult {
  return result;
}

- (TestDupFieldNumber_Bar_Builder*) clear {
  self.result = [[[TestDupFieldNumber_Bar alloc] init] autorelease];
  return self;
}

- (TestDupFieldNumber_Bar_Builder*) clone {
  return (TestDupFieldNumber_Bar_Builder*)[[[[TestDupFieldNumber_Bar_Builder alloc] init] autorelease] mergeFromTestDupFieldNumber_Bar:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestDupFieldNumber_Bar descriptor];
}

- (TestDupFieldNumber_Bar*) defaultInstanceForType {
  return [TestDupFieldNumber_Bar defaultInstance];
}

- (TestDupFieldNumber_Bar*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestDupFieldNumber_Bar*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestDupFieldNumber_Bar*) buildPartial {
  TestDupFieldNumber_Bar* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestDupFieldNumber_Bar_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestDupFieldNumber_Bar class]]) {
    return [self mergeFromTestDupFieldNumber_Bar:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestDupFieldNumber_Bar_Builder*) mergeFromTestDupFieldNumber_Bar:(TestDupFieldNumber_Bar*) other {
  if (other == [TestDupFieldNumber_Bar defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestDupFieldNumber_Bar_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestDupFieldNumber_Bar_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setA:[input readInt32]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestDupFieldNumber_Bar_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestDupFieldNumber_Bar_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}
@end

@implementation TestDupFieldNumber_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestDupFieldNumber alloc] init] autorelease];
  }
  return self;
}
- (TestDupFieldNumber*) internalGetResult {
  return result;
}

- (TestDupFieldNumber_Builder*) clear {
  self.result = [[[TestDupFieldNumber alloc] init] autorelease];
  return self;
}

- (TestDupFieldNumber_Builder*) clone {
  return (TestDupFieldNumber_Builder*)[[[[TestDupFieldNumber_Builder alloc] init] autorelease] mergeFromTestDupFieldNumber:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestDupFieldNumber descriptor];
}

- (TestDupFieldNumber*) defaultInstanceForType {
  return [TestDupFieldNumber defaultInstance];
}

- (TestDupFieldNumber*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestDupFieldNumber*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestDupFieldNumber*) buildPartial {
  TestDupFieldNumber* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestDupFieldNumber_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestDupFieldNumber class]]) {
    return [self mergeFromTestDupFieldNumber:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestDupFieldNumber_Builder*) mergeFromTestDupFieldNumber:(TestDupFieldNumber*) other {
  if (other == [TestDupFieldNumber defaultInstance]) return self;
  if (other.hasA) {
    [self setA:other.a];
  }
  if (other.hasFoo) {
    [self mergeFoo:other.foo];
  }
  if (other.hasBar) {
    [self mergeBar:other.bar];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestDupFieldNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestDupFieldNumber_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setA:[input readInt32]];
        break;
      }
      case 19: {
        TestDupFieldNumber_Foo_Builder* subBuilder = [TestDupFieldNumber_Foo newBuilder];
        if (self.hasFoo) {
          [subBuilder mergeFromTestDupFieldNumber_Foo:self.foo];
        }
        [input readGroup:2 builder:subBuilder extensionRegistry:extensionRegistry];
        [self setFoo:[subBuilder buildPartial]];
        break;
      }
      case 27: {
        TestDupFieldNumber_Bar_Builder* subBuilder = [TestDupFieldNumber_Bar newBuilder];
        if (self.hasBar) {
          [subBuilder mergeFromTestDupFieldNumber_Bar:self.bar];
        }
        [input readGroup:3 builder:subBuilder extensionRegistry:extensionRegistry];
        [self setBar:[subBuilder buildPartial]];
        break;
      }
    }
  }
}


- (BOOL) hasA {
  return result.hasA;
}
- (int32_t) a {
  return result.a;
}
- (TestDupFieldNumber_Builder*) setA:(int32_t) value {
  result.hasA = YES;
  result.a = value;
  return self;
}
- (TestDupFieldNumber_Builder*) clearA {
  result.hasA = NO;
  result.a = 0;
  return self;
}

- (BOOL) hasFoo {
  return result.hasFoo;
}
- (TestDupFieldNumber_Foo*) foo {
  return result.foo;
}
- (id<PBMessage_Builder>) setFoo:(TestDupFieldNumber_Foo*) value {
  result.hasFoo = YES;
  result.foo = value;
  return self;
}
- (id<PBMessage_Builder>) setFooBuilder:(TestDupFieldNumber_Foo_Builder*) builderForValue {
  return [self setFoo:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeFoo:(TestDupFieldNumber_Foo*) value {
  if (result.hasFoo &&
      result.foo != [TestDupFieldNumber_Foo defaultInstance]) {
    result.foo =
      [[[TestDupFieldNumber_Foo newBuilderWithTestDupFieldNumber_Foo:result.foo] mergeFromTestDupFieldNumber_Foo:value] buildPartial];
  } else {
    result.foo = value;
  }
  result.hasFoo = YES;
  return self;
}
- (id<PBMessage_Builder>) clearFoo {
  result.hasFoo = NO;
  result.foo = [TestDupFieldNumber_Foo defaultInstance];
  return self;
}

- (BOOL) hasBar {
  return result.hasBar;
}
- (TestDupFieldNumber_Bar*) bar {
  return result.bar;
}
- (id<PBMessage_Builder>) setBar:(TestDupFieldNumber_Bar*) value {
  result.hasBar = YES;
  result.bar = value;
  return self;
}
- (id<PBMessage_Builder>) setBarBuilder:(TestDupFieldNumber_Bar_Builder*) builderForValue {
  return [self setBar:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeBar:(TestDupFieldNumber_Bar*) value {
  if (result.hasBar &&
      result.bar != [TestDupFieldNumber_Bar defaultInstance]) {
    result.bar =
      [[[TestDupFieldNumber_Bar newBuilderWithTestDupFieldNumber_Bar:result.bar] mergeFromTestDupFieldNumber_Bar:value] buildPartial];
  } else {
    result.bar = value;
  }
  result.hasBar = YES;
  return self;
}
- (id<PBMessage_Builder>) clearBar {
  result.hasBar = NO;
  result.bar = [TestDupFieldNumber_Bar defaultInstance];
  return self;
}
@end

@interface TestNestedMessageHasBits ()
@property BOOL hasOptionalNestedMessage;
@property (retain) TestNestedMessageHasBits_NestedMessage* optionalNestedMessage;
@end

@implementation TestNestedMessageHasBits

@synthesize hasOptionalNestedMessage;
@synthesize optionalNestedMessage;
- (void) dealloc {
  self.hasOptionalNestedMessage = NO;
  self.optionalNestedMessage = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestNestedMessageHasBits* defaultTestNestedMessageHasBitsInstance = nil;
+ (void) initialize {
  if (self == [TestNestedMessageHasBits class]) {
    defaultTestNestedMessageHasBitsInstance = [[TestNestedMessageHasBits alloc] init];
  }
}

+ (TestNestedMessageHasBits*) defaultInstance {
  return defaultTestNestedMessageHasBitsInstance;
}

- (TestNestedMessageHasBits*) defaultInstanceForType {
  return defaultTestNestedMessageHasBitsInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestNestedMessageHasBits_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestNestedMessageHasBits_fieldAccessorTable];
}


- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOptionalNestedMessage) {
    [output writeMessage:1 value:self.optionalNestedMessage];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (self.hasOptionalNestedMessage) {
    size += computeMessageSize(1, self.optionalNestedMessage);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestNestedMessageHasBits*) parseFromData:(NSData*) data {
  return (TestNestedMessageHasBits*)[[[TestNestedMessageHasBits newBuilder] mergeFromData:data] buildParsed];
}
+ (TestNestedMessageHasBits*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestNestedMessageHasBits*)[[[TestNestedMessageHasBits newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestNestedMessageHasBits*) parseFromInputStream:(NSInputStream*) input {
  return (TestNestedMessageHasBits*)[[[TestNestedMessageHasBits newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestNestedMessageHasBits*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestNestedMessageHasBits*)[[[TestNestedMessageHasBits newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestNestedMessageHasBits*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestNestedMessageHasBits*)[[[TestNestedMessageHasBits newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestNestedMessageHasBits*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestNestedMessageHasBits*)[[[TestNestedMessageHasBits newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestNestedMessageHasBits_Builder*) newBuilder { return [[[TestNestedMessageHasBits_Builder alloc] init] autorelease]; }
- (TestNestedMessageHasBits_Builder*) newBuilderForType { return [TestNestedMessageHasBits newBuilder]; }
+ (TestNestedMessageHasBits_Builder*) newBuilderWithTestNestedMessageHasBits:(TestNestedMessageHasBits*) prototype {
  return [[TestNestedMessageHasBits newBuilder] mergeFromTestNestedMessageHasBits:prototype];
}

@end

@interface TestNestedMessageHasBits_NestedMessage ()
@property (retain) NSMutableArray* mutableNestedmessageRepeatedInt32List;
@property (retain) NSMutableArray* mutableNestedmessageRepeatedForeignmessageList;
@end

@implementation TestNestedMessageHasBits_NestedMessage

@synthesize mutableNestedmessageRepeatedInt32List;
@synthesize mutableNestedmessageRepeatedForeignmessageList;
- (void) dealloc {
  self.mutableNestedmessageRepeatedInt32List = nil;
  self.mutableNestedmessageRepeatedForeignmessageList = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static TestNestedMessageHasBits_NestedMessage* defaultTestNestedMessageHasBits_NestedMessageInstance = nil;
+ (void) initialize {
  if (self == [TestNestedMessageHasBits_NestedMessage class]) {
    defaultTestNestedMessageHasBits_NestedMessageInstance = [[TestNestedMessageHasBits_NestedMessage alloc] init];
  }
}

+ (TestNestedMessageHasBits_NestedMessage*) defaultInstance {
  return defaultTestNestedMessageHasBits_NestedMessageInstance;
}

- (TestNestedMessageHasBits_NestedMessage*) defaultInstanceForType {
  return defaultTestNestedMessageHasBits_NestedMessageInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestNestedMessageHasBits_NestedMessage_fieldAccessorTable];
}

- (NSArray*) nestedmessageRepeatedInt32List {
  return mutableNestedmessageRepeatedInt32List;
}
- (int32_t) nestedmessageRepeatedInt32AtIndex:(int32_t) index {
  id value = [mutableNestedmessageRepeatedInt32List objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) nestedmessageRepeatedForeignmessageList {
  return mutableNestedmessageRepeatedForeignmessageList;
}
- (ForeignMessage*) nestedmessageRepeatedForeignmessageAtIndex:(int32_t) index {
  id value = [mutableNestedmessageRepeatedForeignmessageList objectAtIndex:index];
  return value;
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSNumber* value in self.mutableNestedmessageRepeatedInt32List) {
    [output writeInt32:1 value:[value intValue]];
  }
  for (ForeignMessage* element in self.nestedmessageRepeatedForeignmessageList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  for (NSNumber* value in self.mutableNestedmessageRepeatedInt32List) {
    size += computeInt32Size(1, [value intValue]);
  }
  for (ForeignMessage* element in self.nestedmessageRepeatedForeignmessageList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestNestedMessageHasBits_NestedMessage*) parseFromData:(NSData*) data {
  return (TestNestedMessageHasBits_NestedMessage*)[[[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromData:data] buildParsed];
}
+ (TestNestedMessageHasBits_NestedMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestNestedMessageHasBits_NestedMessage*)[[[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestNestedMessageHasBits_NestedMessage*) parseFromInputStream:(NSInputStream*) input {
  return (TestNestedMessageHasBits_NestedMessage*)[[[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestNestedMessageHasBits_NestedMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestNestedMessageHasBits_NestedMessage*)[[[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestNestedMessageHasBits_NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestNestedMessageHasBits_NestedMessage*)[[[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestNestedMessageHasBits_NestedMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestNestedMessageHasBits_NestedMessage*)[[[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestNestedMessageHasBits_NestedMessage_Builder*) newBuilder { return [[[TestNestedMessageHasBits_NestedMessage_Builder alloc] init] autorelease]; }
- (TestNestedMessageHasBits_NestedMessage_Builder*) newBuilderForType { return [TestNestedMessageHasBits_NestedMessage newBuilder]; }
+ (TestNestedMessageHasBits_NestedMessage_Builder*) newBuilderWithTestNestedMessageHasBits_NestedMessage:(TestNestedMessageHasBits_NestedMessage*) prototype {
  return [[TestNestedMessageHasBits_NestedMessage newBuilder] mergeFromTestNestedMessageHasBits_NestedMessage:prototype];
}

@end

@implementation TestNestedMessageHasBits_NestedMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestNestedMessageHasBits_NestedMessage alloc] init] autorelease];
  }
  return self;
}
- (TestNestedMessageHasBits_NestedMessage*) internalGetResult {
  return result;
}

- (TestNestedMessageHasBits_NestedMessage_Builder*) clear {
  self.result = [[[TestNestedMessageHasBits_NestedMessage alloc] init] autorelease];
  return self;
}

- (TestNestedMessageHasBits_NestedMessage_Builder*) clone {
  return (TestNestedMessageHasBits_NestedMessage_Builder*)[[[[TestNestedMessageHasBits_NestedMessage_Builder alloc] init] autorelease] mergeFromTestNestedMessageHasBits_NestedMessage:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestNestedMessageHasBits_NestedMessage descriptor];
}

- (TestNestedMessageHasBits_NestedMessage*) defaultInstanceForType {
  return [TestNestedMessageHasBits_NestedMessage defaultInstance];
}

- (TestNestedMessageHasBits_NestedMessage*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestNestedMessageHasBits_NestedMessage*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestNestedMessageHasBits_NestedMessage*) buildPartial {
  TestNestedMessageHasBits_NestedMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestNestedMessageHasBits_NestedMessage_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestNestedMessageHasBits_NestedMessage class]]) {
    return [self mergeFromTestNestedMessageHasBits_NestedMessage:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestNestedMessageHasBits_NestedMessage_Builder*) mergeFromTestNestedMessageHasBits_NestedMessage:(TestNestedMessageHasBits_NestedMessage*) other {
  if (other == [TestNestedMessageHasBits_NestedMessage defaultInstance]) return self;
  if (other.mutableNestedmessageRepeatedInt32List.count > 0) {
    if (result.mutableNestedmessageRepeatedInt32List == nil) {
      result.mutableNestedmessageRepeatedInt32List = [NSMutableArray array];
    }
    [result.mutableNestedmessageRepeatedInt32List addObjectsFromArray:other.mutableNestedmessageRepeatedInt32List];
  }
  if (other.mutableNestedmessageRepeatedForeignmessageList.count > 0) {
    if (result.mutableNestedmessageRepeatedForeignmessageList == nil) {
      result.mutableNestedmessageRepeatedForeignmessageList = [NSMutableArray array];
    }
    [result.mutableNestedmessageRepeatedForeignmessageList addObjectsFromArray:other.mutableNestedmessageRepeatedForeignmessageList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestNestedMessageHasBits_NestedMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestNestedMessageHasBits_NestedMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addNestedmessageRepeatedInt32:[input readInt32]];
        break;
      }
      case 18: {
        ForeignMessage_Builder* subBuilder = [ForeignMessage newBuilder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNestedmessageRepeatedForeignmessage:[subBuilder buildPartial]];
        break;
      }
    }
  }
}


- (NSArray*) nestedmessageRepeatedInt32List {
  if (result.mutableNestedmessageRepeatedInt32List == nil) { return [NSArray array]; }
  return result.mutableNestedmessageRepeatedInt32List;
}
- (int32_t) nestedmessageRepeatedInt32AtIndex:(int32_t) index {
  return [result nestedmessageRepeatedInt32AtIndex:index];
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) replaceNestedmessageRepeatedInt32AtIndex:(int32_t) index withNestedmessageRepeatedInt32:(int32_t) value {
  [result.mutableNestedmessageRepeatedInt32List replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) addNestedmessageRepeatedInt32:(int32_t) value {
  if (result.mutableNestedmessageRepeatedInt32List == nil) {
    result.mutableNestedmessageRepeatedInt32List = [NSMutableArray array];
  }
  [result.mutableNestedmessageRepeatedInt32List addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) addAllNestedmessageRepeatedInt32:(NSArray*) values {
  if (result.mutableNestedmessageRepeatedInt32List == nil) {
    result.mutableNestedmessageRepeatedInt32List = [NSMutableArray array];
  }
  [result.mutableNestedmessageRepeatedInt32List addObjectsFromArray:values];
  return self;
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) clearNestedmessageRepeatedInt32List {
  result.mutableNestedmessageRepeatedInt32List = nil;
  return self;
}

- (NSArray*) nestedmessageRepeatedForeignmessageList {
  if (result.mutableNestedmessageRepeatedForeignmessageList == nil) { return [NSArray array]; }
  return result.mutableNestedmessageRepeatedForeignmessageList;
}
- (ForeignMessage*) nestedmessageRepeatedForeignmessageAtIndex:(int32_t) index {
  return [result nestedmessageRepeatedForeignmessageAtIndex:index];
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) replaceNestedmessageRepeatedForeignmessageAtIndex:(int32_t) index withNestedmessageRepeatedForeignmessage:(ForeignMessage*) value {
  [result.mutableNestedmessageRepeatedForeignmessageList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) addAllNestedmessageRepeatedForeignmessage:(NSArray*) values {
  if (result.mutableNestedmessageRepeatedForeignmessageList == nil) {
    result.mutableNestedmessageRepeatedForeignmessageList = [NSMutableArray array];
  }
  [result.mutableNestedmessageRepeatedForeignmessageList addObjectsFromArray:values];
  return self;
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) clearNestedmessageRepeatedForeignmessageList {
  result.mutableNestedmessageRepeatedForeignmessageList = nil;
  return self;
}
- (TestNestedMessageHasBits_NestedMessage_Builder*) addNestedmessageRepeatedForeignmessage:(ForeignMessage*) value {
  if (result.mutableNestedmessageRepeatedForeignmessageList == nil) {
    result.mutableNestedmessageRepeatedForeignmessageList = [NSMutableArray array];
  }
  [result.mutableNestedmessageRepeatedForeignmessageList addObject:value];
  return self;
}
@end

@implementation TestNestedMessageHasBits_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestNestedMessageHasBits alloc] init] autorelease];
  }
  return self;
}
- (TestNestedMessageHasBits*) internalGetResult {
  return result;
}

- (TestNestedMessageHasBits_Builder*) clear {
  self.result = [[[TestNestedMessageHasBits alloc] init] autorelease];
  return self;
}

- (TestNestedMessageHasBits_Builder*) clone {
  return (TestNestedMessageHasBits_Builder*)[[[[TestNestedMessageHasBits_Builder alloc] init] autorelease] mergeFromTestNestedMessageHasBits:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestNestedMessageHasBits descriptor];
}

- (TestNestedMessageHasBits*) defaultInstanceForType {
  return [TestNestedMessageHasBits defaultInstance];
}

- (TestNestedMessageHasBits*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestNestedMessageHasBits*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestNestedMessageHasBits*) buildPartial {
  TestNestedMessageHasBits* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestNestedMessageHasBits_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestNestedMessageHasBits class]]) {
    return [self mergeFromTestNestedMessageHasBits:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestNestedMessageHasBits_Builder*) mergeFromTestNestedMessageHasBits:(TestNestedMessageHasBits*) other {
  if (other == [TestNestedMessageHasBits defaultInstance]) return self;
  if (other.hasOptionalNestedMessage) {
    [self mergeOptionalNestedMessage:other.optionalNestedMessage];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestNestedMessageHasBits_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestNestedMessageHasBits_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        TestNestedMessageHasBits_NestedMessage_Builder* subBuilder = [TestNestedMessageHasBits_NestedMessage newBuilder];
        if (self.hasOptionalNestedMessage) {
          [subBuilder mergeFromTestNestedMessageHasBits_NestedMessage:self.optionalNestedMessage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOptionalNestedMessage:[subBuilder buildPartial]];
        break;
      }
    }
  }
}


- (BOOL) hasOptionalNestedMessage {
  return result.hasOptionalNestedMessage;
}
- (TestNestedMessageHasBits_NestedMessage*) optionalNestedMessage {
  return result.optionalNestedMessage;
}
- (id<PBMessage_Builder>) setOptionalNestedMessage:(TestNestedMessageHasBits_NestedMessage*) value {
  result.hasOptionalNestedMessage = YES;
  result.optionalNestedMessage = value;
  return self;
}
- (id<PBMessage_Builder>) setOptionalNestedMessageBuilder:(TestNestedMessageHasBits_NestedMessage_Builder*) builderForValue {
  return [self setOptionalNestedMessage:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeOptionalNestedMessage:(TestNestedMessageHasBits_NestedMessage*) value {
  if (result.hasOptionalNestedMessage &&
      result.optionalNestedMessage != [TestNestedMessageHasBits_NestedMessage defaultInstance]) {
    result.optionalNestedMessage =
      [[[TestNestedMessageHasBits_NestedMessage newBuilderWithTestNestedMessageHasBits_NestedMessage:result.optionalNestedMessage] mergeFromTestNestedMessageHasBits_NestedMessage:value] buildPartial];
  } else {
    result.optionalNestedMessage = value;
  }
  result.hasOptionalNestedMessage = YES;
  return self;
}
- (id<PBMessage_Builder>) clearOptionalNestedMessage {
  result.hasOptionalNestedMessage = NO;
  result.optionalNestedMessage = [TestNestedMessageHasBits_NestedMessage defaultInstance];
  return self;
}
@end

@interface TestCamelCaseFieldNames ()
@property BOOL hasPrimitiveField;
@property int32_t primitiveField;
@property BOOL hasStringField;
@property (retain) NSString* stringField;
@property BOOL hasEnumField;
@property (retain) ForeignEnum* enumField;
@property BOOL hasMessageField;
@property (retain) ForeignMessage* messageField;
@property BOOL hasStringPieceField;
@property (retain) NSString* stringPieceField;
@property BOOL hasCordField;
@property (retain) NSString* cordField;
@property (retain) NSMutableArray* mutableRepeatedPrimitiveFieldList;
@property (retain) NSMutableArray* mutableRepeatedStringFieldList;
@property (retain) NSMutableArray* mutableRepeatedEnumFieldList;
@property (retain) NSMutableArray* mutableRepeatedMessageFieldList;
@property (retain) NSMutableArray* mutableRepeatedStringPieceFieldList;
@property (retain) NSMutableArray* mutableRepeatedCordFieldList;
@end

@implementation TestCamelCaseFieldNames

@synthesize hasPrimitiveField;
@synthesize primitiveField;
@synthesize hasStringField;
@synthesize stringField;
@synthesize hasEnumField;
@synthesize enumField;
@synthesize hasMessageField;
@synthesize messageField;
@synthesize hasStringPieceField;
@synthesize stringPieceField;
@synthesize hasCordField;
@synthesize cordField;
@synthesize mutableRepeatedPrimitiveFieldList;
@synthesize mutableRepeatedStringFieldList;
@synthesize mutableRepeatedEnumFieldList;
@synthesize mutableRepeatedMessageFieldList;
@synthesize mutableRepeatedStringPieceFieldList;
@synthesize mutableRepeatedCordFieldList;
- (void) dealloc {
  self.hasPrimitiveField = NO;
  self.primitiveField = 0;
  self.hasStringField = NO;
  self.stringField = nil;
  self.hasEnumField = NO;
  self.enumField = nil;
  self.hasMessageField = NO;
  self.messageField = nil;
  self.hasStringPieceField = NO;
  self.stringPieceField = nil;
  self.hasCordField = NO;
  self.cordField = nil;
  self.mutableRepeatedPrimitiveFieldList = nil;
  self.mutableRepeatedStringFieldList = nil;
  self.mutableRepeatedEnumFieldList = nil;
  self.mutableRepeatedMessageFieldList = nil;
  self.mutableRepeatedStringPieceFieldList = nil;
  self.mutableRepeatedCordFieldList = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.primitiveField = 0;
    self.stringField = @"";
    self.enumField = [ForeignEnum FOREIGN_FOO];
    self.stringPieceField = @"";
    self.cordField = @"";
  }
  return self;
}
static TestCamelCaseFieldNames* defaultTestCamelCaseFieldNamesInstance = nil;
+ (void) initialize {
  if (self == [TestCamelCaseFieldNames class]) {
    defaultTestCamelCaseFieldNamesInstance = [[TestCamelCaseFieldNames alloc] init];
  }
}

+ (TestCamelCaseFieldNames*) defaultInstance {
  return defaultTestCamelCaseFieldNamesInstance;
}

- (TestCamelCaseFieldNames*) defaultInstanceForType {
  return defaultTestCamelCaseFieldNamesInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestCamelCaseFieldNames_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestCamelCaseFieldNames_fieldAccessorTable];
}







- (NSArray*) repeatedPrimitiveFieldList {
  return mutableRepeatedPrimitiveFieldList;
}
- (int32_t) repeatedPrimitiveFieldAtIndex:(int32_t) index {
  id value = [mutableRepeatedPrimitiveFieldList objectAtIndex:index];
  return [value intValue];
}

- (NSArray*) repeatedStringFieldList {
  return mutableRepeatedStringFieldList;
}
- (NSString*) repeatedStringFieldAtIndex:(int32_t) index {
  id value = [mutableRepeatedStringFieldList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedEnumFieldList {
  return mutableRepeatedEnumFieldList;
}
- (ForeignEnum*) repeatedEnumFieldAtIndex:(int32_t) index {
  id value = [mutableRepeatedEnumFieldList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedMessageFieldList {
  return mutableRepeatedMessageFieldList;
}
- (ForeignMessage*) repeatedMessageFieldAtIndex:(int32_t) index {
  id value = [mutableRepeatedMessageFieldList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedStringPieceFieldList {
  return mutableRepeatedStringPieceFieldList;
}
- (NSString*) repeatedStringPieceFieldAtIndex:(int32_t) index {
  id value = [mutableRepeatedStringPieceFieldList objectAtIndex:index];
  return value;
}

- (NSArray*) repeatedCordFieldList {
  return mutableRepeatedCordFieldList;
}
- (NSString*) repeatedCordFieldAtIndex:(int32_t) index {
  id value = [mutableRepeatedCordFieldList objectAtIndex:index];
  return value;
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasPrimitiveField) {
    [output writeInt32:1 value:self.primitiveField];
  }
  if (hasStringField) {
    [output writeString:2 value:self.stringField];
  }
  if (self.hasEnumField) {
    [output writeEnum:3 value:self.enumField.number];
  }
  if (self.hasMessageField) {
    [output writeMessage:4 value:self.messageField];
  }
  if (hasStringPieceField) {
    [output writeString:5 value:self.stringPieceField];
  }
  if (hasCordField) {
    [output writeString:6 value:self.cordField];
  }
  for (NSNumber* value in self.mutableRepeatedPrimitiveFieldList) {
    [output writeInt32:7 value:[value intValue]];
  }
  for (NSString* element in self.mutableRepeatedStringFieldList) {
    [output writeString:8 value:element];
  }
  for (ForeignEnum* element in self.repeatedEnumFieldList) {
    [output writeEnum:9 value:element.number];
  }
  for (ForeignMessage* element in self.repeatedMessageFieldList) {
    [output writeMessage:10 value:element];
  }
  for (NSString* element in self.mutableRepeatedStringPieceFieldList) {
    [output writeString:11 value:element];
  }
  for (NSString* element in self.mutableRepeatedCordFieldList) {
    [output writeString:12 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasPrimitiveField) {
    size += computeInt32Size(1, self.primitiveField);
  }
  if (hasStringField) {
    size += computeStringSize(2, self.stringField);
  }
  if (self.hasEnumField) {
    size += computeEnumSize(3, self.enumField.number);
  }
  if (self.hasMessageField) {
    size += computeMessageSize(4, self.messageField);
  }
  if (hasStringPieceField) {
    size += computeStringSize(5, self.stringPieceField);
  }
  if (hasCordField) {
    size += computeStringSize(6, self.cordField);
  }
  for (NSNumber* value in self.mutableRepeatedPrimitiveFieldList) {
    size += computeInt32Size(7, [value intValue]);
  }
  for (NSString* element in self.mutableRepeatedStringFieldList) {
    size += computeStringSize(8, element);
  }
  for (ForeignEnum* element in self.repeatedEnumFieldList) {
    size += computeEnumSize(9, element.number);
  }
  for (ForeignMessage* element in self.repeatedMessageFieldList) {
    size += computeMessageSize(10, element);
  }
  for (NSString* element in self.mutableRepeatedStringPieceFieldList) {
    size += computeStringSize(11, element);
  }
  for (NSString* element in self.mutableRepeatedCordFieldList) {
    size += computeStringSize(12, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestCamelCaseFieldNames*) parseFromData:(NSData*) data {
  return (TestCamelCaseFieldNames*)[[[TestCamelCaseFieldNames newBuilder] mergeFromData:data] buildParsed];
}
+ (TestCamelCaseFieldNames*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestCamelCaseFieldNames*)[[[TestCamelCaseFieldNames newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestCamelCaseFieldNames*) parseFromInputStream:(NSInputStream*) input {
  return (TestCamelCaseFieldNames*)[[[TestCamelCaseFieldNames newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestCamelCaseFieldNames*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestCamelCaseFieldNames*)[[[TestCamelCaseFieldNames newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestCamelCaseFieldNames*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestCamelCaseFieldNames*)[[[TestCamelCaseFieldNames newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestCamelCaseFieldNames*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestCamelCaseFieldNames*)[[[TestCamelCaseFieldNames newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestCamelCaseFieldNames_Builder*) newBuilder { return [[[TestCamelCaseFieldNames_Builder alloc] init] autorelease]; }
- (TestCamelCaseFieldNames_Builder*) newBuilderForType { return [TestCamelCaseFieldNames newBuilder]; }
+ (TestCamelCaseFieldNames_Builder*) newBuilderWithTestCamelCaseFieldNames:(TestCamelCaseFieldNames*) prototype {
  return [[TestCamelCaseFieldNames newBuilder] mergeFromTestCamelCaseFieldNames:prototype];
}

@end

@implementation TestCamelCaseFieldNames_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestCamelCaseFieldNames alloc] init] autorelease];
  }
  return self;
}
- (TestCamelCaseFieldNames*) internalGetResult {
  return result;
}

- (TestCamelCaseFieldNames_Builder*) clear {
  self.result = [[[TestCamelCaseFieldNames alloc] init] autorelease];
  return self;
}

- (TestCamelCaseFieldNames_Builder*) clone {
  return (TestCamelCaseFieldNames_Builder*)[[[[TestCamelCaseFieldNames_Builder alloc] init] autorelease] mergeFromTestCamelCaseFieldNames:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestCamelCaseFieldNames descriptor];
}

- (TestCamelCaseFieldNames*) defaultInstanceForType {
  return [TestCamelCaseFieldNames defaultInstance];
}

- (TestCamelCaseFieldNames*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestCamelCaseFieldNames*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestCamelCaseFieldNames*) buildPartial {
  TestCamelCaseFieldNames* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestCamelCaseFieldNames_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestCamelCaseFieldNames class]]) {
    return [self mergeFromTestCamelCaseFieldNames:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestCamelCaseFieldNames_Builder*) mergeFromTestCamelCaseFieldNames:(TestCamelCaseFieldNames*) other {
  if (other == [TestCamelCaseFieldNames defaultInstance]) return self;
  if (other.hasPrimitiveField) {
    [self setPrimitiveField:other.primitiveField];
  }
  if (other.hasStringField) {
    [self setStringField:other.stringField];
  }
  if (other.hasEnumField) {
    [self setEnumField:other.enumField];
  }
  if (other.hasMessageField) {
    [self mergeMessageField:other.messageField];
  }
  if (other.hasStringPieceField) {
    [self setStringPieceField:other.stringPieceField];
  }
  if (other.hasCordField) {
    [self setCordField:other.cordField];
  }
  if (other.mutableRepeatedPrimitiveFieldList.count > 0) {
    if (result.mutableRepeatedPrimitiveFieldList == nil) {
      result.mutableRepeatedPrimitiveFieldList = [NSMutableArray array];
    }
    [result.mutableRepeatedPrimitiveFieldList addObjectsFromArray:other.mutableRepeatedPrimitiveFieldList];
  }
  if (other.mutableRepeatedStringFieldList.count > 0) {
    if (result.mutableRepeatedStringFieldList == nil) {
      result.mutableRepeatedStringFieldList = [NSMutableArray array];
    }
    [result.mutableRepeatedStringFieldList addObjectsFromArray:other.mutableRepeatedStringFieldList];
  }
  if (other.mutableRepeatedEnumFieldList.count > 0) {
    if (result.mutableRepeatedEnumFieldList == nil) {
      result.mutableRepeatedEnumFieldList = [NSMutableArray array];
    }
    [result.mutableRepeatedEnumFieldList addObjectsFromArray:other.mutableRepeatedEnumFieldList];
  }
  if (other.mutableRepeatedMessageFieldList.count > 0) {
    if (result.mutableRepeatedMessageFieldList == nil) {
      result.mutableRepeatedMessageFieldList = [NSMutableArray array];
    }
    [result.mutableRepeatedMessageFieldList addObjectsFromArray:other.mutableRepeatedMessageFieldList];
  }
  if (other.mutableRepeatedStringPieceFieldList.count > 0) {
    if (result.mutableRepeatedStringPieceFieldList == nil) {
      result.mutableRepeatedStringPieceFieldList = [NSMutableArray array];
    }
    [result.mutableRepeatedStringPieceFieldList addObjectsFromArray:other.mutableRepeatedStringPieceFieldList];
  }
  if (other.mutableRepeatedCordFieldList.count > 0) {
    if (result.mutableRepeatedCordFieldList == nil) {
      result.mutableRepeatedCordFieldList = [NSMutableArray array];
    }
    [result.mutableRepeatedCordFieldList addObjectsFromArray:other.mutableRepeatedCordFieldList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestCamelCaseFieldNames_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestCamelCaseFieldNames_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setPrimitiveField:[input readInt32]];
        break;
      }
      case 18: {
        [self setStringField:[input readString]];
        break;
      }
      case 24: {
        int32_t rawValue = [input readEnum];
        ForeignEnum* value = [ForeignEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:3 value:rawValue];
        } else {
          [self setEnumField:value];
        }
        break;
      }
      case 34: {
        ForeignMessage_Builder* subBuilder = [ForeignMessage newBuilder];
        if (self.hasMessageField) {
          [subBuilder mergeFromForeignMessage:self.messageField];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMessageField:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        [self setStringPieceField:[input readString]];
        break;
      }
      case 50: {
        [self setCordField:[input readString]];
        break;
      }
      case 56: {
        [self addRepeatedPrimitiveField:[input readInt32]];
        break;
      }
      case 66: {
        [self addRepeatedStringField:[input readString]];
        break;
      }
      case 72: {
        int32_t rawValue = [input readEnum];
        ForeignEnum* value = [ForeignEnum valueOf:rawValue];
        if (value == nil) {
          [unknownFields mergeVarintField:9 value:rawValue];
        } else {
          [self addRepeatedEnumField:value];
        }
        break;
      }
      case 82: {
        ForeignMessage_Builder* subBuilder = [ForeignMessage newBuilder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addRepeatedMessageField:[subBuilder buildPartial]];
        break;
      }
      case 90: {
        [self addRepeatedStringPieceField:[input readString]];
        break;
      }
      case 98: {
        [self addRepeatedCordField:[input readString]];
        break;
      }
    }
  }
}


- (BOOL) hasPrimitiveField {
  return result.hasPrimitiveField;
}
- (int32_t) primitiveField {
  return result.primitiveField;
}
- (TestCamelCaseFieldNames_Builder*) setPrimitiveField:(int32_t) value {
  result.hasPrimitiveField = YES;
  result.primitiveField = value;
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearPrimitiveField {
  result.hasPrimitiveField = NO;
  result.primitiveField = 0;
  return self;
}

- (BOOL) hasStringField {
  return result.hasStringField;
}
- (NSString*) stringField {
  return result.stringField;
}
- (TestCamelCaseFieldNames_Builder*) setStringField:(NSString*) value {
  result.hasStringField = YES;
  result.stringField = value;
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearStringField {
  result.hasStringField = NO;
  result.stringField = @"";
  return self;
}

- (BOOL) hasEnumField {
  return result.hasEnumField;
}
- (ForeignEnum*) enumField {
  return result.enumField;
}
- (TestCamelCaseFieldNames_Builder*) setEnumField:(ForeignEnum*) value {
  result.hasEnumField = YES;
  result.enumField = value;
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearEnumField {
  result.hasEnumField = NO;
  result.enumField = [ForeignEnum FOREIGN_FOO];
  return self;
}

- (BOOL) hasMessageField {
  return result.hasMessageField;
}
- (ForeignMessage*) messageField {
  return result.messageField;
}
- (id<PBMessage_Builder>) setMessageField:(ForeignMessage*) value {
  result.hasMessageField = YES;
  result.messageField = value;
  return self;
}
- (id<PBMessage_Builder>) setMessageFieldBuilder:(ForeignMessage_Builder*) builderForValue {
  return [self setMessageField:[builderForValue build]];
}
- (id<PBMessage_Builder>) mergeMessageField:(ForeignMessage*) value {
  if (result.hasMessageField &&
      result.messageField != [ForeignMessage defaultInstance]) {
    result.messageField =
      [[[ForeignMessage newBuilderWithForeignMessage:result.messageField] mergeFromForeignMessage:value] buildPartial];
  } else {
    result.messageField = value;
  }
  result.hasMessageField = YES;
  return self;
}
- (id<PBMessage_Builder>) clearMessageField {
  result.hasMessageField = NO;
  result.messageField = [ForeignMessage defaultInstance];
  return self;
}

- (BOOL) hasStringPieceField {
  return result.hasStringPieceField;
}
- (NSString*) stringPieceField {
  return result.stringPieceField;
}
- (TestCamelCaseFieldNames_Builder*) setStringPieceField:(NSString*) value {
  result.hasStringPieceField = YES;
  result.stringPieceField = value;
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearStringPieceField {
  result.hasStringPieceField = NO;
  result.stringPieceField = @"";
  return self;
}

- (BOOL) hasCordField {
  return result.hasCordField;
}
- (NSString*) cordField {
  return result.cordField;
}
- (TestCamelCaseFieldNames_Builder*) setCordField:(NSString*) value {
  result.hasCordField = YES;
  result.cordField = value;
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearCordField {
  result.hasCordField = NO;
  result.cordField = @"";
  return self;
}

- (NSArray*) repeatedPrimitiveFieldList {
  if (result.mutableRepeatedPrimitiveFieldList == nil) { return [NSArray array]; }
  return result.mutableRepeatedPrimitiveFieldList;
}
- (int32_t) repeatedPrimitiveFieldAtIndex:(int32_t) index {
  return [result repeatedPrimitiveFieldAtIndex:index];
}
- (TestCamelCaseFieldNames_Builder*) replaceRepeatedPrimitiveFieldAtIndex:(int32_t) index withRepeatedPrimitiveField:(int32_t) value {
  [result.mutableRepeatedPrimitiveFieldList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addRepeatedPrimitiveField:(int32_t) value {
  if (result.mutableRepeatedPrimitiveFieldList == nil) {
    result.mutableRepeatedPrimitiveFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedPrimitiveFieldList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addAllRepeatedPrimitiveField:(NSArray*) values {
  if (result.mutableRepeatedPrimitiveFieldList == nil) {
    result.mutableRepeatedPrimitiveFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedPrimitiveFieldList addObjectsFromArray:values];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearRepeatedPrimitiveFieldList {
  result.mutableRepeatedPrimitiveFieldList = nil;
  return self;
}

- (NSArray*) repeatedStringFieldList {
  if (result.mutableRepeatedStringFieldList == nil) { return [NSArray array]; }
  return result.mutableRepeatedStringFieldList;
}
- (NSString*) repeatedStringFieldAtIndex:(int32_t) index {
  return [result repeatedStringFieldAtIndex:index];
}
- (TestCamelCaseFieldNames_Builder*) replaceRepeatedStringFieldAtIndex:(int32_t) index withRepeatedStringField:(NSString*) value {
  [result.mutableRepeatedStringFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addRepeatedStringField:(NSString*) value {
  if (result.mutableRepeatedStringFieldList == nil) {
    result.mutableRepeatedStringFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringFieldList addObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addAllRepeatedStringField:(NSArray*) values {
  if (result.mutableRepeatedStringFieldList == nil) {
    result.mutableRepeatedStringFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringFieldList addObjectsFromArray:values];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearRepeatedStringFieldList {
  result.mutableRepeatedStringFieldList = nil;
  return self;
}

- (NSArray*) repeatedEnumFieldList {
  return result.mutableRepeatedEnumFieldList;
}
- (ForeignEnum*) repeatedEnumFieldAtIndex:(int32_t) index {
  return [result repeatedEnumFieldAtIndex:index];
}
- (TestCamelCaseFieldNames_Builder*) replaceRepeatedEnumFieldAtIndex:(int32_t) index withRepeatedEnumField:(ForeignEnum*) value {
  [result.mutableRepeatedEnumFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addRepeatedEnumField:(ForeignEnum*) value {
  if (result.mutableRepeatedEnumFieldList == nil) {
    result.mutableRepeatedEnumFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedEnumFieldList addObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addAllRepeatedEnumField:(NSArray*) values {
  if (result.mutableRepeatedEnumFieldList == nil) {
    result.mutableRepeatedEnumFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedEnumFieldList addObjectsFromArray:values];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearRepeatedEnumFieldList {
  result.mutableRepeatedEnumFieldList = nil;
  return self;
}

- (NSArray*) repeatedMessageFieldList {
  if (result.mutableRepeatedMessageFieldList == nil) { return [NSArray array]; }
  return result.mutableRepeatedMessageFieldList;
}
- (ForeignMessage*) repeatedMessageFieldAtIndex:(int32_t) index {
  return [result repeatedMessageFieldAtIndex:index];
}
- (TestCamelCaseFieldNames_Builder*) replaceRepeatedMessageFieldAtIndex:(int32_t) index withRepeatedMessageField:(ForeignMessage*) value {
  [result.mutableRepeatedMessageFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addAllRepeatedMessageField:(NSArray*) values {
  if (result.mutableRepeatedMessageFieldList == nil) {
    result.mutableRepeatedMessageFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedMessageFieldList addObjectsFromArray:values];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearRepeatedMessageFieldList {
  result.mutableRepeatedMessageFieldList = nil;
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addRepeatedMessageField:(ForeignMessage*) value {
  if (result.mutableRepeatedMessageFieldList == nil) {
    result.mutableRepeatedMessageFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedMessageFieldList addObject:value];
  return self;
}

- (NSArray*) repeatedStringPieceFieldList {
  if (result.mutableRepeatedStringPieceFieldList == nil) { return [NSArray array]; }
  return result.mutableRepeatedStringPieceFieldList;
}
- (NSString*) repeatedStringPieceFieldAtIndex:(int32_t) index {
  return [result repeatedStringPieceFieldAtIndex:index];
}
- (TestCamelCaseFieldNames_Builder*) replaceRepeatedStringPieceFieldAtIndex:(int32_t) index withRepeatedStringPieceField:(NSString*) value {
  [result.mutableRepeatedStringPieceFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addRepeatedStringPieceField:(NSString*) value {
  if (result.mutableRepeatedStringPieceFieldList == nil) {
    result.mutableRepeatedStringPieceFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringPieceFieldList addObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addAllRepeatedStringPieceField:(NSArray*) values {
  if (result.mutableRepeatedStringPieceFieldList == nil) {
    result.mutableRepeatedStringPieceFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedStringPieceFieldList addObjectsFromArray:values];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearRepeatedStringPieceFieldList {
  result.mutableRepeatedStringPieceFieldList = nil;
  return self;
}

- (NSArray*) repeatedCordFieldList {
  if (result.mutableRepeatedCordFieldList == nil) { return [NSArray array]; }
  return result.mutableRepeatedCordFieldList;
}
- (NSString*) repeatedCordFieldAtIndex:(int32_t) index {
  return [result repeatedCordFieldAtIndex:index];
}
- (TestCamelCaseFieldNames_Builder*) replaceRepeatedCordFieldAtIndex:(int32_t) index withRepeatedCordField:(NSString*) value {
  [result.mutableRepeatedCordFieldList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addRepeatedCordField:(NSString*) value {
  if (result.mutableRepeatedCordFieldList == nil) {
    result.mutableRepeatedCordFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedCordFieldList addObject:value];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) addAllRepeatedCordField:(NSArray*) values {
  if (result.mutableRepeatedCordFieldList == nil) {
    result.mutableRepeatedCordFieldList = [NSMutableArray array];
  }
  [result.mutableRepeatedCordFieldList addObjectsFromArray:values];
  return self;
}
- (TestCamelCaseFieldNames_Builder*) clearRepeatedCordFieldList {
  result.mutableRepeatedCordFieldList = nil;
  return self;
}
@end

@interface TestFieldOrderings ()
@property BOOL hasMyString;
@property (retain) NSString* myString;
@property BOOL hasMyInt;
@property int64_t myInt;
@property BOOL hasMyFloat;
@property Float32 myFloat;
@end

@implementation TestFieldOrderings

@synthesize hasMyString;
@synthesize myString;
@synthesize hasMyInt;
@synthesize myInt;
@synthesize hasMyFloat;
@synthesize myFloat;
- (void) dealloc {
  self.hasMyString = NO;
  self.myString = nil;
  self.hasMyInt = NO;
  self.myInt = 0;
  self.hasMyFloat = NO;
  self.myFloat = 0;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.myString = @"";
    self.myInt = 0L;
    self.myFloat = 0;
  }
  return self;
}
static TestFieldOrderings* defaultTestFieldOrderingsInstance = nil;
+ (void) initialize {
  if (self == [TestFieldOrderings class]) {
    defaultTestFieldOrderingsInstance = [[TestFieldOrderings alloc] init];
  }
}

+ (TestFieldOrderings*) defaultInstance {
  return defaultTestFieldOrderingsInstance;
}

- (TestFieldOrderings*) defaultInstanceForType {
  return defaultTestFieldOrderingsInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestFieldOrderings_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestFieldOrderings_fieldAccessorTable];
}




- (BOOL) isInitialized {
  if (!self.extensionsAreInitialized) return false;
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  PBExtensionWriter* extensionWriter = [PBExtensionWriter writerWithExtensions:self.extensions];
  if (hasMyInt) {
    [output writeInt64:1 value:self.myInt];
  }
  [extensionWriter writeUntil:11 output:output];
  if (hasMyString) {
    [output writeString:11 value:self.myString];
  }
  [extensionWriter writeUntil:101 output:output];
  if (hasMyFloat) {
    [output writeFloat:101 value:self.myFloat];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasMyInt) {
    size += computeInt64Size(1, self.myInt);
  }
  if (hasMyString) {
    size += computeStringSize(11, self.myString);
  }
  if (hasMyFloat) {
    size += computeFloatSize(101, self.myFloat);
  }
  size += [self extensionsSerializedSize];
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestFieldOrderings*) parseFromData:(NSData*) data {
  return (TestFieldOrderings*)[[[TestFieldOrderings newBuilder] mergeFromData:data] buildParsed];
}
+ (TestFieldOrderings*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestFieldOrderings*)[[[TestFieldOrderings newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestFieldOrderings*) parseFromInputStream:(NSInputStream*) input {
  return (TestFieldOrderings*)[[[TestFieldOrderings newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestFieldOrderings*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestFieldOrderings*)[[[TestFieldOrderings newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestFieldOrderings*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestFieldOrderings*)[[[TestFieldOrderings newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestFieldOrderings*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestFieldOrderings*)[[[TestFieldOrderings newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestFieldOrderings_Builder*) newBuilder { return [[[TestFieldOrderings_Builder alloc] init] autorelease]; }
- (TestFieldOrderings_Builder*) newBuilderForType { return [TestFieldOrderings newBuilder]; }
+ (TestFieldOrderings_Builder*) newBuilderWithTestFieldOrderings:(TestFieldOrderings*) prototype {
  return [[TestFieldOrderings newBuilder] mergeFromTestFieldOrderings:prototype];
}

@end

@implementation TestFieldOrderings_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestFieldOrderings alloc] init] autorelease];
  }
  return self;
}
- (TestFieldOrderings*) internalGetResult {
  return result;
}

- (TestFieldOrderings_Builder*) clear {
  self.result = [[[TestFieldOrderings alloc] init] autorelease];
  return self;
}

- (TestFieldOrderings_Builder*) clone {
  return (TestFieldOrderings_Builder*)[[[[TestFieldOrderings_Builder alloc] init] autorelease] mergeFromTestFieldOrderings:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestFieldOrderings descriptor];
}

- (TestFieldOrderings*) defaultInstanceForType {
  return [TestFieldOrderings defaultInstance];
}

- (TestFieldOrderings*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestFieldOrderings*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestFieldOrderings*) buildPartial {
  TestFieldOrderings* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestFieldOrderings_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestFieldOrderings class]]) {
    return [self mergeFromTestFieldOrderings:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestFieldOrderings_Builder*) mergeFromTestFieldOrderings:(TestFieldOrderings*) other {
  if (other == [TestFieldOrderings defaultInstance]) return self;
  if (other.hasMyString) {
    [self setMyString:other.myString];
  }
  if (other.hasMyInt) {
    [self setMyInt:other.myInt];
  }
  if (other.hasMyFloat) {
    [self setMyFloat:other.myFloat];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestFieldOrderings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestFieldOrderings_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setMyInt:[input readInt64]];
        break;
      }
      case 90: {
        [self setMyString:[input readString]];
        break;
      }
      case 813: {
        [self setMyFloat:[input readFloat]];
        break;
      }
    }
  }
}


- (BOOL) hasMyString {
  return result.hasMyString;
}
- (NSString*) myString {
  return result.myString;
}
- (TestFieldOrderings_Builder*) setMyString:(NSString*) value {
  result.hasMyString = YES;
  result.myString = value;
  return self;
}
- (TestFieldOrderings_Builder*) clearMyString {
  result.hasMyString = NO;
  result.myString = @"";
  return self;
}

- (BOOL) hasMyInt {
  return result.hasMyInt;
}
- (int64_t) myInt {
  return result.myInt;
}
- (TestFieldOrderings_Builder*) setMyInt:(int64_t) value {
  result.hasMyInt = YES;
  result.myInt = value;
  return self;
}
- (TestFieldOrderings_Builder*) clearMyInt {
  result.hasMyInt = NO;
  result.myInt = 0L;
  return self;
}

- (BOOL) hasMyFloat {
  return result.hasMyFloat;
}
- (Float32) myFloat {
  return result.myFloat;
}
- (TestFieldOrderings_Builder*) setMyFloat:(Float32) value {
  result.hasMyFloat = YES;
  result.myFloat = value;
  return self;
}
- (TestFieldOrderings_Builder*) clearMyFloat {
  result.hasMyFloat = NO;
  result.myFloat = 0;
  return self;
}
@end

@interface TestExtremeDefaultValues ()
@property BOOL hasEscapedBytes;
@property (retain) NSData* escapedBytes;
@property BOOL hasLargeUint32;
@property int32_t largeUint32;
@property BOOL hasLargeUint64;
@property int64_t largeUint64;
@property BOOL hasSmallInt32;
@property int32_t smallInt32;
@property BOOL hasSmallInt64;
@property int64_t smallInt64;
@property BOOL hasUtf8String;
@property (retain) NSString* utf8String;
@end

@implementation TestExtremeDefaultValues

@synthesize hasEscapedBytes;
@synthesize escapedBytes;
@synthesize hasLargeUint32;
@synthesize largeUint32;
@synthesize hasLargeUint64;
@synthesize largeUint64;
@synthesize hasSmallInt32;
@synthesize smallInt32;
@synthesize hasSmallInt64;
@synthesize smallInt64;
@synthesize hasUtf8String;
@synthesize utf8String;
- (void) dealloc {
  self.hasEscapedBytes = NO;
  self.escapedBytes = nil;
  self.hasLargeUint32 = NO;
  self.largeUint32 = 0;
  self.hasLargeUint64 = NO;
  self.largeUint64 = 0;
  self.hasSmallInt32 = NO;
  self.smallInt32 = 0;
  self.hasSmallInt64 = NO;
  self.smallInt64 = 0;
  self.hasUtf8String = NO;
  self.utf8String = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
    self.escapedBytes = ([[[TestExtremeDefaultValues descriptor].fields objectAtIndex:0] defaultValue]);
    self.largeUint32 = -1;
    self.largeUint64 = -1L;
    self.smallInt32 = -2147483647;
    self.smallInt64 = -9223372036854775807L;
    self.utf8String = ([[[TestExtremeDefaultValues descriptor].fields objectAtIndex:5] defaultValue]);
  }
  return self;
}
static TestExtremeDefaultValues* defaultTestExtremeDefaultValuesInstance = nil;
+ (void) initialize {
  if (self == [TestExtremeDefaultValues class]) {
    defaultTestExtremeDefaultValuesInstance = [[TestExtremeDefaultValues alloc] init];
  }
}

+ (TestExtremeDefaultValues*) defaultInstance {
  return defaultTestExtremeDefaultValuesInstance;
}

- (TestExtremeDefaultValues*) defaultInstanceForType {
  return defaultTestExtremeDefaultValuesInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestExtremeDefaultValues_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_TestExtremeDefaultValues_fieldAccessorTable];
}







- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (hasEscapedBytes) {
    [output writeData:1 value:self.escapedBytes];
  }
  if (hasLargeUint32) {
    [output writeUInt32:2 value:self.largeUint32];
  }
  if (hasLargeUint64) {
    [output writeUInt64:3 value:self.largeUint64];
  }
  if (hasSmallInt32) {
    [output writeInt32:4 value:self.smallInt32];
  }
  if (hasSmallInt64) {
    [output writeInt64:5 value:self.smallInt64];
  }
  if (hasUtf8String) {
    [output writeString:6 value:self.utf8String];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  if (hasEscapedBytes) {
    size += computeDataSize(1, self.escapedBytes);
  }
  if (hasLargeUint32) {
    size += computeUInt32Size(2, self.largeUint32);
  }
  if (hasLargeUint64) {
    size += computeUInt64Size(3, self.largeUint64);
  }
  if (hasSmallInt32) {
    size += computeInt32Size(4, self.smallInt32);
  }
  if (hasSmallInt64) {
    size += computeInt64Size(5, self.smallInt64);
  }
  if (hasUtf8String) {
    size += computeStringSize(6, self.utf8String);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (TestExtremeDefaultValues*) parseFromData:(NSData*) data {
  return (TestExtremeDefaultValues*)[[[TestExtremeDefaultValues newBuilder] mergeFromData:data] buildParsed];
}
+ (TestExtremeDefaultValues*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestExtremeDefaultValues*)[[[TestExtremeDefaultValues newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestExtremeDefaultValues*) parseFromInputStream:(NSInputStream*) input {
  return (TestExtremeDefaultValues*)[[[TestExtremeDefaultValues newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (TestExtremeDefaultValues*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestExtremeDefaultValues*)[[[TestExtremeDefaultValues newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (TestExtremeDefaultValues*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (TestExtremeDefaultValues*)[[[TestExtremeDefaultValues newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (TestExtremeDefaultValues*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (TestExtremeDefaultValues*)[[[TestExtremeDefaultValues newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (TestExtremeDefaultValues_Builder*) newBuilder { return [[[TestExtremeDefaultValues_Builder alloc] init] autorelease]; }
- (TestExtremeDefaultValues_Builder*) newBuilderForType { return [TestExtremeDefaultValues newBuilder]; }
+ (TestExtremeDefaultValues_Builder*) newBuilderWithTestExtremeDefaultValues:(TestExtremeDefaultValues*) prototype {
  return [[TestExtremeDefaultValues newBuilder] mergeFromTestExtremeDefaultValues:prototype];
}

@end

@implementation TestExtremeDefaultValues_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[TestExtremeDefaultValues alloc] init] autorelease];
  }
  return self;
}
- (TestExtremeDefaultValues*) internalGetResult {
  return result;
}

- (TestExtremeDefaultValues_Builder*) clear {
  self.result = [[[TestExtremeDefaultValues alloc] init] autorelease];
  return self;
}

- (TestExtremeDefaultValues_Builder*) clone {
  return (TestExtremeDefaultValues_Builder*)[[[[TestExtremeDefaultValues_Builder alloc] init] autorelease] mergeFromTestExtremeDefaultValues:result];
}

- (PBDescriptor*) descriptorForType {
  return [TestExtremeDefaultValues descriptor];
}

- (TestExtremeDefaultValues*) defaultInstanceForType {
  return [TestExtremeDefaultValues defaultInstance];
}

- (TestExtremeDefaultValues*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestExtremeDefaultValues*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (TestExtremeDefaultValues*) buildPartial {
  TestExtremeDefaultValues* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (TestExtremeDefaultValues_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[TestExtremeDefaultValues class]]) {
    return [self mergeFromTestExtremeDefaultValues:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (TestExtremeDefaultValues_Builder*) mergeFromTestExtremeDefaultValues:(TestExtremeDefaultValues*) other {
  if (other == [TestExtremeDefaultValues defaultInstance]) return self;
  if (other.hasEscapedBytes) {
    [self setEscapedBytes:other.escapedBytes];
  }
  if (other.hasLargeUint32) {
    [self setLargeUint32:other.largeUint32];
  }
  if (other.hasLargeUint64) {
    [self setLargeUint64:other.largeUint64];
  }
  if (other.hasSmallInt32) {
    [self setSmallInt32:other.smallInt32];
  }
  if (other.hasSmallInt64) {
    [self setSmallInt64:other.smallInt64];
  }
  if (other.hasUtf8String) {
    [self setUtf8String:other.utf8String];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (TestExtremeDefaultValues_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (TestExtremeDefaultValues_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setEscapedBytes:[input readData]];
        break;
      }
      case 16: {
        [self setLargeUint32:[input readUInt32]];
        break;
      }
      case 24: {
        [self setLargeUint64:[input readUInt64]];
        break;
      }
      case 32: {
        [self setSmallInt32:[input readInt32]];
        break;
      }
      case 40: {
        [self setSmallInt64:[input readInt64]];
        break;
      }
      case 50: {
        [self setUtf8String:[input readString]];
        break;
      }
    }
  }
}


- (BOOL) hasEscapedBytes {
  return result.hasEscapedBytes;
}
- (NSData*) escapedBytes {
  return result.escapedBytes;
}
- (TestExtremeDefaultValues_Builder*) setEscapedBytes:(NSData*) value {
  result.hasEscapedBytes = YES;
  result.escapedBytes = value;
  return self;
}
- (TestExtremeDefaultValues_Builder*) clearEscapedBytes {
  result.hasEscapedBytes = NO;
  result.escapedBytes = ([[[TestExtremeDefaultValues descriptor].fields objectAtIndex:0] defaultValue]);
  return self;
}

- (BOOL) hasLargeUint32 {
  return result.hasLargeUint32;
}
- (int32_t) largeUint32 {
  return result.largeUint32;
}
- (TestExtremeDefaultValues_Builder*) setLargeUint32:(int32_t) value {
  result.hasLargeUint32 = YES;
  result.largeUint32 = value;
  return self;
}
- (TestExtremeDefaultValues_Builder*) clearLargeUint32 {
  result.hasLargeUint32 = NO;
  result.largeUint32 = -1;
  return self;
}

- (BOOL) hasLargeUint64 {
  return result.hasLargeUint64;
}
- (int64_t) largeUint64 {
  return result.largeUint64;
}
- (TestExtremeDefaultValues_Builder*) setLargeUint64:(int64_t) value {
  result.hasLargeUint64 = YES;
  result.largeUint64 = value;
  return self;
}
- (TestExtremeDefaultValues_Builder*) clearLargeUint64 {
  result.hasLargeUint64 = NO;
  result.largeUint64 = -1L;
  return self;
}

- (BOOL) hasSmallInt32 {
  return result.hasSmallInt32;
}
- (int32_t) smallInt32 {
  return result.smallInt32;
}
- (TestExtremeDefaultValues_Builder*) setSmallInt32:(int32_t) value {
  result.hasSmallInt32 = YES;
  result.smallInt32 = value;
  return self;
}
- (TestExtremeDefaultValues_Builder*) clearSmallInt32 {
  result.hasSmallInt32 = NO;
  result.smallInt32 = -2147483647;
  return self;
}

- (BOOL) hasSmallInt64 {
  return result.hasSmallInt64;
}
- (int64_t) smallInt64 {
  return result.smallInt64;
}
- (TestExtremeDefaultValues_Builder*) setSmallInt64:(int64_t) value {
  result.hasSmallInt64 = YES;
  result.smallInt64 = value;
  return self;
}
- (TestExtremeDefaultValues_Builder*) clearSmallInt64 {
  result.hasSmallInt64 = NO;
  result.smallInt64 = -9223372036854775807L;
  return self;
}

- (BOOL) hasUtf8String {
  return result.hasUtf8String;
}
- (NSString*) utf8String {
  return result.utf8String;
}
- (TestExtremeDefaultValues_Builder*) setUtf8String:(NSString*) value {
  result.hasUtf8String = YES;
  result.utf8String = value;
  return self;
}
- (TestExtremeDefaultValues_Builder*) clearUtf8String {
  result.hasUtf8String = NO;
  result.utf8String = ([[[TestExtremeDefaultValues descriptor].fields objectAtIndex:5] defaultValue]);
  return self;
}
@end

@interface FooRequest ()
@end

@implementation FooRequest

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static FooRequest* defaultFooRequestInstance = nil;
+ (void) initialize {
  if (self == [FooRequest class]) {
    defaultFooRequestInstance = [[FooRequest alloc] init];
  }
}

+ (FooRequest*) defaultInstance {
  return defaultFooRequestInstance;
}

- (FooRequest*) defaultInstanceForType {
  return defaultFooRequestInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_FooRequest_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_FooRequest_fieldAccessorTable];
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (FooRequest*) parseFromData:(NSData*) data {
  return (FooRequest*)[[[FooRequest newBuilder] mergeFromData:data] buildParsed];
}
+ (FooRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FooRequest*)[[[FooRequest newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (FooRequest*) parseFromInputStream:(NSInputStream*) input {
  return (FooRequest*)[[[FooRequest newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (FooRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FooRequest*)[[[FooRequest newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (FooRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FooRequest*)[[[FooRequest newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (FooRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FooRequest*)[[[FooRequest newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (FooRequest_Builder*) newBuilder { return [[[FooRequest_Builder alloc] init] autorelease]; }
- (FooRequest_Builder*) newBuilderForType { return [FooRequest newBuilder]; }
+ (FooRequest_Builder*) newBuilderWithFooRequest:(FooRequest*) prototype {
  return [[FooRequest newBuilder] mergeFromFooRequest:prototype];
}

@end

@implementation FooRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[FooRequest alloc] init] autorelease];
  }
  return self;
}
- (FooRequest*) internalGetResult {
  return result;
}

- (FooRequest_Builder*) clear {
  self.result = [[[FooRequest alloc] init] autorelease];
  return self;
}

- (FooRequest_Builder*) clone {
  return (FooRequest_Builder*)[[[[FooRequest_Builder alloc] init] autorelease] mergeFromFooRequest:result];
}

- (PBDescriptor*) descriptorForType {
  return [FooRequest descriptor];
}

- (FooRequest*) defaultInstanceForType {
  return [FooRequest defaultInstance];
}

- (FooRequest*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (FooRequest*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (FooRequest*) buildPartial {
  FooRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (FooRequest_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[FooRequest class]]) {
    return [self mergeFromFooRequest:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (FooRequest_Builder*) mergeFromFooRequest:(FooRequest*) other {
  if (other == [FooRequest defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (FooRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (FooRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@interface FooResponse ()
@end

@implementation FooResponse

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static FooResponse* defaultFooResponseInstance = nil;
+ (void) initialize {
  if (self == [FooResponse class]) {
    defaultFooResponseInstance = [[FooResponse alloc] init];
  }
}

+ (FooResponse*) defaultInstance {
  return defaultFooResponseInstance;
}

- (FooResponse*) defaultInstanceForType {
  return defaultFooResponseInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_FooResponse_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_FooResponse_fieldAccessorTable];
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (FooResponse*) parseFromData:(NSData*) data {
  return (FooResponse*)[[[FooResponse newBuilder] mergeFromData:data] buildParsed];
}
+ (FooResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FooResponse*)[[[FooResponse newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (FooResponse*) parseFromInputStream:(NSInputStream*) input {
  return (FooResponse*)[[[FooResponse newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (FooResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FooResponse*)[[[FooResponse newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (FooResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FooResponse*)[[[FooResponse newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (FooResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FooResponse*)[[[FooResponse newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (FooResponse_Builder*) newBuilder { return [[[FooResponse_Builder alloc] init] autorelease]; }
- (FooResponse_Builder*) newBuilderForType { return [FooResponse newBuilder]; }
+ (FooResponse_Builder*) newBuilderWithFooResponse:(FooResponse*) prototype {
  return [[FooResponse newBuilder] mergeFromFooResponse:prototype];
}

@end

@implementation FooResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[FooResponse alloc] init] autorelease];
  }
  return self;
}
- (FooResponse*) internalGetResult {
  return result;
}

- (FooResponse_Builder*) clear {
  self.result = [[[FooResponse alloc] init] autorelease];
  return self;
}

- (FooResponse_Builder*) clone {
  return (FooResponse_Builder*)[[[[FooResponse_Builder alloc] init] autorelease] mergeFromFooResponse:result];
}

- (PBDescriptor*) descriptorForType {
  return [FooResponse descriptor];
}

- (FooResponse*) defaultInstanceForType {
  return [FooResponse defaultInstance];
}

- (FooResponse*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (FooResponse*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (FooResponse*) buildPartial {
  FooResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (FooResponse_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[FooResponse class]]) {
    return [self mergeFromFooResponse:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (FooResponse_Builder*) mergeFromFooResponse:(FooResponse*) other {
  if (other == [FooResponse defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (FooResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (FooResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@interface BarRequest ()
@end

@implementation BarRequest

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static BarRequest* defaultBarRequestInstance = nil;
+ (void) initialize {
  if (self == [BarRequest class]) {
    defaultBarRequestInstance = [[BarRequest alloc] init];
  }
}

+ (BarRequest*) defaultInstance {
  return defaultBarRequestInstance;
}

- (BarRequest*) defaultInstanceForType {
  return defaultBarRequestInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_BarRequest_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_BarRequest_fieldAccessorTable];
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (BarRequest*) parseFromData:(NSData*) data {
  return (BarRequest*)[[[BarRequest newBuilder] mergeFromData:data] buildParsed];
}
+ (BarRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BarRequest*)[[[BarRequest newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (BarRequest*) parseFromInputStream:(NSInputStream*) input {
  return (BarRequest*)[[[BarRequest newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (BarRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BarRequest*)[[[BarRequest newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (BarRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BarRequest*)[[[BarRequest newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (BarRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BarRequest*)[[[BarRequest newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (BarRequest_Builder*) newBuilder { return [[[BarRequest_Builder alloc] init] autorelease]; }
- (BarRequest_Builder*) newBuilderForType { return [BarRequest newBuilder]; }
+ (BarRequest_Builder*) newBuilderWithBarRequest:(BarRequest*) prototype {
  return [[BarRequest newBuilder] mergeFromBarRequest:prototype];
}

@end

@implementation BarRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[BarRequest alloc] init] autorelease];
  }
  return self;
}
- (BarRequest*) internalGetResult {
  return result;
}

- (BarRequest_Builder*) clear {
  self.result = [[[BarRequest alloc] init] autorelease];
  return self;
}

- (BarRequest_Builder*) clone {
  return (BarRequest_Builder*)[[[[BarRequest_Builder alloc] init] autorelease] mergeFromBarRequest:result];
}

- (PBDescriptor*) descriptorForType {
  return [BarRequest descriptor];
}

- (BarRequest*) defaultInstanceForType {
  return [BarRequest defaultInstance];
}

- (BarRequest*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (BarRequest*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (BarRequest*) buildPartial {
  BarRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (BarRequest_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[BarRequest class]]) {
    return [self mergeFromBarRequest:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (BarRequest_Builder*) mergeFromBarRequest:(BarRequest*) other {
  if (other == [BarRequest defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (BarRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (BarRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@interface BarResponse ()
@end

@implementation BarResponse

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    memoizedSerializedSize = -1;
  }
  return self;
}
static BarResponse* defaultBarResponseInstance = nil;
+ (void) initialize {
  if (self == [BarResponse class]) {
    defaultBarResponseInstance = [[BarResponse alloc] init];
  }
}

+ (BarResponse*) defaultInstance {
  return defaultBarResponseInstance;
}

- (BarResponse*) defaultInstanceForType {
  return defaultBarResponseInstance;
}

+ (PBDescriptor*) descriptor {
  return [UnittestProtoRoot internal_static_protobuf_unittest_BarResponse_descriptor];
}

- (PBFieldAccessorTable*) internalGetFieldAccessorTable {
  return [UnittestProtoRoot internal_static_protobuf_unittest_BarResponse_fieldAccessorTable];
}

- (BOOL) isInitialized {
  return true;
}

- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}

- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) return size;

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}

+ (BarResponse*) parseFromData:(NSData*) data {
  return (BarResponse*)[[[BarResponse newBuilder] mergeFromData:data] buildParsed];
}
+ (BarResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BarResponse*)[[[BarResponse newBuilder] mergeFromData:data extensionRegistry:extensionRegistry] buildParsed];
}
+ (BarResponse*) parseFromInputStream:(NSInputStream*) input {
  return (BarResponse*)[[[BarResponse newBuilder] mergeFromInputStream:input] buildParsed];
}
+ (BarResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BarResponse*)[[[BarResponse newBuilder] mergeFromInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}
+ (BarResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (BarResponse*)[[[BarResponse newBuilder] mergeFromCodedInputStream:input] buildParsed];
}
+ (BarResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (BarResponse*)[[[BarResponse newBuilder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] buildParsed];
}

+ (BarResponse_Builder*) newBuilder { return [[[BarResponse_Builder alloc] init] autorelease]; }
- (BarResponse_Builder*) newBuilderForType { return [BarResponse newBuilder]; }
+ (BarResponse_Builder*) newBuilderWithBarResponse:(BarResponse*) prototype {
  return [[BarResponse newBuilder] mergeFromBarResponse:prototype];
}

@end

@implementation BarResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if (self = [super init]) {
    self.result = [[[BarResponse alloc] init] autorelease];
  }
  return self;
}
- (BarResponse*) internalGetResult {
  return result;
}

- (BarResponse_Builder*) clear {
  self.result = [[[BarResponse alloc] init] autorelease];
  return self;
}

- (BarResponse_Builder*) clone {
  return (BarResponse_Builder*)[[[[BarResponse_Builder alloc] init] autorelease] mergeFromBarResponse:result];
}

- (PBDescriptor*) descriptorForType {
  return [BarResponse descriptor];
}

- (BarResponse*) defaultInstanceForType {
  return [BarResponse defaultInstance];
}

- (BarResponse*) build {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (BarResponse*) buildParsed {
  if (!self.isInitialized) {
    @throw [NSException exceptionWithName:@"UninitializedMessage" reason:@"" userInfo:nil];
  }
  return [self buildPartial];
}

- (BarResponse*) buildPartial {
  BarResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}

- (BarResponse_Builder*) mergeFromMessage:(id<PBMessage>) other {
  id o = other;
  if ([o isKindOfClass:[BarResponse class]]) {
    return [self mergeFromBarResponse:o];
  } else {
    [super mergeFromMessage:other];
    return self;
  }
}

- (BarResponse_Builder*) mergeFromBarResponse:(BarResponse*) other {
  if (other == [BarResponse defaultInstance]) return self;
  [self mergeUnknownFields:other.unknownFields];
  return self;
}

- (BarResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}

- (BarResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet newBuilder:self.unknownFields];
  while (true) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}

@end

@implementation TestService
- (void) fooWithController:(id<PBRpcController>) controller
                      request:(FooRequest*) request
                       target:(id) target
                     selector:(SEL) selector {
  @throw [NSException exceptionWithName:@"NYI" reason:@"" userInfo:nil];
}
- (void) barWithController:(id<PBRpcController>) controller
                      request:(BarRequest*) request
                       target:(id) target
                     selector:(SEL) selector {
  @throw [NSException exceptionWithName:@"NYI" reason:@"" userInfo:nil];
}

+ (PBServiceDescriptor*) descriptor {
  return [[UnittestProtoRoot descriptor].services objectAtIndex:0];
}
- (PBServiceDescriptor*) descriptorForType {
  return [TestService descriptor];
}

- (void) callMethod:(PBMethodDescriptor*) method
         controller:(id<PBRpcController>) controller
            request:(id<PBMessage>) request
             target:(id) target
           selector:(SEL) selector {
  if (method.service != self.descriptorForType) {
    @throw [NSException exceptionWithName:@"NYI" reason:@"" userInfo:nil];
  }
  switch(method.index) {
    case 0:
      [self fooWithController:controller request:(id)request target:target selector:selector];
      return;
    case 1:
      [self barWithController:controller request:(id)request target:target selector:selector];
      return;
    default:
      @throw [NSException exceptionWithName:@"NYI" reason:@"" userInfo:nil];
  }
}

- (id<PBMessage>) getRequestPrototype:(PBMethodDescriptor*) method {
  if (method.service != self.descriptorForType) {
    @throw [NSException exceptionWithName:@"IllegalArgument" reason:@"" userInfo:nil];
  }
  switch(method.index) {
    case 0:
      return [FooRequest defaultInstance];
    case 1:
      return [BarRequest defaultInstance];
    default:
      @throw [NSException exceptionWithName:@"RuntimeError" reason:@"" userInfo:nil];
  }
}

- (id<PBMessage>) getResponsePrototype:(PBMethodDescriptor*) method {
  if (method.service != self.descriptorForType) {
    @throw [NSException exceptionWithName:@"IllegalArgument" reason:@"" userInfo:nil];
  }
  switch(method.index) {
    case 0:
      return [FooResponse defaultInstance];
    case 1:
      return [BarResponse defaultInstance];
    default:
      @throw [NSException exceptionWithName:@"RuntimeError" reason:@"" userInfo:nil];
  }
}

@end

@implementation TestService_Stub

@synthesize channel;

- (void) dealloc {
  self.channel = nil;
  [super dealloc];
}

- (id) initWithChannel:(id<PBRpcChannel>) channel_ {
  if (self = [super init]) {
    self.channel = channel_;
  }
  return self;
}

+ (TestService_Stub*) stubWithChannel:(id<PBRpcChannel>) channel {
  return [[[TestService_Stub alloc] initWithChannel:channel] autorelease];
}


- (void) fooWithController:(id<PBRpcController>) controller
                        request:(FooRequest*) request
                         target:(id) target
                       selector:(SEL) selector {
  [channel callMethod:[[TestService descriptor].methods objectAtIndex:0]
           controller:controller
              request:request
             response:[FooResponse defaultInstance]
               target:target
             selector:selector];
}

- (void) barWithController:(id<PBRpcController>) controller
                        request:(BarRequest*) request
                         target:(id) target
                       selector:(SEL) selector {
  [channel callMethod:[[TestService descriptor].methods objectAtIndex:1]
           controller:controller
              request:request
             response:[BarResponse defaultInstance]
               target:target
             selector:selector];
}
@end

